ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"filter.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.setSensorConstant,"ax",%progbits
  18              		.align	1
  19              		.global	setSensorConstant
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	setSensorConstant:
  26              	.LFB126:
  27              		.file 1 "Src/filter.c"
   1:Src/filter.c  **** #include "filter.h"
   2:Src/filter.c  **** #include "adc.h"
   3:Src/filter.c  **** #include "stm32f4xx_hal.h"
   4:Src/filter.c  **** #include "tim.h"
   5:Src/filter.c  **** #include "main.h"
   6:Src/filter.c  **** #include "gpio.h"
   7:Src/filter.c  **** #include "stdint.h"
   8:Src/filter.c  **** #include "filter.h"
   9:Src/filter.c  **** #include "interface.h"
  10:Src/filter.c  **** 
  11:Src/filter.c  **** 
  12:Src/filter.c  **** #define OFF_VALUE 0
  13:Src/filter.c  **** #define LEFT_VALUE 1
  14:Src/filter.c  **** #define RIGHT_VALUE 2
  15:Src/filter.c  **** #define FINISH_CONVERT 3
  16:Src/filter.c  **** 
  17:Src/filter.c  **** #define ADC_CONVERT_DATA_SIZE 4
  18:Src/filter.c  **** 
  19:Src/filter.c  **** #define TRUE 1
  20:Src/filter.c  **** #define FALSE 0
  21:Src/filter.c  **** 
  22:Src/filter.c  **** 
  23:Src/filter.c  **** sensor_t sen_l;
  24:Src/filter.c  **** sensor_t sen_fl;
  25:Src/filter.c  **** sensor_t sen_front;
  26:Src/filter.c  **** sensor_t sen_fr;
  27:Src/filter.c  **** sensor_t sen_r;
  28:Src/filter.c  **** 
  29:Src/filter.c  **** uint16_t ADCBuff[ADC_CONVERT_DATA_SIZE];
  30:Src/filter.c  **** uint16_t ADCOffData[ADC_CONVERT_DATA_SIZE];
  31:Src/filter.c  **** uint16_t ADCOntData[ADC_CONVERT_DATA_SIZE];
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 2


  32:Src/filter.c  **** int16_t adc_counter;
  33:Src/filter.c  **** 
  34:Src/filter.c  **** void setSensorConstant(void)
  35:Src/filter.c  **** {
  28              		.loc 1 35 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  36:Src/filter.c  ****   sen_l.reference = 560;
  33              		.loc 1 36 0
  34 0000 0A4B     		ldr	r3, .L2
  35 0002 4FF40C72 		mov	r2, #560
  36 0006 9A80     		strh	r2, [r3, #4]	@ movhi
  37:Src/filter.c  ****   sen_l.threshold = 480;
  37              		.loc 1 37 0
  38 0008 4FF4F072 		mov	r2, #480
  39 000c DA80     		strh	r2, [r3, #6]	@ movhi
  38:Src/filter.c  **** 
  39:Src/filter.c  ****   sen_front.reference = 340;
  40              		.loc 1 39 0
  41 000e 084B     		ldr	r3, .L2+4
  42 0010 4FF4AA72 		mov	r2, #340
  43 0014 9A80     		strh	r2, [r3, #4]	@ movhi
  40:Src/filter.c  ****   sen_front.threshold = 310;
  44              		.loc 1 40 0
  45 0016 4FF49B72 		mov	r2, #310
  46 001a DA80     		strh	r2, [r3, #6]	@ movhi
  41:Src/filter.c  **** 
  42:Src/filter.c  ****   sen_r.reference = 654;
  47              		.loc 1 42 0
  48 001c 054B     		ldr	r3, .L2+8
  49 001e 40F28E22 		movw	r2, #654
  50 0022 9A80     		strh	r2, [r3, #4]	@ movhi
  43:Src/filter.c  ****   sen_r.threshold = 555;
  51              		.loc 1 43 0
  52 0024 40F22B22 		movw	r2, #555
  53 0028 DA80     		strh	r2, [r3, #6]	@ movhi
  44:Src/filter.c  **** }
  54              		.loc 1 44 0
  55 002a 7047     		bx	lr
  56              	.L3:
  57              		.align	2
  58              	.L2:
  59 002c 00000000 		.word	sen_l
  60 0030 00000000 		.word	sen_front
  61 0034 00000000 		.word	sen_r
  62              		.cfi_endproc
  63              	.LFE126:
  65              		.section	.text.update_sensor_data,"ax",%progbits
  66              		.align	1
  67              		.global	update_sensor_data
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu fpv4-sp-d16
  73              	update_sensor_data:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 3


  74              	.LFB127:
  45:Src/filter.c  **** 
  46:Src/filter.c  **** void update_sensor_data(void)
  47:Src/filter.c  **** {
  75              		.loc 1 47 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  48:Src/filter.c  **** 
  49:Src/filter.c  ****   sen_front.now = (sen_fl.now + sen_fr.now) / 2;
  80              		.loc 1 49 0
  81 0000 1A4B     		ldr	r3, .L12
  82 0002 B3F90030 		ldrsh	r3, [r3]
  83 0006 1A4A     		ldr	r2, .L12+4
  84 0008 B2F90020 		ldrsh	r2, [r2]
  85 000c 1344     		add	r3, r3, r2
  86 000e 03EBD373 		add	r3, r3, r3, lsr #31
  87 0012 43F34F03 		sbfx	r3, r3, #1, #16
  88 0016 174A     		ldr	r2, .L12+8
  89 0018 1380     		strh	r3, [r2]	@ movhi
  50:Src/filter.c  **** 
  51:Src/filter.c  ****   if (sen_front.now < sen_front.threshold)
  90              		.loc 1 51 0
  91 001a B2F90620 		ldrsh	r2, [r2, #6]
  92 001e 9342     		cmp	r3, r2
  93 0020 17DA     		bge	.L5
  52:Src/filter.c  ****   {
  53:Src/filter.c  ****     sen_front.is_wall = FALSE;
  94              		.loc 1 53 0
  95 0022 144B     		ldr	r3, .L12+8
  96 0024 0022     		movs	r2, #0
  97 0026 1A73     		strb	r2, [r3, #12]
  98              	.L6:
  54:Src/filter.c  ****   }
  55:Src/filter.c  ****   else
  56:Src/filter.c  ****   {
  57:Src/filter.c  ****     sen_front.is_wall = TRUE;
  58:Src/filter.c  ****   }
  59:Src/filter.c  **** 
  60:Src/filter.c  ****   if (sen_l.now < sen_l.threshold)
  99              		.loc 1 60 0
 100 0028 134B     		ldr	r3, .L12+12
 101 002a B3F90020 		ldrsh	r2, [r3]
 102 002e B3F90630 		ldrsh	r3, [r3, #6]
 103 0032 9A42     		cmp	r2, r3
 104 0034 11DA     		bge	.L7
  61:Src/filter.c  ****   {
  62:Src/filter.c  ****     sen_l.is_wall = FALSE;
 105              		.loc 1 62 0
 106 0036 104B     		ldr	r3, .L12+12
 107 0038 0022     		movs	r2, #0
 108 003a 1A73     		strb	r2, [r3, #12]
 109              	.L8:
  63:Src/filter.c  ****   }
  64:Src/filter.c  ****   else
  65:Src/filter.c  ****   {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 4


  66:Src/filter.c  ****     sen_l.is_wall = TRUE;
  67:Src/filter.c  ****   }
  68:Src/filter.c  **** 
  69:Src/filter.c  ****   if (sen_r.now < sen_r.threshold)
 110              		.loc 1 69 0
 111 003c 0F4B     		ldr	r3, .L12+16
 112 003e B3F90020 		ldrsh	r2, [r3]
 113 0042 B3F90630 		ldrsh	r3, [r3, #6]
 114 0046 9A42     		cmp	r2, r3
 115 0048 0BDB     		blt	.L11
  70:Src/filter.c  ****   {
  71:Src/filter.c  ****     sen_r.is_wall = FALSE;
  72:Src/filter.c  ****   }
  73:Src/filter.c  ****   else
  74:Src/filter.c  ****   {
  75:Src/filter.c  ****     sen_r.is_wall = TRUE;
 116              		.loc 1 75 0
 117 004a 0C4B     		ldr	r3, .L12+16
 118 004c 0122     		movs	r2, #1
 119 004e 1A73     		strb	r2, [r3, #12]
  76:Src/filter.c  ****   }
  77:Src/filter.c  **** }
 120              		.loc 1 77 0
 121 0050 7047     		bx	lr
 122              	.L5:
  57:Src/filter.c  ****   }
 123              		.loc 1 57 0
 124 0052 084B     		ldr	r3, .L12+8
 125 0054 0122     		movs	r2, #1
 126 0056 1A73     		strb	r2, [r3, #12]
 127 0058 E6E7     		b	.L6
 128              	.L7:
  66:Src/filter.c  ****   }
 129              		.loc 1 66 0
 130 005a 074B     		ldr	r3, .L12+12
 131 005c 0122     		movs	r2, #1
 132 005e 1A73     		strb	r2, [r3, #12]
 133 0060 ECE7     		b	.L8
 134              	.L11:
  71:Src/filter.c  ****   }
 135              		.loc 1 71 0
 136 0062 064B     		ldr	r3, .L12+16
 137 0064 0022     		movs	r2, #0
 138 0066 1A73     		strb	r2, [r3, #12]
 139 0068 7047     		bx	lr
 140              	.L13:
 141 006a 00BF     		.align	2
 142              	.L12:
 143 006c 00000000 		.word	sen_fl
 144 0070 00000000 		.word	sen_fr
 145 0074 00000000 		.word	sen_front
 146 0078 00000000 		.word	sen_l
 147 007c 00000000 		.word	sen_r
 148              		.cfi_endproc
 149              	.LFE127:
 151              		.section	.text.adcStart,"ax",%progbits
 152              		.align	1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 5


 153              		.global	adcStart
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv4-sp-d16
 159              	adcStart:
 160              	.LFB128:
  78:Src/filter.c  **** 
  79:Src/filter.c  **** void adcStart(void)
  80:Src/filter.c  **** {
 161              		.loc 1 80 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 08B5     		push	{r3, lr}
 166              	.LCFI0:
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 3, -8
 169              		.cfi_offset 14, -4
  81:Src/filter.c  ****   adc_counter = 0;
 170              		.loc 1 81 0
 171 0002 044B     		ldr	r3, .L16
 172 0004 0022     		movs	r2, #0
 173 0006 1A80     		strh	r2, [r3]	@ movhi
  82:Src/filter.c  ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t *)ADCBuff, ADC_CONVERT_DATA_SIZE);
 174              		.loc 1 82 0
 175 0008 0422     		movs	r2, #4
 176 000a 0349     		ldr	r1, .L16+4
 177 000c 0348     		ldr	r0, .L16+8
 178 000e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 179              	.LVL0:
  83:Src/filter.c  **** }
 180              		.loc 1 83 0
 181 0012 08BD     		pop	{r3, pc}
 182              	.L17:
 183              		.align	2
 184              	.L16:
 185 0014 00000000 		.word	adc_counter
 186 0018 00000000 		.word	ADCBuff
 187 001c 00000000 		.word	hadc1
 188              		.cfi_endproc
 189              	.LFE128:
 191              		.section	.text.adcCheckConvert,"ax",%progbits
 192              		.align	1
 193              		.global	adcCheckConvert
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	adcCheckConvert:
 200              	.LFB129:
  84:Src/filter.c  **** 
  85:Src/filter.c  **** void adcCheckConvert(void)
  86:Src/filter.c  **** {
 201              		.loc 1 86 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 6


 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI1:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
  87:Src/filter.c  ****   if (adc_counter == FINISH_CONVERT)
 210              		.loc 1 87 0
 211 0002 104B     		ldr	r3, .L22
 212 0004 B3F90030 		ldrsh	r3, [r3]
 213 0008 032B     		cmp	r3, #3
 214 000a 00D0     		beq	.L21
 215              	.L18:
  88:Src/filter.c  ****   {
  89:Src/filter.c  ****     update_sensor_data();
  90:Src/filter.c  ****     adc_counter = 0;
  91:Src/filter.c  ****     HAL_ADC_Start_DMA(&hadc1, (uint32_t *)ADCBuff, ADC_CONVERT_DATA_SIZE);
  92:Src/filter.c  **** 
  93:Src/filter.c  ****     sen_l.diff_1ms = sen_l.now - sen_l.befor_1ms;
  94:Src/filter.c  ****     sen_l.befor_1ms = sen_l.now;
  95:Src/filter.c  **** 
  96:Src/filter.c  ****     sen_r.diff_1ms = sen_r.now - sen_r.befor_1ms;
  97:Src/filter.c  ****     sen_r.befor_1ms = sen_r.now;
  98:Src/filter.c  ****   }
  99:Src/filter.c  **** }
 216              		.loc 1 99 0
 217 000c 08BD     		pop	{r3, pc}
 218              	.L21:
  89:Src/filter.c  ****     adc_counter = 0;
 219              		.loc 1 89 0
 220 000e FFF7FEFF 		bl	update_sensor_data
 221              	.LVL1:
  90:Src/filter.c  ****     HAL_ADC_Start_DMA(&hadc1, (uint32_t *)ADCBuff, ADC_CONVERT_DATA_SIZE);
 222              		.loc 1 90 0
 223 0012 0C4B     		ldr	r3, .L22
 224 0014 0022     		movs	r2, #0
 225 0016 1A80     		strh	r2, [r3]	@ movhi
  91:Src/filter.c  **** 
 226              		.loc 1 91 0
 227 0018 0422     		movs	r2, #4
 228 001a 0B49     		ldr	r1, .L22+4
 229 001c 0B48     		ldr	r0, .L22+8
 230 001e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 231              	.LVL2:
  93:Src/filter.c  ****     sen_l.befor_1ms = sen_l.now;
 232              		.loc 1 93 0
 233 0022 0B4B     		ldr	r3, .L22+12
 234 0024 B3F90010 		ldrsh	r1, [r3]
 235 0028 8AB2     		uxth	r2, r1
 236 002a 5888     		ldrh	r0, [r3, #2]
 237 002c 121A     		subs	r2, r2, r0
 238 002e 5A81     		strh	r2, [r3, #10]	@ movhi
  94:Src/filter.c  **** 
 239              		.loc 1 94 0
 240 0030 5980     		strh	r1, [r3, #2]	@ movhi
  96:Src/filter.c  ****     sen_r.befor_1ms = sen_r.now;
 241              		.loc 1 96 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 7


 242 0032 084B     		ldr	r3, .L22+16
 243 0034 B3F90010 		ldrsh	r1, [r3]
 244 0038 8AB2     		uxth	r2, r1
 245 003a 5888     		ldrh	r0, [r3, #2]
 246 003c 121A     		subs	r2, r2, r0
 247 003e 5A81     		strh	r2, [r3, #10]	@ movhi
  97:Src/filter.c  ****   }
 248              		.loc 1 97 0
 249 0040 5980     		strh	r1, [r3, #2]	@ movhi
 250              		.loc 1 99 0
 251 0042 E3E7     		b	.L18
 252              	.L23:
 253              		.align	2
 254              	.L22:
 255 0044 00000000 		.word	adc_counter
 256 0048 00000000 		.word	ADCBuff
 257 004c 00000000 		.word	hadc1
 258 0050 00000000 		.word	sen_l
 259 0054 00000000 		.word	sen_r
 260              		.cfi_endproc
 261              	.LFE129:
 263              		.section	.text.getADSensor,"ax",%progbits
 264              		.align	1
 265              		.global	getADSensor
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 269              		.fpu fpv4-sp-d16
 271              	getADSensor:
 272              	.LFB130:
 100:Src/filter.c  **** 
 101:Src/filter.c  **** // DMA の変換式を記載
 102:Src/filter.c  **** void getADSensor(void)
 103:Src/filter.c  **** {
 273              		.loc 1 103 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 8
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 278              	.LCFI2:
 279              		.cfi_def_cfa_offset 20
 280              		.cfi_offset 4, -20
 281              		.cfi_offset 5, -16
 282              		.cfi_offset 6, -12
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 285 0002 83B0     		sub	sp, sp, #12
 286              	.LCFI3:
 287              		.cfi_def_cfa_offset 32
 104:Src/filter.c  ****   volatile unsigned char i;
 105:Src/filter.c  ****   switch (adc_counter)
 288              		.loc 1 105 0
 289 0004 604B     		ldr	r3, .L37
 290 0006 B3F90030 		ldrsh	r3, [r3]
 291 000a 012B     		cmp	r3, #1
 292 000c 34D0     		beq	.L26
 293 000e 022B     		cmp	r3, #2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 8


 294 0010 7DD0     		beq	.L27
 295 0012 0BB1     		cbz	r3, .L36
 296              	.L24:
 106:Src/filter.c  ****   {
 107:Src/filter.c  ****   case OFF_VALUE:
 108:Src/filter.c  ****     HAL_ADC_Stop_DMA(&hadc1);
 109:Src/filter.c  ****     ADCOffData[0] = ADCBuff[0];
 110:Src/filter.c  ****     ADCOffData[1] = ADCBuff[1];
 111:Src/filter.c  ****     ADCOffData[2] = ADCBuff[2];
 112:Src/filter.c  ****     ADCOffData[3] = ADCBuff[3];
 113:Src/filter.c  **** 
 114:Src/filter.c  ****     HAL_GPIO_WritePin(paluse2_GPIO_Port, paluse2_Pin, GPIO_PIN_SET);
 115:Src/filter.c  ****     HAL_GPIO_WritePin(paluse3_GPIO_Port, paluse3_Pin, GPIO_PIN_SET);
 116:Src/filter.c  ****     
 117:Src/filter.c  ****     for (i = 0; i < 100; i++)
 118:Src/filter.c  ****     {
 119:Src/filter.c  ****     }
 120:Src/filter.c  ****     
 121:Src/filter.c  ****     adc_counter = LEFT_VALUE;
 122:Src/filter.c  **** 
 123:Src/filter.c  ****     HAL_ADC_Start_DMA(&hadc1, (uint32_t *)ADCBuff,ADC_CONVERT_DATA_SIZE);
 124:Src/filter.c  ****     break;
 125:Src/filter.c  **** 
 126:Src/filter.c  ****   case LEFT_VALUE:
 127:Src/filter.c  ****     HAL_ADC_Stop_DMA(&hadc1);
 128:Src/filter.c  ****     HAL_GPIO_WritePin(paluse2_GPIO_Port, paluse2_Pin, GPIO_PIN_RESET);
 129:Src/filter.c  ****     HAL_GPIO_WritePin(paluse3_GPIO_Port, paluse3_Pin, GPIO_PIN_RESET);
 130:Src/filter.c  **** 
 131:Src/filter.c  ****     ADCOntData[2] = ADCBuff[2];
 132:Src/filter.c  ****     ADCOntData[3] = ADCBuff[3];
 133:Src/filter.c  **** 
 134:Src/filter.c  ****     sen_l.diff = sen_l.now - (ADCOntData[2] - ADCOffData[2]);
 135:Src/filter.c  ****     sen_l.now = ADCOntData[2] - ADCOffData[2];
 136:Src/filter.c  **** 
 137:Src/filter.c  ****     sen_fl.diff = sen_fl.now - (ADCOntData[3] - ADCOffData[3]);
 138:Src/filter.c  ****     sen_fl.now = ADCOntData[3] - ADCOffData[3];
 139:Src/filter.c  **** 
 140:Src/filter.c  ****     HAL_GPIO_WritePin(paluse0_GPIO_Port, paluse0_Pin, GPIO_PIN_SET);
 141:Src/filter.c  ****     HAL_GPIO_WritePin(paluse1_GPIO_Port, paluse1_Pin, GPIO_PIN_SET);
 142:Src/filter.c  **** 
 143:Src/filter.c  ****     
 144:Src/filter.c  ****     for (i = 0; i < 100; i++)
 145:Src/filter.c  ****     {
 146:Src/filter.c  ****     }
 147:Src/filter.c  ****     
 148:Src/filter.c  ****     adc_counter = RIGHT_VALUE;
 149:Src/filter.c  **** 
 150:Src/filter.c  ****     HAL_ADC_Start_DMA(&hadc1, (uint32_t *)ADCBuff,ADC_CONVERT_DATA_SIZE);
 151:Src/filter.c  ****     break;
 152:Src/filter.c  **** 
 153:Src/filter.c  ****   case RIGHT_VALUE:
 154:Src/filter.c  ****     HAL_ADC_Stop_DMA(&hadc1);
 155:Src/filter.c  ****     HAL_GPIO_WritePin(paluse0_GPIO_Port, paluse0_Pin, GPIO_PIN_RESET);
 156:Src/filter.c  ****     HAL_GPIO_WritePin(paluse1_GPIO_Port, paluse1_Pin, GPIO_PIN_RESET);
 157:Src/filter.c  **** 
 158:Src/filter.c  ****     ADCOntData[0] = ADCBuff[0];
 159:Src/filter.c  ****     ADCOntData[1] = ADCBuff[1];
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 9


 160:Src/filter.c  **** 
 161:Src/filter.c  ****     sen_fr.diff = sen_fr.now - (ADCOntData[0] - ADCOffData[0]);
 162:Src/filter.c  ****     sen_fr.now = ADCOntData[0] - ADCOffData[0];
 163:Src/filter.c  **** 
 164:Src/filter.c  ****     sen_r.diff = sen_r.now - (ADCOntData[1] - ADCOffData[1]);
 165:Src/filter.c  ****     sen_r.now = ADCOntData[1] - ADCOffData[1];
 166:Src/filter.c  ****     
 167:Src/filter.c  ****     for (i = 0; i < 100; i++)
 168:Src/filter.c  ****     {
 169:Src/filter.c  ****     }
 170:Src/filter.c  ****     
 171:Src/filter.c  ****     adc_counter = FINISH_CONVERT;
 172:Src/filter.c  ****     break;
 173:Src/filter.c  **** 
 174:Src/filter.c  ****   default:
 175:Src/filter.c  ****     break;
 176:Src/filter.c  ****   }
 177:Src/filter.c  **** }
 297              		.loc 1 177 0
 298 0014 03B0     		add	sp, sp, #12
 299              	.LCFI4:
 300              		.cfi_remember_state
 301              		.cfi_def_cfa_offset 20
 302              		@ sp needed
 303 0016 F0BD     		pop	{r4, r5, r6, r7, pc}
 304              	.L36:
 305              	.LCFI5:
 306              		.cfi_restore_state
 108:Src/filter.c  ****     ADCOffData[0] = ADCBuff[0];
 307              		.loc 1 108 0
 308 0018 5C48     		ldr	r0, .L37+4
 309 001a FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 310              	.LVL3:
 109:Src/filter.c  ****     ADCOffData[1] = ADCBuff[1];
 311              		.loc 1 109 0
 312 001e 5C4A     		ldr	r2, .L37+8
 313 0020 1188     		ldrh	r1, [r2]
 314 0022 5C4B     		ldr	r3, .L37+12
 315 0024 1980     		strh	r1, [r3]	@ movhi
 110:Src/filter.c  ****     ADCOffData[2] = ADCBuff[2];
 316              		.loc 1 110 0
 317 0026 5188     		ldrh	r1, [r2, #2]
 318 0028 5980     		strh	r1, [r3, #2]	@ movhi
 111:Src/filter.c  ****     ADCOffData[3] = ADCBuff[3];
 319              		.loc 1 111 0
 320 002a 9188     		ldrh	r1, [r2, #4]
 321 002c 9980     		strh	r1, [r3, #4]	@ movhi
 112:Src/filter.c  **** 
 322              		.loc 1 112 0
 323 002e D288     		ldrh	r2, [r2, #6]
 324 0030 DA80     		strh	r2, [r3, #6]	@ movhi
 114:Src/filter.c  ****     HAL_GPIO_WritePin(paluse3_GPIO_Port, paluse3_Pin, GPIO_PIN_SET);
 325              		.loc 1 114 0
 326 0032 594C     		ldr	r4, .L37+16
 327 0034 0122     		movs	r2, #1
 328 0036 0421     		movs	r1, #4
 329 0038 2046     		mov	r0, r4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 10


 330 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 331              	.LVL4:
 115:Src/filter.c  ****     
 332              		.loc 1 115 0
 333 003e 0122     		movs	r2, #1
 334 0040 0821     		movs	r1, #8
 335 0042 2046     		mov	r0, r4
 336 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 337              	.LVL5:
 117:Src/filter.c  ****     {
 338              		.loc 1 117 0
 339 0048 0023     		movs	r3, #0
 340 004a 8DF80730 		strb	r3, [sp, #7]
 341 004e 05E0     		b	.L29
 342              	.L30:
 117:Src/filter.c  ****     {
 343              		.loc 1 117 0 is_stmt 0 discriminator 3
 344 0050 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 345 0054 0133     		adds	r3, r3, #1
 346 0056 DBB2     		uxtb	r3, r3
 347 0058 8DF80730 		strb	r3, [sp, #7]
 348              	.L29:
 117:Src/filter.c  ****     {
 349              		.loc 1 117 0 discriminator 1
 350 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 351 0060 DBB2     		uxtb	r3, r3
 352 0062 632B     		cmp	r3, #99
 353 0064 F4D9     		bls	.L30
 121:Src/filter.c  **** 
 354              		.loc 1 121 0 is_stmt 1
 355 0066 484B     		ldr	r3, .L37
 356 0068 0122     		movs	r2, #1
 357 006a 1A80     		strh	r2, [r3]	@ movhi
 123:Src/filter.c  ****     break;
 358              		.loc 1 123 0
 359 006c 0422     		movs	r2, #4
 360 006e 4849     		ldr	r1, .L37+8
 361 0070 4648     		ldr	r0, .L37+4
 362 0072 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 363              	.LVL6:
 124:Src/filter.c  **** 
 364              		.loc 1 124 0
 365 0076 CDE7     		b	.L24
 366              	.L26:
 127:Src/filter.c  ****     HAL_GPIO_WritePin(paluse2_GPIO_Port, paluse2_Pin, GPIO_PIN_RESET);
 367              		.loc 1 127 0
 368 0078 4448     		ldr	r0, .L37+4
 369 007a FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 370              	.LVL7:
 128:Src/filter.c  ****     HAL_GPIO_WritePin(paluse3_GPIO_Port, paluse3_Pin, GPIO_PIN_RESET);
 371              		.loc 1 128 0
 372 007e 464C     		ldr	r4, .L37+16
 373 0080 0022     		movs	r2, #0
 374 0082 0421     		movs	r1, #4
 375 0084 2046     		mov	r0, r4
 376 0086 FFF7FEFF 		bl	HAL_GPIO_WritePin
 377              	.LVL8:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 11


 129:Src/filter.c  **** 
 378              		.loc 1 129 0
 379 008a 0022     		movs	r2, #0
 380 008c 0821     		movs	r1, #8
 381 008e 2046     		mov	r0, r4
 382 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 383              	.LVL9:
 131:Src/filter.c  ****     ADCOntData[3] = ADCBuff[3];
 384              		.loc 1 131 0
 385 0094 3E4B     		ldr	r3, .L37+8
 386 0096 9A88     		ldrh	r2, [r3, #4]
 387 0098 4049     		ldr	r1, .L37+20
 388 009a 8A80     		strh	r2, [r1, #4]	@ movhi
 132:Src/filter.c  **** 
 389              		.loc 1 132 0
 390 009c DB88     		ldrh	r3, [r3, #6]
 391 009e CB80     		strh	r3, [r1, #6]	@ movhi
 134:Src/filter.c  ****     sen_l.now = ADCOntData[2] - ADCOffData[2];
 392              		.loc 1 134 0
 393 00a0 3F49     		ldr	r1, .L37+24
 394 00a2 B1F90070 		ldrsh	r7, [r1]
 395 00a6 3B4D     		ldr	r5, .L37+12
 396 00a8 AE88     		ldrh	r6, [r5, #4]
 397 00aa B01A     		subs	r0, r6, r2
 398 00ac 17FA80F0 		uxtah	r0, r7, r0
 399 00b0 0881     		strh	r0, [r1, #8]	@ movhi
 135:Src/filter.c  **** 
 400              		.loc 1 135 0
 401 00b2 921B     		subs	r2, r2, r6
 402 00b4 0A80     		strh	r2, [r1]	@ movhi
 137:Src/filter.c  ****     sen_fl.now = ADCOntData[3] - ADCOffData[3];
 403              		.loc 1 137 0
 404 00b6 3B4A     		ldr	r2, .L37+28
 405 00b8 B2F90060 		ldrsh	r6, [r2]
 406 00bc E888     		ldrh	r0, [r5, #6]
 407 00be C11A     		subs	r1, r0, r3
 408 00c0 16FA81F1 		uxtah	r1, r6, r1
 409 00c4 1181     		strh	r1, [r2, #8]	@ movhi
 138:Src/filter.c  **** 
 410              		.loc 1 138 0
 411 00c6 1B1A     		subs	r3, r3, r0
 412 00c8 1380     		strh	r3, [r2]	@ movhi
 140:Src/filter.c  ****     HAL_GPIO_WritePin(paluse1_GPIO_Port, paluse1_Pin, GPIO_PIN_SET);
 413              		.loc 1 140 0
 414 00ca 0122     		movs	r2, #1
 415 00cc 1146     		mov	r1, r2
 416 00ce 2046     		mov	r0, r4
 417 00d0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 418              	.LVL10:
 141:Src/filter.c  **** 
 419              		.loc 1 141 0
 420 00d4 0122     		movs	r2, #1
 421 00d6 0221     		movs	r1, #2
 422 00d8 2046     		mov	r0, r4
 423 00da FFF7FEFF 		bl	HAL_GPIO_WritePin
 424              	.LVL11:
 144:Src/filter.c  ****     {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 12


 425              		.loc 1 144 0
 426 00de 0023     		movs	r3, #0
 427 00e0 8DF80730 		strb	r3, [sp, #7]
 428 00e4 05E0     		b	.L31
 429              	.L32:
 144:Src/filter.c  ****     {
 430              		.loc 1 144 0 is_stmt 0 discriminator 3
 431 00e6 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 432 00ea 0133     		adds	r3, r3, #1
 433 00ec DBB2     		uxtb	r3, r3
 434 00ee 8DF80730 		strb	r3, [sp, #7]
 435              	.L31:
 144:Src/filter.c  ****     {
 436              		.loc 1 144 0 discriminator 1
 437 00f2 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 438 00f6 DBB2     		uxtb	r3, r3
 439 00f8 632B     		cmp	r3, #99
 440 00fa F4D9     		bls	.L32
 148:Src/filter.c  **** 
 441              		.loc 1 148 0 is_stmt 1
 442 00fc 224B     		ldr	r3, .L37
 443 00fe 0222     		movs	r2, #2
 444 0100 1A80     		strh	r2, [r3]	@ movhi
 150:Src/filter.c  ****     break;
 445              		.loc 1 150 0
 446 0102 0422     		movs	r2, #4
 447 0104 2249     		ldr	r1, .L37+8
 448 0106 2148     		ldr	r0, .L37+4
 449 0108 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 450              	.LVL12:
 151:Src/filter.c  **** 
 451              		.loc 1 151 0
 452 010c 82E7     		b	.L24
 453              	.L27:
 154:Src/filter.c  ****     HAL_GPIO_WritePin(paluse0_GPIO_Port, paluse0_Pin, GPIO_PIN_RESET);
 454              		.loc 1 154 0
 455 010e 1F48     		ldr	r0, .L37+4
 456 0110 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 457              	.LVL13:
 155:Src/filter.c  ****     HAL_GPIO_WritePin(paluse1_GPIO_Port, paluse1_Pin, GPIO_PIN_RESET);
 458              		.loc 1 155 0
 459 0114 204C     		ldr	r4, .L37+16
 460 0116 0022     		movs	r2, #0
 461 0118 0121     		movs	r1, #1
 462 011a 2046     		mov	r0, r4
 463 011c FFF7FEFF 		bl	HAL_GPIO_WritePin
 464              	.LVL14:
 156:Src/filter.c  **** 
 465              		.loc 1 156 0
 466 0120 0022     		movs	r2, #0
 467 0122 0221     		movs	r1, #2
 468 0124 2046     		mov	r0, r4
 469 0126 FFF7FEFF 		bl	HAL_GPIO_WritePin
 470              	.LVL15:
 158:Src/filter.c  ****     ADCOntData[1] = ADCBuff[1];
 471              		.loc 1 158 0
 472 012a 194B     		ldr	r3, .L37+8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 13


 473 012c 1A88     		ldrh	r2, [r3]
 474 012e 1B49     		ldr	r1, .L37+20
 475 0130 0A80     		strh	r2, [r1]	@ movhi
 159:Src/filter.c  **** 
 476              		.loc 1 159 0
 477 0132 5B88     		ldrh	r3, [r3, #2]
 478 0134 4B80     		strh	r3, [r1, #2]	@ movhi
 161:Src/filter.c  ****     sen_fr.now = ADCOntData[0] - ADCOffData[0];
 479              		.loc 1 161 0
 480 0136 1C49     		ldr	r1, .L37+32
 481 0138 B1F90060 		ldrsh	r6, [r1]
 482 013c 154C     		ldr	r4, .L37+12
 483 013e 2588     		ldrh	r5, [r4]
 484 0140 A81A     		subs	r0, r5, r2
 485 0142 16FA80F0 		uxtah	r0, r6, r0
 486 0146 0881     		strh	r0, [r1, #8]	@ movhi
 162:Src/filter.c  **** 
 487              		.loc 1 162 0
 488 0148 521B     		subs	r2, r2, r5
 489 014a 0A80     		strh	r2, [r1]	@ movhi
 164:Src/filter.c  ****     sen_r.now = ADCOntData[1] - ADCOffData[1];
 490              		.loc 1 164 0
 491 014c 174A     		ldr	r2, .L37+36
 492 014e B2F90050 		ldrsh	r5, [r2]
 493 0152 6088     		ldrh	r0, [r4, #2]
 494 0154 C11A     		subs	r1, r0, r3
 495 0156 15FA81F1 		uxtah	r1, r5, r1
 496 015a 1181     		strh	r1, [r2, #8]	@ movhi
 165:Src/filter.c  ****     
 497              		.loc 1 165 0
 498 015c 1B1A     		subs	r3, r3, r0
 499 015e 1380     		strh	r3, [r2]	@ movhi
 167:Src/filter.c  ****     {
 500              		.loc 1 167 0
 501 0160 0023     		movs	r3, #0
 502 0162 8DF80730 		strb	r3, [sp, #7]
 503 0166 05E0     		b	.L33
 504              	.L34:
 167:Src/filter.c  ****     {
 505              		.loc 1 167 0 is_stmt 0 discriminator 3
 506 0168 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 507 016c 0133     		adds	r3, r3, #1
 508 016e DBB2     		uxtb	r3, r3
 509 0170 8DF80730 		strb	r3, [sp, #7]
 510              	.L33:
 167:Src/filter.c  ****     {
 511              		.loc 1 167 0 discriminator 1
 512 0174 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 513 0178 DBB2     		uxtb	r3, r3
 514 017a 632B     		cmp	r3, #99
 515 017c F4D9     		bls	.L34
 171:Src/filter.c  ****     break;
 516              		.loc 1 171 0 is_stmt 1
 517 017e 024B     		ldr	r3, .L37
 518 0180 0322     		movs	r2, #3
 519 0182 1A80     		strh	r2, [r3]	@ movhi
 520              		.loc 1 177 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 14


 521 0184 46E7     		b	.L24
 522              	.L38:
 523 0186 00BF     		.align	2
 524              	.L37:
 525 0188 00000000 		.word	adc_counter
 526 018c 00000000 		.word	hadc1
 527 0190 00000000 		.word	ADCBuff
 528 0194 00000000 		.word	ADCOffData
 529 0198 00080240 		.word	1073874944
 530 019c 00000000 		.word	ADCOntData
 531 01a0 00000000 		.word	sen_l
 532 01a4 00000000 		.word	sen_fl
 533 01a8 00000000 		.word	sen_fr
 534 01ac 00000000 		.word	sen_r
 535              		.cfi_endproc
 536              	.LFE130:
 538              		.section	.text.Filter_GetBatt,"ax",%progbits
 539              		.align	1
 540              		.global	Filter_GetBatt
 541              		.syntax unified
 542              		.thumb
 543              		.thumb_func
 544              		.fpu fpv4-sp-d16
 546              	Filter_GetBatt:
 547              	.LFB131:
 178:Src/filter.c  **** 
 179:Src/filter.c  **** float Filter_GetBatt(void)
 180:Src/filter.c  **** {
 548              		.loc 1 180 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 8
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552 0000 30B5     		push	{r4, r5, lr}
 553              	.LCFI6:
 554              		.cfi_def_cfa_offset 12
 555              		.cfi_offset 4, -12
 556              		.cfi_offset 5, -8
 557              		.cfi_offset 14, -4
 558 0002 2DED028B 		vpush.64	{d8}
 559              	.LCFI7:
 560              		.cfi_def_cfa_offset 20
 561              		.cfi_offset 80, -20
 562              		.cfi_offset 81, -16
 563 0006 83B0     		sub	sp, sp, #12
 564              	.LCFI8:
 565              		.cfi_def_cfa_offset 32
 566              	.LVL16:
 567              	.LBB2:
 181:Src/filter.c  ****   float batt = 0;
 182:Src/filter.c  ****   for (int i = 0; i < 10; i++)
 568              		.loc 1 182 0
 569 0008 0024     		movs	r4, #0
 570              	.LBE2:
 181:Src/filter.c  ****   float batt = 0;
 571              		.loc 1 181 0
 572 000a 9FED1F8A 		vldr.32	s16, .L44
 573              	.LBB3:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 15


 574              		.loc 1 182 0
 575 000e 16E0     		b	.L40
 576              	.LVL17:
 577              	.L42:
 183:Src/filter.c  ****   {
 184:Src/filter.c  ****     HAL_ADC_Start(&hadc2); // ad convert start
 578              		.loc 1 184 0
 579 0010 1E48     		ldr	r0, .L44+4
 580 0012 FFF7FEFF 		bl	HAL_ADC_Start
 581              	.LVL18:
 582              	.L41:
 185:Src/filter.c  ****     while (HAL_ADC_PollForConversion(&hadc2, 50) != HAL_OK)
 583              		.loc 1 185 0 discriminator 1
 584 0016 3221     		movs	r1, #50
 585 0018 1C48     		ldr	r0, .L44+4
 586 001a FFF7FEFF 		bl	HAL_ADC_PollForConversion
 587              	.LVL19:
 588 001e 0028     		cmp	r0, #0
 589 0020 F9D1     		bne	.L41
 186:Src/filter.c  ****     {
 187:Src/filter.c  ****     } // trans
 188:Src/filter.c  ****     batt += HAL_ADC_GetValue(&hadc2);
 590              		.loc 1 188 0 discriminator 2
 591 0022 1A4D     		ldr	r5, .L44+4
 592 0024 2846     		mov	r0, r5
 593 0026 FFF7FEFF 		bl	HAL_ADC_GetValue
 594              	.LVL20:
 595 002a 07EE900A 		vmov	s15, r0	@ int
 596 002e F8EE677A 		vcvt.f32.u32	s15, s15
 597 0032 38EE278A 		vadd.f32	s16, s16, s15
 598              	.LVL21:
 189:Src/filter.c  ****     HAL_ADC_Stop(&hadc2);
 599              		.loc 1 189 0 discriminator 2
 600 0036 2846     		mov	r0, r5
 601 0038 FFF7FEFF 		bl	HAL_ADC_Stop
 602              	.LVL22:
 182:Src/filter.c  ****   {
 603              		.loc 1 182 0 discriminator 2
 604 003c 0134     		adds	r4, r4, #1
 605              	.LVL23:
 606              	.L40:
 182:Src/filter.c  ****   {
 607              		.loc 1 182 0 is_stmt 0 discriminator 1
 608 003e 092C     		cmp	r4, #9
 609 0040 E6DD     		ble	.L42
 610              	.LBE3:
 190:Src/filter.c  ****   }
 191:Src/filter.c  ****   batt = batt / 10.0f / 4095.0f * 133.0f / 33.0f * 3.3f;
 611              		.loc 1 191 0 is_stmt 1
 612 0042 F2EE047A 		vmov.f32	s15, #1.0e+1
 613 0046 C8EE276A 		vdiv.f32	s13, s16, s15
 614 004a 9FED117A 		vldr.32	s14, .L44+8
 615 004e C6EE877A 		vdiv.f32	s15, s13, s14
 616 0052 9FED107A 		vldr.32	s14, .L44+12
 617 0056 67EE877A 		vmul.f32	s15, s15, s14
 618 005a 9FED0F7A 		vldr.32	s14, .L44+16
 619 005e 87EE878A 		vdiv.f32	s16, s15, s14
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 16


 620              	.LVL24:
 621 0062 DFED0E7A 		vldr.32	s15, .L44+20
 622 0066 28EE278A 		vmul.f32	s16, s16, s15
 623              	.LVL25:
 192:Src/filter.c  ****   LED_Control((unsigned char)batt);
 624              		.loc 1 192 0
 625 006a FCEEC87A 		vcvt.u32.f32	s15, s16
 626 006e CDED017A 		vstr.32	s15, [sp, #4]	@ int
 627 0072 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 628 0076 FFF7FEFF 		bl	LED_Control
 629              	.LVL26:
 193:Src/filter.c  ****   return batt;
 194:Src/filter.c  **** }
 630              		.loc 1 194 0
 631 007a B0EE480A 		vmov.f32	s0, s16
 632 007e 03B0     		add	sp, sp, #12
 633              	.LCFI9:
 634              		.cfi_def_cfa_offset 20
 635              		@ sp needed
 636 0080 BDEC028B 		vldm	sp!, {d8}
 637              	.LCFI10:
 638              		.cfi_restore 80
 639              		.cfi_restore 81
 640              		.cfi_def_cfa_offset 12
 641              	.LVL27:
 642 0084 30BD     		pop	{r4, r5, pc}
 643              	.LVL28:
 644              	.L45:
 645 0086 00BF     		.align	2
 646              	.L44:
 647 0088 00000000 		.word	0
 648 008c 00000000 		.word	hadc2
 649 0090 00F07F45 		.word	1166012416
 650 0094 00000543 		.word	1124401152
 651 0098 00000442 		.word	1107558400
 652 009c 33335340 		.word	1079194419
 653              		.cfi_endproc
 654              	.LFE131:
 656              		.comm	adc_counter,2,2
 657              		.comm	ADCOntData,8,4
 658              		.comm	ADCOffData,8,4
 659              		.comm	ADCBuff,8,4
 660              		.comm	sen_r,14,4
 661              		.comm	sen_fr,14,4
 662              		.comm	sen_front,14,4
 663              		.comm	sen_fl,14,4
 664              		.comm	sen_l,14,4
 665              		.text
 666              	.Letext0:
 667              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 668              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 669              		.file 4 "Inc/filter.h"
 670              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 671              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 672              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 673              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 674              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 17


 675              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 676              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 677              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 678              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 679              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 680              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 681              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 682              		.file 17 "Inc/adc.h"
 683              		.file 18 "Inc/tim.h"
 684              		.file 19 "Inc/interface.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 filter.c
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:18     .text.setSensorConstant:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:25     .text.setSensorConstant:00000000 setSensorConstant
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:59     .text.setSensorConstant:0000002c $d
                            *COM*:0000000e sen_l
                            *COM*:0000000e sen_front
                            *COM*:0000000e sen_r
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:66     .text.update_sensor_data:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:73     .text.update_sensor_data:00000000 update_sensor_data
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:143    .text.update_sensor_data:0000006c $d
                            *COM*:0000000e sen_fl
                            *COM*:0000000e sen_fr
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:152    .text.adcStart:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:159    .text.adcStart:00000000 adcStart
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:185    .text.adcStart:00000014 $d
                            *COM*:00000002 adc_counter
                            *COM*:00000008 ADCBuff
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:192    .text.adcCheckConvert:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:199    .text.adcCheckConvert:00000000 adcCheckConvert
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:255    .text.adcCheckConvert:00000044 $d
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:264    .text.getADSensor:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:271    .text.getADSensor:00000000 getADSensor
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:525    .text.getADSensor:00000188 $d
                            *COM*:00000008 ADCOffData
                            *COM*:00000008 ADCOntData
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:539    .text.Filter_GetBatt:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:546    .text.Filter_GetBatt:00000000 Filter_GetBatt
C:\Users\kotaro\AppData\Local\Temp\cctYCjrK.s:647    .text.Filter_GetBatt:00000088 $d

UNDEFINED SYMBOLS
HAL_ADC_Start_DMA
hadc1
HAL_ADC_Stop_DMA
HAL_GPIO_WritePin
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_ADC_Stop
LED_Control
hadc2
