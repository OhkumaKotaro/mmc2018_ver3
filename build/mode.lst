ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mode.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Mode_Select,"ax",%progbits
  18              		.align	1
  19              		.global	Mode_Select
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Mode_Select:
  26              	.LFB127:
  27              		.file 1 "Src/mode.c"
   1:Src/mode.c    **** #include "mode.h"
   2:Src/mode.c    **** #include "filter.h"
   3:Src/mode.c    **** #include "gpio.h"
   4:Src/mode.c    **** #include "interface.h"
   5:Src/mode.c    **** #include "stdint.h"
   6:Src/mode.c    **** #include "tim.h"
   7:Src/mode.c    **** #include "filter.h"
   8:Src/mode.c    **** #include "motion.h"
   9:Src/mode.c    **** #include "control.h"
  10:Src/mode.c    **** #include "spi.h"
  11:Src/mode.c    **** #include "flash.h"
  12:Src/mode.c    **** #include "maze_info.h"
  13:Src/mode.c    **** #include "motion_plan.h"
  14:Src/mode.c    **** 
  15:Src/mode.c    **** #define TRUE 1
  16:Src/mode.c    **** #define FALSE 0
  17:Src/mode.c    **** #define ON 1
  18:Src/mode.c    **** #define OFF 0
  19:Src/mode.c    **** 
  20:Src/mode.c    **** extern enc_t enc;
  21:Src/mode.c    **** 
  22:Src/mode.c    **** extern sensor_t sen_l;
  23:Src/mode.c    **** extern sensor_t sen_fl;
  24:Src/mode.c    **** extern sensor_t sen_front;
  25:Src/mode.c    **** extern sensor_t sen_fr;
  26:Src/mode.c    **** extern sensor_t sen_r;
  27:Src/mode.c    **** 
  28:Src/mode.c    **** extern uint16_t flag_motion_end;
  29:Src/mode.c    **** extern uint8_t flag_motor;
  30:Src/mode.c    **** extern uint8_t flag_wall;
  31:Src/mode.c    **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 2


  32:Src/mode.c    **** extern maze_t maze;
  33:Src/mode.c    **** 
  34:Src/mode.c    **** void Mode_Run(unsigned char flag_search);
  35:Src/mode.c    **** void Mode_Adjust(unsigned char mode);
  36:Src/mode.c    **** void Mode_Circuit(void);
  37:Src/mode.c    **** void Mode_enkai(void);
  38:Src/mode.c    **** 
  39:Src/mode.c    **** /****************************************************************************************
  40:Src/mode.c    ****  * outline  : wright mode 
  41:Src/mode.c    ****  * argument : mode nomber
  42:Src/mode.c    ****  * return   : void
  43:Src/mode.c    **** ********************************************************************************************/
  44:Src/mode.c    **** void Mode_Mouse(int8_t mode)
  45:Src/mode.c    **** {
  46:Src/mode.c    ****     switch (mode)
  47:Src/mode.c    ****     {
  48:Src/mode.c    ****     case 0:
  49:Src/mode.c    ****         Mode_Run(FALSE);
  50:Src/mode.c    ****         break;
  51:Src/mode.c    ****     case 1:
  52:Src/mode.c    ****         Mode_Run(TRUE);
  53:Src/mode.c    ****         break;
  54:Src/mode.c    ****     case 2:
  55:Src/mode.c    ****         Mode_Adjust(Mode_Select());
  56:Src/mode.c    ****         break;
  57:Src/mode.c    ****     case 3:
  58:Src/mode.c    ****         HAL_Delay(5000);
  59:Src/mode.c    ****         gyro_offset_calc_reset();
  60:Src/mode.c    ****         HAL_Delay(2000);
  61:Src/mode.c    **** 
  62:Src/mode.c    ****         flag_motor = TRUE;
  63:Src/mode.c    **** 
  64:Src/mode.c    ****         Straight_half_accel();
  65:Src/mode.c    ****         while (flag_motion_end == FALSE)
  66:Src/mode.c    ****         {
  67:Src/mode.c    ****         }
  68:Src/mode.c    ****         Motion_Right();
  69:Src/mode.c    ****         Straight_half_stop();
  70:Src/mode.c    ****         while (flag_motion_end == FALSE)
  71:Src/mode.c    ****         {
  72:Src/mode.c    ****         }
  73:Src/mode.c    ****         flag_motor = FALSE;
  74:Src/mode.c    ****         break;
  75:Src/mode.c    ****     case 4:
  76:Src/mode.c    ****         HAL_Delay(5000);
  77:Src/mode.c    ****         gyro_offset_calc_reset();
  78:Src/mode.c    ****         HAL_Delay(2000);
  79:Src/mode.c    **** 
  80:Src/mode.c    ****         flag_motor = TRUE;
  81:Src/mode.c    **** 
  82:Src/mode.c    ****         Straight_half_accel();
  83:Src/mode.c    ****         while (flag_motion_end == FALSE)
  84:Src/mode.c    ****         {
  85:Src/mode.c    ****         }
  86:Src/mode.c    ****         Motion_Straight();
  87:Src/mode.c    ****         Straight_half_stop();
  88:Src/mode.c    ****         while (flag_motion_end == FALSE)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 3


  89:Src/mode.c    ****         {
  90:Src/mode.c    ****         }
  91:Src/mode.c    ****         flag_motor = FALSE;
  92:Src/mode.c    ****         break;
  93:Src/mode.c    ****     case 5:
  94:Src/mode.c    ****         loadMaze();
  95:Src/mode.c    ****         Maze_Printf(maze);
  96:Src/mode.c    ****         break;
  97:Src/mode.c    ****     case 6:
  98:Src/mode.c    ****         Mode_Sensor_Check();
  99:Src/mode.c    ****         break;
 100:Src/mode.c    ****     default:
 101:Src/mode.c    ****         break;
 102:Src/mode.c    ****     }
 103:Src/mode.c    **** }
 104:Src/mode.c    **** 
 105:Src/mode.c    **** /****************************************************************************************
 106:Src/mode.c    ****  * outline  : return mode nomber
 107:Src/mode.c    ****  * argument : void
 108:Src/mode.c    ****  * return   : mode nomber 
 109:Src/mode.c    **** ********************************************************************************************/
 110:Src/mode.c    **** int8_t Mode_Select(void)
 111:Src/mode.c    **** {
  28              		.loc 1 111 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              	.LVL0:
 112:Src/mode.c    ****     int8_t mode = 0;
 113:Src/mode.c    ****     flag_motion_end = TRUE;
  38              		.loc 1 113 0
  39 0002 2A4B     		ldr	r3, .L20
  40 0004 0122     		movs	r2, #1
  41 0006 1A80     		strh	r2, [r3]	@ movhi
 114:Src/mode.c    ****     flag_motor = FALSE;
  42              		.loc 1 114 0
  43 0008 0024     		movs	r4, #0
  44 000a 294B     		ldr	r3, .L20+4
  45 000c 1C70     		strb	r4, [r3]
  46 000e 23E0     		b	.L11
  47              	.LVL1:
  48              	.L16:
 115:Src/mode.c    **** 
 116:Src/mode.c    ****     while (1)
 117:Src/mode.c    ****     {
 118:Src/mode.c    ****         if (enc.distance > 15 || enc.distance < -15)
 119:Src/mode.c    ****         {
 120:Src/mode.c    ****             if (enc.distance > 15)
 121:Src/mode.c    ****             {
 122:Src/mode.c    ****                 mode++;
 123:Src/mode.c    ****             }
 124:Src/mode.c    ****             else if (enc.distance < -15)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 4


  49              		.loc 1 124 0
  50 0010 BAEE0E7A 		vmov.f32	s14, #-1.5e+1
  51 0014 F4EEC77A 		vcmpe.f32	s15, s14
  52 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  53 001c 36D5     		bpl	.L7
 125:Src/mode.c    ****             {
 126:Src/mode.c    ****                 mode--;
  54              		.loc 1 126 0
  55 001e 013C     		subs	r4, r4, #1
  56              	.LVL2:
  57 0020 64B2     		sxtb	r4, r4
  58              	.LVL3:
  59 0022 33E0     		b	.L7
  60              	.L12:
 127:Src/mode.c    ****             }
 128:Src/mode.c    ****             if (mode > 6)
 129:Src/mode.c    ****             {
 130:Src/mode.c    ****                 mode = 0;
  61              		.loc 1 130 0
  62 0024 0024     		movs	r4, #0
  63              	.LVL4:
  64              	.L9:
 131:Src/mode.c    ****             }
 132:Src/mode.c    ****             else if (mode < 0)
 133:Src/mode.c    ****             {
 134:Src/mode.c    ****                 mode = 6;
 135:Src/mode.c    ****             }
 136:Src/mode.c    ****             enc.distance = 0;
  65              		.loc 1 136 0
  66 0026 234B     		ldr	r3, .L20+8
  67 0028 0022     		movs	r2, #0
  68 002a 1A60     		str	r2, [r3]	@ float
 137:Src/mode.c    ****             Output_Buzzer(170 - 10 * mode);
  69              		.loc 1 137 0
  70 002c C4EB4413 		rsb	r3, r4, r4, lsl #5
  71 0030 C4EB8303 		rsb	r3, r4, r3, lsl #2
  72 0034 5800     		lsls	r0, r3, #1
  73 0036 C0B2     		uxtb	r0, r0
  74 0038 5638     		subs	r0, r0, #86
  75 003a 00F0FE00 		and	r0, r0, #254
  76 003e FFF7FEFF 		bl	Output_Buzzer
  77              	.LVL5:
  78              	.L3:
 138:Src/mode.c    ****         }
 139:Src/mode.c    ****         if (Push() == ON)
  79              		.loc 1 139 0
  80 0042 FFF7FEFF 		bl	Push
  81              	.LVL6:
  82 0046 0128     		cmp	r0, #1
  83 0048 26D0     		beq	.L18
 140:Src/mode.c    ****         {
 141:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
 142:Src/mode.c    ****             HAL_Delay(500);
 143:Src/mode.c    ****             break;
 144:Src/mode.c    ****         }
 145:Src/mode.c    ****         LED_Control(mode);
  84              		.loc 1 145 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 5


  85 004a E0B2     		uxtb	r0, r4
  86 004c FFF7FEFF 		bl	LED_Control
  87              	.LVL7:
 146:Src/mode.c    ****         printf("%d\r", mode);
  88              		.loc 1 146 0
  89 0050 2146     		mov	r1, r4
  90 0052 1948     		ldr	r0, .L20+12
  91 0054 FFF7FEFF 		bl	printf
  92              	.LVL8:
  93              	.L11:
 118:Src/mode.c    ****         {
  94              		.loc 1 118 0
  95 0058 164B     		ldr	r3, .L20+8
  96 005a D3ED007A 		vldr.32	s15, [r3]
  97 005e B2EE0E7A 		vmov.f32	s14, #1.5e+1
  98 0062 F4EEC77A 		vcmpe.f32	s15, s14
  99 0066 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 100 006a 06DC     		bgt	.L2
 118:Src/mode.c    ****         {
 101              		.loc 1 118 0 is_stmt 0 discriminator 1
 102 006c BAEE0E7A 		vmov.f32	s14, #-1.5e+1
 103 0070 F4EEC77A 		vcmpe.f32	s15, s14
 104 0074 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 105 0078 E3D5     		bpl	.L3
 106              	.L2:
 120:Src/mode.c    ****             {
 107              		.loc 1 120 0 is_stmt 1
 108 007a B2EE0E7A 		vmov.f32	s14, #1.5e+1
 109 007e F4EEC77A 		vcmpe.f32	s15, s14
 110 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 111 0086 C3DD     		ble	.L16
 122:Src/mode.c    ****             }
 112              		.loc 1 122 0
 113 0088 0134     		adds	r4, r4, #1
 114              	.LVL9:
 115 008a 64B2     		sxtb	r4, r4
 116              	.LVL10:
 117              	.L7:
 128:Src/mode.c    ****             {
 118              		.loc 1 128 0
 119 008c 062C     		cmp	r4, #6
 120 008e C9DC     		bgt	.L12
 132:Src/mode.c    ****             {
 121              		.loc 1 132 0
 122 0090 002C     		cmp	r4, #0
 123 0092 C8DA     		bge	.L9
 134:Src/mode.c    ****             }
 124              		.loc 1 134 0
 125 0094 0624     		movs	r4, #6
 126              	.LVL11:
 127 0096 C6E7     		b	.L9
 128              	.LVL12:
 129              	.L18:
 141:Src/mode.c    ****             HAL_Delay(500);
 130              		.loc 1 141 0
 131 0098 4C20     		movs	r0, #76
 132 009a FFF7FEFF 		bl	Output_Buzzer
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 6


 133              	.LVL13:
 142:Src/mode.c    ****             break;
 134              		.loc 1 142 0
 135 009e 4FF4FA70 		mov	r0, #500
 136 00a2 FFF7FEFF 		bl	HAL_Delay
 137              	.LVL14:
 147:Src/mode.c    ****     }
 148:Src/mode.c    ****     return mode;
 149:Src/mode.c    **** }
 138              		.loc 1 149 0
 139 00a6 2046     		mov	r0, r4
 140 00a8 10BD     		pop	{r4, pc}
 141              	.LVL15:
 142              	.L21:
 143 00aa 00BF     		.align	2
 144              	.L20:
 145 00ac 00000000 		.word	flag_motion_end
 146 00b0 00000000 		.word	flag_motor
 147 00b4 00000000 		.word	enc
 148 00b8 00000000 		.word	.LC0
 149              		.cfi_endproc
 150              	.LFE127:
 152              		.section	.text.Mode_Sensor_Check,"ax",%progbits
 153              		.align	1
 154              		.global	Mode_Sensor_Check
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu fpv4-sp-d16
 160              	Mode_Sensor_Check:
 161              	.LFB128:
 150:Src/mode.c    **** 
 151:Src/mode.c    **** void Mode_Sensor_Check(void)
 152:Src/mode.c    **** {
 162              		.loc 1 152 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166 0000 10B5     		push	{r4, lr}
 167              	.LCFI1:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 4, -8
 170              		.cfi_offset 14, -4
 171 0002 82B0     		sub	sp, sp, #8
 172              	.LCFI2:
 173              		.cfi_def_cfa_offset 16
 153:Src/mode.c    ****     adcStart();
 174              		.loc 1 153 0
 175 0004 FFF7FEFF 		bl	adcStart
 176              	.LVL16:
 177 0008 31E0     		b	.L29
 178              	.L32:
 154:Src/mode.c    **** 
 155:Src/mode.c    ****     while (1)
 156:Src/mode.c    ****     {
 157:Src/mode.c    ****         if (sen_r.is_wall == TRUE)
 158:Src/mode.c    ****         {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 7


 159:Src/mode.c    ****             HAL_GPIO_WritePin(led0_GPIO_Port, led0_Pin, GPIO_PIN_RESET);
 179              		.loc 1 159 0
 180 000a 0022     		movs	r2, #0
 181 000c 4FF40051 		mov	r1, #8192
 182 0010 2E48     		ldr	r0, .L35
 183 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 184              	.LVL17:
 185 0016 34E0     		b	.L24
 186              	.L33:
 160:Src/mode.c    ****         }
 161:Src/mode.c    ****         else
 162:Src/mode.c    ****         {
 163:Src/mode.c    ****             HAL_GPIO_WritePin(led0_GPIO_Port, led0_Pin, GPIO_PIN_SET);
 164:Src/mode.c    ****         }
 165:Src/mode.c    ****         if (sen_l.is_wall == TRUE)
 166:Src/mode.c    ****         {
 167:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_RESET);
 187              		.loc 1 167 0
 188 0018 0022     		movs	r2, #0
 189 001a 4FF48041 		mov	r1, #16384
 190 001e 2B48     		ldr	r0, .L35
 191 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 192              	.LVL18:
 193 0024 37E0     		b	.L26
 194              	.L34:
 168:Src/mode.c    ****         }
 169:Src/mode.c    ****         else
 170:Src/mode.c    ****         {
 171:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_SET);
 172:Src/mode.c    ****         }
 173:Src/mode.c    ****         if (sen_front.is_wall == TRUE)
 174:Src/mode.c    ****         {
 175:Src/mode.c    ****             HAL_GPIO_WritePin(led3_GPIO_Port, led3_Pin, GPIO_PIN_RESET);
 195              		.loc 1 175 0
 196 0026 294C     		ldr	r4, .L35
 197 0028 0022     		movs	r2, #0
 198 002a 4FF48071 		mov	r1, #256
 199 002e 2046     		mov	r0, r4
 200 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 201              	.LVL19:
 176:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_RESET);
 202              		.loc 1 176 0
 203 0034 0022     		movs	r2, #0
 204 0036 8021     		movs	r1, #128
 205 0038 2046     		mov	r0, r4
 206 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 207              	.LVL20:
 208              	.L28:
 177:Src/mode.c    ****         }
 178:Src/mode.c    ****         else
 179:Src/mode.c    ****         {
 180:Src/mode.c    ****             HAL_GPIO_WritePin(led3_GPIO_Port, led3_Pin, GPIO_PIN_SET);
 181:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_SET);
 182:Src/mode.c    ****         }
 183:Src/mode.c    ****         printf("l:%d fl:%d f:%d fr:%d r:%d \r", sen_l.now, sen_fl.now , sen_front.now, sen_fr.now ,
 209              		.loc 1 183 0
 210 003e 244B     		ldr	r3, .L35+4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 8


 211 0040 B3F90010 		ldrsh	r1, [r3]
 212 0044 234B     		ldr	r3, .L35+8
 213 0046 B3F90020 		ldrsh	r2, [r3]
 214 004a 234B     		ldr	r3, .L35+12
 215 004c B3F90030 		ldrsh	r3, [r3]
 216 0050 2248     		ldr	r0, .L35+16
 217 0052 B0F90000 		ldrsh	r0, [r0]
 218 0056 224C     		ldr	r4, .L35+20
 219 0058 B4F90040 		ldrsh	r4, [r4]
 220 005c 0194     		str	r4, [sp, #4]
 221 005e 0090     		str	r0, [sp]
 222 0060 2048     		ldr	r0, .L35+24
 223 0062 FFF7FEFF 		bl	printf
 224              	.LVL21:
 184:Src/mode.c    **** 
 185:Src/mode.c    ****         if (Push() == ON)
 225              		.loc 1 185 0
 226 0066 FFF7FEFF 		bl	Push
 227              	.LVL22:
 228 006a 0128     		cmp	r0, #1
 229 006c 24D0     		beq	.L31
 230              	.L29:
 157:Src/mode.c    ****         {
 231              		.loc 1 157 0
 232 006e 1C4B     		ldr	r3, .L35+20
 233 0070 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 234 0072 012B     		cmp	r3, #1
 235 0074 C9D0     		beq	.L32
 163:Src/mode.c    ****         }
 236              		.loc 1 163 0
 237 0076 0122     		movs	r2, #1
 238 0078 4FF40051 		mov	r1, #8192
 239 007c 1348     		ldr	r0, .L35
 240 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 241              	.LVL23:
 242              	.L24:
 165:Src/mode.c    ****         {
 243              		.loc 1 165 0
 244 0082 134B     		ldr	r3, .L35+4
 245 0084 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 246 0086 012B     		cmp	r3, #1
 247 0088 C6D0     		beq	.L33
 171:Src/mode.c    ****         }
 248              		.loc 1 171 0
 249 008a 0122     		movs	r2, #1
 250 008c 4FF48041 		mov	r1, #16384
 251 0090 0E48     		ldr	r0, .L35
 252 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 253              	.LVL24:
 254              	.L26:
 173:Src/mode.c    ****         {
 255              		.loc 1 173 0
 256 0096 104B     		ldr	r3, .L35+12
 257 0098 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 258 009a 012B     		cmp	r3, #1
 259 009c C3D0     		beq	.L34
 180:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_SET);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 9


 260              		.loc 1 180 0
 261 009e 0B4C     		ldr	r4, .L35
 262 00a0 0122     		movs	r2, #1
 263 00a2 4FF48071 		mov	r1, #256
 264 00a6 2046     		mov	r0, r4
 265 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 266              	.LVL25:
 181:Src/mode.c    ****         }
 267              		.loc 1 181 0
 268 00ac 0122     		movs	r2, #1
 269 00ae 8021     		movs	r1, #128
 270 00b0 2046     		mov	r0, r4
 271 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 272              	.LVL26:
 273 00b6 C2E7     		b	.L28
 274              	.L31:
 186:Src/mode.c    ****         {
 187:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
 275              		.loc 1 187 0
 276 00b8 4C20     		movs	r0, #76
 277 00ba FFF7FEFF 		bl	Output_Buzzer
 278              	.LVL27:
 188:Src/mode.c    ****             HAL_Delay(500);
 279              		.loc 1 188 0
 280 00be 4FF4FA70 		mov	r0, #500
 281 00c2 FFF7FEFF 		bl	HAL_Delay
 282              	.LVL28:
 189:Src/mode.c    ****             break;
 190:Src/mode.c    ****         }
 191:Src/mode.c    ****     }
 192:Src/mode.c    **** }
 283              		.loc 1 192 0
 284 00c6 02B0     		add	sp, sp, #8
 285              	.LCFI3:
 286              		.cfi_def_cfa_offset 8
 287              		@ sp needed
 288 00c8 10BD     		pop	{r4, pc}
 289              	.L36:
 290 00ca 00BF     		.align	2
 291              	.L35:
 292 00cc 00080240 		.word	1073874944
 293 00d0 00000000 		.word	sen_l
 294 00d4 00000000 		.word	sen_fl
 295 00d8 00000000 		.word	sen_front
 296 00dc 00000000 		.word	sen_fr
 297 00e0 00000000 		.word	sen_r
 298 00e4 00000000 		.word	.LC1
 299              		.cfi_endproc
 300              	.LFE128:
 302              		.section	.text.Mode_Run,"ax",%progbits
 303              		.align	1
 304              		.global	Mode_Run
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu fpv4-sp-d16
 310              	Mode_Run:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 10


 311              	.LFB129:
 193:Src/mode.c    **** 
 194:Src/mode.c    **** void Mode_Run(unsigned char flag_search)
 195:Src/mode.c    **** {
 312              		.loc 1 195 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              	.LVL29:
 317 0000 08B5     		push	{r3, lr}
 318              	.LCFI4:
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 3, -8
 321              		.cfi_offset 14, -4
 196:Src/mode.c    ****     flag_wall=TRUE;
 322              		.loc 1 196 0
 323 0002 124B     		ldr	r3, .L43
 324 0004 0122     		movs	r2, #1
 325 0006 1A70     		strb	r2, [r3]
 197:Src/mode.c    ****     if (flag_search == FALSE)
 326              		.loc 1 197 0
 327 0008 10B1     		cbz	r0, .L41
 198:Src/mode.c    ****     {
 199:Src/mode.c    ****         Plan_Adachi();
 200:Src/mode.c    ****         HAL_Delay(500);
 201:Src/mode.c    ****         writeMaze();
 202:Src/mode.c    ****         HAL_Delay(1000);
 203:Src/mode.c    ****         Plan_AllSearch();
 204:Src/mode.c    ****         HAL_Delay(500);
 205:Src/mode.c    ****         writeMaze();
 206:Src/mode.c    ****     }
 207:Src/mode.c    ****     else if (flag_search == TRUE)
 328              		.loc 1 207 0
 329 000a 0128     		cmp	r0, #1
 330 000c 15D0     		beq	.L42
 331              	.LVL30:
 332              	.L37:
 208:Src/mode.c    ****     {
 209:Src/mode.c    ****         loadMaze();
 210:Src/mode.c    ****         Plan_Root();
 211:Src/mode.c    ****         Plan_Compress();
 212:Src/mode.c    ****         Plan_Fast();
 213:Src/mode.c    ****     }
 214:Src/mode.c    **** }
 333              		.loc 1 214 0
 334 000e 08BD     		pop	{r3, pc}
 335              	.LVL31:
 336              	.L41:
 199:Src/mode.c    ****         HAL_Delay(500);
 337              		.loc 1 199 0
 338 0010 FFF7FEFF 		bl	Plan_Adachi
 339              	.LVL32:
 200:Src/mode.c    ****         writeMaze();
 340              		.loc 1 200 0
 341 0014 4FF4FA70 		mov	r0, #500
 342 0018 FFF7FEFF 		bl	HAL_Delay
 343              	.LVL33:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 11


 201:Src/mode.c    ****         HAL_Delay(1000);
 344              		.loc 1 201 0
 345 001c FFF7FEFF 		bl	writeMaze
 346              	.LVL34:
 202:Src/mode.c    ****         Plan_AllSearch();
 347              		.loc 1 202 0
 348 0020 4FF47A70 		mov	r0, #1000
 349 0024 FFF7FEFF 		bl	HAL_Delay
 350              	.LVL35:
 203:Src/mode.c    ****         HAL_Delay(500);
 351              		.loc 1 203 0
 352 0028 FFF7FEFF 		bl	Plan_AllSearch
 353              	.LVL36:
 204:Src/mode.c    ****         writeMaze();
 354              		.loc 1 204 0
 355 002c 4FF4FA70 		mov	r0, #500
 356 0030 FFF7FEFF 		bl	HAL_Delay
 357              	.LVL37:
 205:Src/mode.c    ****     }
 358              		.loc 1 205 0
 359 0034 FFF7FEFF 		bl	writeMaze
 360              	.LVL38:
 361 0038 E9E7     		b	.L37
 362              	.LVL39:
 363              	.L42:
 209:Src/mode.c    ****         Plan_Root();
 364              		.loc 1 209 0
 365 003a FFF7FEFF 		bl	loadMaze
 366              	.LVL40:
 210:Src/mode.c    ****         Plan_Compress();
 367              		.loc 1 210 0
 368 003e FFF7FEFF 		bl	Plan_Root
 369              	.LVL41:
 211:Src/mode.c    ****         Plan_Fast();
 370              		.loc 1 211 0
 371 0042 FFF7FEFF 		bl	Plan_Compress
 372              	.LVL42:
 212:Src/mode.c    ****     }
 373              		.loc 1 212 0
 374 0046 FFF7FEFF 		bl	Plan_Fast
 375              	.LVL43:
 376              		.loc 1 214 0
 377 004a E0E7     		b	.L37
 378              	.L44:
 379              		.align	2
 380              	.L43:
 381 004c 00000000 		.word	flag_wall
 382              		.cfi_endproc
 383              	.LFE129:
 385              		.section	.text.Mode_Circuit,"ax",%progbits
 386              		.align	1
 387              		.global	Mode_Circuit
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 391              		.fpu fpv4-sp-d16
 393              	Mode_Circuit:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 12


 394              	.LFB131:
 215:Src/mode.c    **** 
 216:Src/mode.c    **** 
 217:Src/mode.c    **** void Mode_Adjust(unsigned char motion)
 218:Src/mode.c    **** {
 219:Src/mode.c    ****     adcStart();
 220:Src/mode.c    ****     while (sen_front.is_wall == FALSE)
 221:Src/mode.c    ****     {
 222:Src/mode.c    ****     }
 223:Src/mode.c    ****     Output_Buzzer(HZ_G);
 224:Src/mode.c    ****     HAL_Delay(2500);
 225:Src/mode.c    ****     gyro_offset_calc_reset();
 226:Src/mode.c    ****     HAL_Delay(2500);
 227:Src/mode.c    ****     flag_motor = TRUE;
 228:Src/mode.c    ****     enc.offset = 0;
 229:Src/mode.c    **** 
 230:Src/mode.c    ****     switch (motion)
 231:Src/mode.c    ****     {
 232:Src/mode.c    ****     case 0:
 233:Src/mode.c    ****         flag_wall=FALSE;
 234:Src/mode.c    ****         Straight_half_accel();
 235:Src/mode.c    ****         while (flag_motion_end == FALSE)
 236:Src/mode.c    ****         {
 237:Src/mode.c    ****         }
 238:Src/mode.c    ****         enc.offset=0;
 239:Src/mode.c    ****         Motion_SlalomLeft();
 240:Src/mode.c    ****         Straight_half_stop();
 241:Src/mode.c    ****         while (flag_motion_end == FALSE)
 242:Src/mode.c    ****         {
 243:Src/mode.c    ****         }
 244:Src/mode.c    ****         enc.offset=0;
 245:Src/mode.c    **** 
 246:Src/mode.c    ****         break;
 247:Src/mode.c    ****     case 1:
 248:Src/mode.c    ****         flag_wall=FALSE;
 249:Src/mode.c    ****         Straight_half_accel();
 250:Src/mode.c    ****         while (flag_motion_end == FALSE)
 251:Src/mode.c    ****         {
 252:Src/mode.c    ****         }
 253:Src/mode.c    ****         enc.offset=0;
 254:Src/mode.c    ****         Motion_SlalomRight();
 255:Src/mode.c    ****         Straight_half_stop();
 256:Src/mode.c    ****         while (flag_motion_end == FALSE)
 257:Src/mode.c    ****         {
 258:Src/mode.c    ****         }
 259:Src/mode.c    ****         enc.offset=0;
 260:Src/mode.c    **** 
 261:Src/mode.c    ****         break;
 262:Src/mode.c    ****     case 2:
 263:Src/mode.c    ****         flag_wall=FALSE;
 264:Src/mode.c    ****         Straight_half_accel();
 265:Src/mode.c    ****         while (flag_motion_end == FALSE)
 266:Src/mode.c    ****         {
 267:Src/mode.c    ****         }
 268:Src/mode.c    ****         enc.offset=0;
 269:Src/mode.c    ****         Motion_Uturn();
 270:Src/mode.c    ****         Motion_Uturn();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 13


 271:Src/mode.c    ****         Straight_half_stop();
 272:Src/mode.c    ****         while (flag_motion_end == FALSE)
 273:Src/mode.c    ****         {
 274:Src/mode.c    ****         }
 275:Src/mode.c    ****         enc.offset=0;
 276:Src/mode.c    ****         break;
 277:Src/mode.c    ****     case 3:
 278:Src/mode.c    ****         flag_wall=TRUE;
 279:Src/mode.c    ****         Motion_Start();
 280:Src/mode.c    ****         Motion_Straight();
 281:Src/mode.c    ****         Motion_Straight();
 282:Src/mode.c    ****         Motion_Straight();
 283:Src/mode.c    ****         Motion_Straight();
 284:Src/mode.c    ****         Motion_Straight();
 285:Src/mode.c    ****         Motion_Straight();
 286:Src/mode.c    ****         Motion_Goal();
 287:Src/mode.c    ****         break;
 288:Src/mode.c    ****     case 4:
 289:Src/mode.c    ****         Mode_enkai();
 290:Src/mode.c    ****         break;
 291:Src/mode.c    ****     default:
 292:Src/mode.c    ****         break;
 293:Src/mode.c    ****     }
 294:Src/mode.c    ****     flag_motor = FALSE;
 295:Src/mode.c    **** }
 296:Src/mode.c    **** 
 297:Src/mode.c    **** void Mode_Circuit(void)
 298:Src/mode.c    **** {
 395              		.loc 1 298 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399 0000 08B5     		push	{r3, lr}
 400              	.LCFI5:
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 3, -8
 403              		.cfi_offset 14, -4
 299:Src/mode.c    ****     adcStart();
 404              		.loc 1 299 0
 405 0002 FFF7FEFF 		bl	adcStart
 406              	.LVL44:
 407              	.L46:
 300:Src/mode.c    ****     while (sen_front.is_wall == FALSE)
 408              		.loc 1 300 0 discriminator 1
 409 0006 214B     		ldr	r3, .L48
 410 0008 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 411 000a 002B     		cmp	r3, #0
 412 000c FBD0     		beq	.L46
 301:Src/mode.c    ****     {
 302:Src/mode.c    ****     }
 303:Src/mode.c    ****     Output_Buzzer(HZ_G);
 413              		.loc 1 303 0
 414 000e 6620     		movs	r0, #102
 415 0010 FFF7FEFF 		bl	Output_Buzzer
 416              	.LVL45:
 304:Src/mode.c    ****     HAL_Delay(2500);
 417              		.loc 1 304 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 14


 418 0014 40F6C410 		movw	r0, #2500
 419 0018 FFF7FEFF 		bl	HAL_Delay
 420              	.LVL46:
 305:Src/mode.c    ****     gyro_offset_calc_reset();
 421              		.loc 1 305 0
 422 001c FFF7FEFF 		bl	gyro_offset_calc_reset
 423              	.LVL47:
 306:Src/mode.c    ****     HAL_Delay(2500);
 424              		.loc 1 306 0
 425 0020 40F6C410 		movw	r0, #2500
 426 0024 FFF7FEFF 		bl	HAL_Delay
 427              	.LVL48:
 307:Src/mode.c    ****     flag_motor = TRUE;
 428              		.loc 1 307 0
 429 0028 194B     		ldr	r3, .L48+4
 430 002a 0122     		movs	r2, #1
 431 002c 1A70     		strb	r2, [r3]
 308:Src/mode.c    ****     enc.offset = 0;
 432              		.loc 1 308 0
 433 002e 194B     		ldr	r3, .L48+8
 434 0030 0022     		movs	r2, #0
 435 0032 9A60     		str	r2, [r3, #8]	@ float
 309:Src/mode.c    **** 
 310:Src/mode.c    **** 
 311:Src/mode.c    ****     //1
 312:Src/mode.c    ****     Motion_StartFast(14);
 436              		.loc 1 312 0
 437 0034 0E20     		movs	r0, #14
 438 0036 FFF7FEFF 		bl	Motion_StartFast
 439              	.LVL49:
 313:Src/mode.c    ****     Motion_SlalomRight();
 440              		.loc 1 313 0
 441 003a FFF7FEFF 		bl	Motion_SlalomRight
 442              	.LVL50:
 314:Src/mode.c    ****     Motion_StraightFast(6);
 443              		.loc 1 314 0
 444 003e 0620     		movs	r0, #6
 445 0040 FFF7FEFF 		bl	Motion_StraightFast
 446              	.LVL51:
 315:Src/mode.c    ****     Motion_SlalomRight();
 447              		.loc 1 315 0
 448 0044 FFF7FEFF 		bl	Motion_SlalomRight
 449              	.LVL52:
 316:Src/mode.c    ****     Motion_StraightFast(14);
 450              		.loc 1 316 0
 451 0048 0E20     		movs	r0, #14
 452 004a FFF7FEFF 		bl	Motion_StraightFast
 453              	.LVL53:
 317:Src/mode.c    ****     Motion_SlalomRight();
 454              		.loc 1 317 0
 455 004e FFF7FEFF 		bl	Motion_SlalomRight
 456              	.LVL54:
 318:Src/mode.c    ****     Motion_StraightFast(6);
 457              		.loc 1 318 0
 458 0052 0620     		movs	r0, #6
 459 0054 FFF7FEFF 		bl	Motion_StraightFast
 460              	.LVL55:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 15


 319:Src/mode.c    ****     Motion_SlalomRight();
 461              		.loc 1 319 0
 462 0058 FFF7FEFF 		bl	Motion_SlalomRight
 463              	.LVL56:
 320:Src/mode.c    **** 
 321:Src/mode.c    ****     //2
 322:Src/mode.c    ****     Motion_StraightFast(14);
 464              		.loc 1 322 0
 465 005c 0E20     		movs	r0, #14
 466 005e FFF7FEFF 		bl	Motion_StraightFast
 467              	.LVL57:
 323:Src/mode.c    ****     Motion_SlalomRight();
 468              		.loc 1 323 0
 469 0062 FFF7FEFF 		bl	Motion_SlalomRight
 470              	.LVL58:
 324:Src/mode.c    **** 
 325:Src/mode.c    ****     Motion_StraightFast(6);
 471              		.loc 1 325 0
 472 0066 0620     		movs	r0, #6
 473 0068 FFF7FEFF 		bl	Motion_StraightFast
 474              	.LVL59:
 326:Src/mode.c    ****     Motion_SlalomRight();
 475              		.loc 1 326 0
 476 006c FFF7FEFF 		bl	Motion_SlalomRight
 477              	.LVL60:
 327:Src/mode.c    **** 
 328:Src/mode.c    ****     Motion_StraightFast(14);
 478              		.loc 1 328 0
 479 0070 0E20     		movs	r0, #14
 480 0072 FFF7FEFF 		bl	Motion_StraightFast
 481              	.LVL61:
 329:Src/mode.c    ****     Motion_SlalomRight();
 482              		.loc 1 329 0
 483 0076 FFF7FEFF 		bl	Motion_SlalomRight
 484              	.LVL62:
 330:Src/mode.c    **** 
 331:Src/mode.c    ****     Motion_StraightFast(6);
 485              		.loc 1 331 0
 486 007a 0620     		movs	r0, #6
 487 007c FFF7FEFF 		bl	Motion_StraightFast
 488              	.LVL63:
 332:Src/mode.c    ****     Motion_SlalomRight();
 489              		.loc 1 332 0
 490 0080 FFF7FEFF 		bl	Motion_SlalomRight
 491              	.LVL64:
 333:Src/mode.c    **** 
 334:Src/mode.c    ****     Motion_Goal();
 492              		.loc 1 334 0
 493 0084 FFF7FEFF 		bl	Motion_Goal
 494              	.LVL65:
 335:Src/mode.c    **** }
 495              		.loc 1 335 0
 496 0088 08BD     		pop	{r3, pc}
 497              	.L49:
 498 008a 00BF     		.align	2
 499              	.L48:
 500 008c 00000000 		.word	sen_front
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 16


 501 0090 00000000 		.word	flag_motor
 502 0094 00000000 		.word	enc
 503              		.cfi_endproc
 504              	.LFE131:
 506              		.section	.text.Mode_enkai,"ax",%progbits
 507              		.align	1
 508              		.global	Mode_enkai
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu fpv4-sp-d16
 514              	Mode_enkai:
 515              	.LFB132:
 336:Src/mode.c    **** 
 337:Src/mode.c    **** void Mode_enkai(void)
 338:Src/mode.c    **** {
 516              		.loc 1 338 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520 0000 08B5     		push	{r3, lr}
 521              	.LCFI6:
 522              		.cfi_def_cfa_offset 8
 523              		.cfi_offset 3, -8
 524              		.cfi_offset 14, -4
 339:Src/mode.c    ****     adcStart();
 525              		.loc 1 339 0
 526 0002 FFF7FEFF 		bl	adcStart
 527              	.LVL66:
 528              	.L51:
 340:Src/mode.c    ****     while (sen_front.is_wall == FALSE)
 529              		.loc 1 340 0 discriminator 1
 530 0006 0D4B     		ldr	r3, .L53
 531 0008 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 532 000a 002B     		cmp	r3, #0
 533 000c FBD0     		beq	.L51
 341:Src/mode.c    ****     {
 342:Src/mode.c    ****     }
 343:Src/mode.c    ****     Output_Buzzer(HZ_G);
 534              		.loc 1 343 0
 535 000e 6620     		movs	r0, #102
 536 0010 FFF7FEFF 		bl	Output_Buzzer
 537              	.LVL67:
 344:Src/mode.c    ****     HAL_Delay(2500);
 538              		.loc 1 344 0
 539 0014 40F6C410 		movw	r0, #2500
 540 0018 FFF7FEFF 		bl	HAL_Delay
 541              	.LVL68:
 345:Src/mode.c    ****     gyro_offset_calc_reset();
 542              		.loc 1 345 0
 543 001c FFF7FEFF 		bl	gyro_offset_calc_reset
 544              	.LVL69:
 346:Src/mode.c    ****     HAL_Delay(2500);
 545              		.loc 1 346 0
 546 0020 40F6C410 		movw	r0, #2500
 547 0024 FFF7FEFF 		bl	HAL_Delay
 548              	.LVL70:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 17


 347:Src/mode.c    ****     Output_Buzzer(HZ_G);
 549              		.loc 1 347 0
 550 0028 6620     		movs	r0, #102
 551 002a FFF7FEFF 		bl	Output_Buzzer
 552              	.LVL71:
 348:Src/mode.c    ****     flag_motor = TRUE;
 553              		.loc 1 348 0
 554 002e 044B     		ldr	r3, .L53+4
 555 0030 0122     		movs	r2, #1
 556 0032 1A70     		strb	r2, [r3]
 349:Src/mode.c    **** 
 350:Src/mode.c    ****     Motion_Enkai();
 557              		.loc 1 350 0
 558 0034 FFF7FEFF 		bl	Motion_Enkai
 559              	.LVL72:
 351:Src/mode.c    **** }...
 560              		.loc 1 351 0
 561 0038 08BD     		pop	{r3, pc}
 562              	.L54:
 563 003a 00BF     		.align	2
 564              	.L53:
 565 003c 00000000 		.word	sen_front
 566 0040 00000000 		.word	flag_motor
 567              		.cfi_endproc
 568              	.LFE132:
 570              		.section	.text.Mode_Adjust,"ax",%progbits
 571              		.align	1
 572              		.global	Mode_Adjust
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu fpv4-sp-d16
 578              	Mode_Adjust:
 579              	.LFB130:
 218:Src/mode.c    **** {
 580              		.loc 1 218 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              	.LVL73:
 585 0000 10B5     		push	{r4, lr}
 586              	.LCFI7:
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 4, -8
 589              		.cfi_offset 14, -4
 590 0002 0446     		mov	r4, r0
 219:Src/mode.c    ****     adcStart();
 591              		.loc 1 219 0
 592 0004 FFF7FEFF 		bl	adcStart
 593              	.LVL74:
 594              	.L56:
 220:Src/mode.c    ****     while (sen_front.is_wall == FALSE)
 595              		.loc 1 220 0 discriminator 1
 596 0008 404B     		ldr	r3, .L71
 597 000a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 598 000c 002B     		cmp	r3, #0
 599 000e FBD0     		beq	.L56
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 18


 223:Src/mode.c    ****     Output_Buzzer(HZ_G);
 600              		.loc 1 223 0
 601 0010 6620     		movs	r0, #102
 602 0012 FFF7FEFF 		bl	Output_Buzzer
 603              	.LVL75:
 224:Src/mode.c    ****     HAL_Delay(2500);
 604              		.loc 1 224 0
 605 0016 40F6C410 		movw	r0, #2500
 606 001a FFF7FEFF 		bl	HAL_Delay
 607              	.LVL76:
 225:Src/mode.c    ****     gyro_offset_calc_reset();
 608              		.loc 1 225 0
 609 001e FFF7FEFF 		bl	gyro_offset_calc_reset
 610              	.LVL77:
 226:Src/mode.c    ****     HAL_Delay(2500);
 611              		.loc 1 226 0
 612 0022 40F6C410 		movw	r0, #2500
 613 0026 FFF7FEFF 		bl	HAL_Delay
 614              	.LVL78:
 227:Src/mode.c    ****     flag_motor = TRUE;
 615              		.loc 1 227 0
 616 002a 394B     		ldr	r3, .L71+4
 617 002c 0122     		movs	r2, #1
 618 002e 1A70     		strb	r2, [r3]
 228:Src/mode.c    ****     enc.offset = 0;
 619              		.loc 1 228 0
 620 0030 384B     		ldr	r3, .L71+8
 621 0032 0022     		movs	r2, #0
 622 0034 9A60     		str	r2, [r3, #8]	@ float
 230:Src/mode.c    ****     switch (motion)
 623              		.loc 1 230 0
 624 0036 042C     		cmp	r4, #4
 625 0038 1BD8     		bhi	.L57
 626 003a DFE804F0 		tbb	[pc, r4]
 627              	.L59:
 628 003e 03       		.byte	(.L58-.L59)/2
 629 003f 1E       		.byte	(.L60-.L59)/2
 630 0040 36       		.byte	(.L61-.L59)/2
 631 0041 50       		.byte	(.L62-.L59)/2
 632 0042 64       		.byte	(.L63-.L59)/2
 633 0043 00       		.p2align 1
 634              	.L58:
 233:Src/mode.c    ****         flag_wall=FALSE;
 635              		.loc 1 233 0
 636 0044 344B     		ldr	r3, .L71+12
 637 0046 0022     		movs	r2, #0
 638 0048 1A70     		strb	r2, [r3]
 234:Src/mode.c    ****         Straight_half_accel();
 639              		.loc 1 234 0
 640 004a FFF7FEFF 		bl	Straight_half_accel
 641              	.LVL79:
 642              	.L64:
 235:Src/mode.c    ****         while (flag_motion_end == FALSE)
 643              		.loc 1 235 0 discriminator 1
 644 004e 334B     		ldr	r3, .L71+16
 645 0050 1B88     		ldrh	r3, [r3]
 646 0052 002B     		cmp	r3, #0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 19


 647 0054 FBD0     		beq	.L64
 238:Src/mode.c    ****         enc.offset=0;
 648              		.loc 1 238 0
 649 0056 2F4B     		ldr	r3, .L71+8
 650 0058 0022     		movs	r2, #0
 651 005a 9A60     		str	r2, [r3, #8]	@ float
 239:Src/mode.c    ****         Motion_SlalomLeft();
 652              		.loc 1 239 0
 653 005c FFF7FEFF 		bl	Motion_SlalomLeft
 654              	.LVL80:
 240:Src/mode.c    ****         Straight_half_stop();
 655              		.loc 1 240 0
 656 0060 FFF7FEFF 		bl	Straight_half_stop
 657              	.LVL81:
 658              	.L65:
 241:Src/mode.c    ****         while (flag_motion_end == FALSE)
 659              		.loc 1 241 0 discriminator 1
 660 0064 2D4B     		ldr	r3, .L71+16
 661 0066 1B88     		ldrh	r3, [r3]
 662 0068 002B     		cmp	r3, #0
 663 006a FBD0     		beq	.L65
 244:Src/mode.c    ****         enc.offset=0;
 664              		.loc 1 244 0
 665 006c 294B     		ldr	r3, .L71+8
 666 006e 0022     		movs	r2, #0
 667 0070 9A60     		str	r2, [r3, #8]	@ float
 668              	.L57:
 294:Src/mode.c    ****     flag_motor = FALSE;
 669              		.loc 1 294 0
 670 0072 274B     		ldr	r3, .L71+4
 671 0074 0022     		movs	r2, #0
 672 0076 1A70     		strb	r2, [r3]
 295:Src/mode.c    **** }
 673              		.loc 1 295 0
 674 0078 10BD     		pop	{r4, pc}
 675              	.L60:
 248:Src/mode.c    ****         flag_wall=FALSE;
 676              		.loc 1 248 0
 677 007a 274B     		ldr	r3, .L71+12
 678 007c 0022     		movs	r2, #0
 679 007e 1A70     		strb	r2, [r3]
 249:Src/mode.c    ****         Straight_half_accel();
 680              		.loc 1 249 0
 681 0080 FFF7FEFF 		bl	Straight_half_accel
 682              	.LVL82:
 683              	.L66:
 250:Src/mode.c    ****         while (flag_motion_end == FALSE)
 684              		.loc 1 250 0 discriminator 1
 685 0084 254B     		ldr	r3, .L71+16
 686 0086 1B88     		ldrh	r3, [r3]
 687 0088 002B     		cmp	r3, #0
 688 008a FBD0     		beq	.L66
 253:Src/mode.c    ****         enc.offset=0;
 689              		.loc 1 253 0
 690 008c 214B     		ldr	r3, .L71+8
 691 008e 0022     		movs	r2, #0
 692 0090 9A60     		str	r2, [r3, #8]	@ float
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 20


 254:Src/mode.c    ****         Motion_SlalomRight();
 693              		.loc 1 254 0
 694 0092 FFF7FEFF 		bl	Motion_SlalomRight
 695              	.LVL83:
 255:Src/mode.c    ****         Straight_half_stop();
 696              		.loc 1 255 0
 697 0096 FFF7FEFF 		bl	Straight_half_stop
 698              	.LVL84:
 699              	.L67:
 256:Src/mode.c    ****         while (flag_motion_end == FALSE)
 700              		.loc 1 256 0 discriminator 1
 701 009a 204B     		ldr	r3, .L71+16
 702 009c 1B88     		ldrh	r3, [r3]
 703 009e 002B     		cmp	r3, #0
 704 00a0 FBD0     		beq	.L67
 259:Src/mode.c    ****         enc.offset=0;
 705              		.loc 1 259 0
 706 00a2 1C4B     		ldr	r3, .L71+8
 707 00a4 0022     		movs	r2, #0
 708 00a6 9A60     		str	r2, [r3, #8]	@ float
 261:Src/mode.c    ****         break;
 709              		.loc 1 261 0
 710 00a8 E3E7     		b	.L57
 711              	.L61:
 263:Src/mode.c    ****         flag_wall=FALSE;
 712              		.loc 1 263 0
 713 00aa 1B4B     		ldr	r3, .L71+12
 714 00ac 0022     		movs	r2, #0
 715 00ae 1A70     		strb	r2, [r3]
 264:Src/mode.c    ****         Straight_half_accel();
 716              		.loc 1 264 0
 717 00b0 FFF7FEFF 		bl	Straight_half_accel
 718              	.LVL85:
 719              	.L68:
 265:Src/mode.c    ****         while (flag_motion_end == FALSE)
 720              		.loc 1 265 0 discriminator 1
 721 00b4 194B     		ldr	r3, .L71+16
 722 00b6 1B88     		ldrh	r3, [r3]
 723 00b8 002B     		cmp	r3, #0
 724 00ba FBD0     		beq	.L68
 268:Src/mode.c    ****         enc.offset=0;
 725              		.loc 1 268 0
 726 00bc 154B     		ldr	r3, .L71+8
 727 00be 0022     		movs	r2, #0
 728 00c0 9A60     		str	r2, [r3, #8]	@ float
 269:Src/mode.c    ****         Motion_Uturn();
 729              		.loc 1 269 0
 730 00c2 FFF7FEFF 		bl	Motion_Uturn
 731              	.LVL86:
 270:Src/mode.c    ****         Motion_Uturn();
 732              		.loc 1 270 0
 733 00c6 FFF7FEFF 		bl	Motion_Uturn
 734              	.LVL87:
 271:Src/mode.c    ****         Straight_half_stop();
 735              		.loc 1 271 0
 736 00ca FFF7FEFF 		bl	Straight_half_stop
 737              	.LVL88:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 21


 738              	.L69:
 272:Src/mode.c    ****         while (flag_motion_end == FALSE)
 739              		.loc 1 272 0 discriminator 1
 740 00ce 134B     		ldr	r3, .L71+16
 741 00d0 1B88     		ldrh	r3, [r3]
 742 00d2 002B     		cmp	r3, #0
 743 00d4 FBD0     		beq	.L69
 275:Src/mode.c    ****         enc.offset=0;
 744              		.loc 1 275 0
 745 00d6 0F4B     		ldr	r3, .L71+8
 746 00d8 0022     		movs	r2, #0
 747 00da 9A60     		str	r2, [r3, #8]	@ float
 276:Src/mode.c    ****         break;
 748              		.loc 1 276 0
 749 00dc C9E7     		b	.L57
 750              	.L62:
 278:Src/mode.c    ****         flag_wall=TRUE;
 751              		.loc 1 278 0
 752 00de 0E4B     		ldr	r3, .L71+12
 753 00e0 0122     		movs	r2, #1
 754 00e2 1A70     		strb	r2, [r3]
 279:Src/mode.c    ****         Motion_Start();
 755              		.loc 1 279 0
 756 00e4 FFF7FEFF 		bl	Motion_Start
 757              	.LVL89:
 280:Src/mode.c    ****         Motion_Straight();
 758              		.loc 1 280 0
 759 00e8 FFF7FEFF 		bl	Motion_Straight
 760              	.LVL90:
 281:Src/mode.c    ****         Motion_Straight();
 761              		.loc 1 281 0
 762 00ec FFF7FEFF 		bl	Motion_Straight
 763              	.LVL91:
 282:Src/mode.c    ****         Motion_Straight();
 764              		.loc 1 282 0
 765 00f0 FFF7FEFF 		bl	Motion_Straight
 766              	.LVL92:
 283:Src/mode.c    ****         Motion_Straight();
 767              		.loc 1 283 0
 768 00f4 FFF7FEFF 		bl	Motion_Straight
 769              	.LVL93:
 284:Src/mode.c    ****         Motion_Straight();
 770              		.loc 1 284 0
 771 00f8 FFF7FEFF 		bl	Motion_Straight
 772              	.LVL94:
 285:Src/mode.c    ****         Motion_Straight();
 773              		.loc 1 285 0
 774 00fc FFF7FEFF 		bl	Motion_Straight
 775              	.LVL95:
 286:Src/mode.c    ****         Motion_Goal();
 776              		.loc 1 286 0
 777 0100 FFF7FEFF 		bl	Motion_Goal
 778              	.LVL96:
 287:Src/mode.c    ****         break;
 779              		.loc 1 287 0
 780 0104 B5E7     		b	.L57
 781              	.L63:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 22


 289:Src/mode.c    ****         Mode_enkai();
 782              		.loc 1 289 0
 783 0106 FFF7FEFF 		bl	Mode_enkai
 784              	.LVL97:
 290:Src/mode.c    ****         break;
 785              		.loc 1 290 0
 786 010a B2E7     		b	.L57
 787              	.L72:
 788              		.align	2
 789              	.L71:
 790 010c 00000000 		.word	sen_front
 791 0110 00000000 		.word	flag_motor
 792 0114 00000000 		.word	enc
 793 0118 00000000 		.word	flag_wall
 794 011c 00000000 		.word	flag_motion_end
 795              		.cfi_endproc
 796              	.LFE130:
 798              		.section	.text.Mode_Mouse,"ax",%progbits
 799              		.align	1
 800              		.global	Mode_Mouse
 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 804              		.fpu fpv4-sp-d16
 806              	Mode_Mouse:
 807              	.LFB126:
  45:Src/mode.c    **** {
 808              		.loc 1 45 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812              	.LVL98:
 813 0000 10B5     		push	{r4, lr}
 814              	.LCFI8:
 815              		.cfi_def_cfa_offset 8
 816              		.cfi_offset 4, -8
 817              		.cfi_offset 14, -4
 818 0002 FEB0     		sub	sp, sp, #504
 819              	.LCFI9:
 820              		.cfi_def_cfa_offset 512
  46:Src/mode.c    ****     switch (mode)
 821              		.loc 1 46 0
 822 0004 0628     		cmp	r0, #6
 823 0006 08D8     		bhi	.L73
 824 0008 DFE800F0 		tbb	[pc, r0]
 825              	.L76:
 826 000c 04       		.byte	(.L75-.L76)/2
 827 000d 09       		.byte	(.L77-.L76)/2
 828 000e 0D       		.byte	(.L78-.L76)/2
 829 000f 13       		.byte	(.L79-.L76)/2
 830 0010 32       		.byte	(.L80-.L76)/2
 831 0011 51       		.byte	(.L81-.L76)/2
 832 0012 60       		.byte	(.L82-.L76)/2
 833 0013 00       		.p2align 1
 834              	.L75:
  49:Src/mode.c    ****         Mode_Run(FALSE);
 835              		.loc 1 49 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 23


 836 0014 0020     		movs	r0, #0
 837              	.LVL99:
 838 0016 FFF7FEFF 		bl	Mode_Run
 839              	.LVL100:
 840              	.L73:
 103:Src/mode.c    **** }
 841              		.loc 1 103 0
 842 001a 7EB0     		add	sp, sp, #504
 843              	.LCFI10:
 844              		.cfi_remember_state
 845              		.cfi_def_cfa_offset 8
 846              		@ sp needed
 847 001c 10BD     		pop	{r4, pc}
 848              	.LVL101:
 849              	.L77:
 850              	.LCFI11:
 851              		.cfi_restore_state
  52:Src/mode.c    ****         Mode_Run(TRUE);
 852              		.loc 1 52 0
 853 001e 0120     		movs	r0, #1
 854              	.LVL102:
 855 0020 FFF7FEFF 		bl	Mode_Run
 856              	.LVL103:
  53:Src/mode.c    ****         break;
 857              		.loc 1 53 0
 858 0024 F9E7     		b	.L73
 859              	.LVL104:
 860              	.L78:
  55:Src/mode.c    ****         Mode_Adjust(Mode_Select());
 861              		.loc 1 55 0
 862 0026 FFF7FEFF 		bl	Mode_Select
 863              	.LVL105:
 864 002a C0B2     		uxtb	r0, r0
 865 002c FFF7FEFF 		bl	Mode_Adjust
 866              	.LVL106:
  56:Src/mode.c    ****         break;
 867              		.loc 1 56 0
 868 0030 F3E7     		b	.L73
 869              	.LVL107:
 870              	.L79:
  58:Src/mode.c    ****         HAL_Delay(5000);
 871              		.loc 1 58 0
 872 0032 41F28830 		movw	r0, #5000
 873              	.LVL108:
 874 0036 FFF7FEFF 		bl	HAL_Delay
 875              	.LVL109:
  59:Src/mode.c    ****         gyro_offset_calc_reset();
 876              		.loc 1 59 0
 877 003a FFF7FEFF 		bl	gyro_offset_calc_reset
 878              	.LVL110:
  60:Src/mode.c    ****         HAL_Delay(2000);
 879              		.loc 1 60 0
 880 003e 4FF4FA60 		mov	r0, #2000
 881 0042 FFF7FEFF 		bl	HAL_Delay
 882              	.LVL111:
  62:Src/mode.c    ****         flag_motor = TRUE;
 883              		.loc 1 62 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 24


 884 0046 234B     		ldr	r3, .L88
 885 0048 0122     		movs	r2, #1
 886 004a 1A70     		strb	r2, [r3]
  64:Src/mode.c    ****         Straight_half_accel();
 887              		.loc 1 64 0
 888 004c FFF7FEFF 		bl	Straight_half_accel
 889              	.LVL112:
 890              	.L83:
  65:Src/mode.c    ****         while (flag_motion_end == FALSE)
 891              		.loc 1 65 0 discriminator 1
 892 0050 214B     		ldr	r3, .L88+4
 893 0052 1B88     		ldrh	r3, [r3]
 894 0054 002B     		cmp	r3, #0
 895 0056 FBD0     		beq	.L83
  68:Src/mode.c    ****         Motion_Right();
 896              		.loc 1 68 0
 897 0058 FFF7FEFF 		bl	Motion_Right
 898              	.LVL113:
  69:Src/mode.c    ****         Straight_half_stop();
 899              		.loc 1 69 0
 900 005c FFF7FEFF 		bl	Straight_half_stop
 901              	.LVL114:
 902              	.L84:
  70:Src/mode.c    ****         while (flag_motion_end == FALSE)
 903              		.loc 1 70 0 discriminator 1
 904 0060 1D4B     		ldr	r3, .L88+4
 905 0062 1B88     		ldrh	r3, [r3]
 906 0064 002B     		cmp	r3, #0
 907 0066 FBD0     		beq	.L84
  73:Src/mode.c    ****         flag_motor = FALSE;
 908              		.loc 1 73 0
 909 0068 1A4B     		ldr	r3, .L88
 910 006a 0022     		movs	r2, #0
 911 006c 1A70     		strb	r2, [r3]
  74:Src/mode.c    ****         break;
 912              		.loc 1 74 0
 913 006e D4E7     		b	.L73
 914              	.LVL115:
 915              	.L80:
  76:Src/mode.c    ****         HAL_Delay(5000);
 916              		.loc 1 76 0
 917 0070 41F28830 		movw	r0, #5000
 918              	.LVL116:
 919 0074 FFF7FEFF 		bl	HAL_Delay
 920              	.LVL117:
  77:Src/mode.c    ****         gyro_offset_calc_reset();
 921              		.loc 1 77 0
 922 0078 FFF7FEFF 		bl	gyro_offset_calc_reset
 923              	.LVL118:
  78:Src/mode.c    ****         HAL_Delay(2000);
 924              		.loc 1 78 0
 925 007c 4FF4FA60 		mov	r0, #2000
 926 0080 FFF7FEFF 		bl	HAL_Delay
 927              	.LVL119:
  80:Src/mode.c    ****         flag_motor = TRUE;
 928              		.loc 1 80 0
 929 0084 134B     		ldr	r3, .L88
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 25


 930 0086 0122     		movs	r2, #1
 931 0088 1A70     		strb	r2, [r3]
  82:Src/mode.c    ****         Straight_half_accel();
 932              		.loc 1 82 0
 933 008a FFF7FEFF 		bl	Straight_half_accel
 934              	.LVL120:
 935              	.L85:
  83:Src/mode.c    ****         while (flag_motion_end == FALSE)
 936              		.loc 1 83 0 discriminator 1
 937 008e 124B     		ldr	r3, .L88+4
 938 0090 1B88     		ldrh	r3, [r3]
 939 0092 002B     		cmp	r3, #0
 940 0094 FBD0     		beq	.L85
  86:Src/mode.c    ****         Motion_Straight();
 941              		.loc 1 86 0
 942 0096 FFF7FEFF 		bl	Motion_Straight
 943              	.LVL121:
  87:Src/mode.c    ****         Straight_half_stop();
 944              		.loc 1 87 0
 945 009a FFF7FEFF 		bl	Straight_half_stop
 946              	.LVL122:
 947              	.L86:
  88:Src/mode.c    ****         while (flag_motion_end == FALSE)
 948              		.loc 1 88 0 discriminator 1
 949 009e 0E4B     		ldr	r3, .L88+4
 950 00a0 1B88     		ldrh	r3, [r3]
 951 00a2 002B     		cmp	r3, #0
 952 00a4 FBD0     		beq	.L86
  91:Src/mode.c    ****         flag_motor = FALSE;
 953              		.loc 1 91 0
 954 00a6 0B4B     		ldr	r3, .L88
 955 00a8 0022     		movs	r2, #0
 956 00aa 1A70     		strb	r2, [r3]
  92:Src/mode.c    ****         break;
 957              		.loc 1 92 0
 958 00ac B5E7     		b	.L73
 959              	.LVL123:
 960              	.L81:
  94:Src/mode.c    ****         loadMaze();
 961              		.loc 1 94 0
 962 00ae FFF7FEFF 		bl	loadMaze
 963              	.LVL124:
  95:Src/mode.c    ****         Maze_Printf(maze);
 964              		.loc 1 95 0
 965 00b2 0A4C     		ldr	r4, .L88+8
 966 00b4 4FF4FA72 		mov	r2, #500
 967 00b8 04F11001 		add	r1, r4, #16
 968 00bc 6846     		mov	r0, sp
 969 00be FFF7FEFF 		bl	memcpy
 970              	.LVL125:
 971 00c2 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 972 00c6 FFF7FEFF 		bl	Maze_Printf
 973              	.LVL126:
  96:Src/mode.c    ****         break;
 974              		.loc 1 96 0
 975 00ca A6E7     		b	.L73
 976              	.LVL127:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 26


 977              	.L82:
  98:Src/mode.c    ****         Mode_Sensor_Check();
 978              		.loc 1 98 0
 979 00cc FFF7FEFF 		bl	Mode_Sensor_Check
 980              	.LVL128:
 103:Src/mode.c    **** }
 981              		.loc 1 103 0
 982 00d0 A3E7     		b	.L73
 983              	.L89:
 984 00d2 00BF     		.align	2
 985              	.L88:
 986 00d4 00000000 		.word	flag_motor
 987 00d8 00000000 		.word	flag_motion_end
 988 00dc 00000000 		.word	maze
 989              		.cfi_endproc
 990              	.LFE126:
 992              		.section	.rodata.Mode_Select.str1.4,"aMS",%progbits,1
 993              		.align	2
 994              	.LC0:
 995 0000 25640D00 		.ascii	"%d\015\000"
 996              		.section	.rodata.Mode_Sensor_Check.str1.4,"aMS",%progbits,1
 997              		.align	2
 998              	.LC1:
 999 0000 6C3A2564 		.ascii	"l:%d fl:%d f:%d fr:%d r:%d \015\000"
 999      20666C3A 
 999      25642066 
 999      3A256420 
 999      66723A25 
 1000              		.text
 1001              	.Letext0:
 1002              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1003              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1004              		.file 4 "Inc/filter.h"
 1005              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1006              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1007              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1008              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1009              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1010              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1011              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1012              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1013              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1014              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1015              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1016              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1017              		.file 17 "Inc/tim.h"
 1018              		.file 18 "Inc/spi.h"
 1019              		.file 19 "Inc/flash.h"
 1020              		.file 20 "Inc/maze_info.h"
 1021              		.file 21 "Inc/interface.h"
 1022              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1023              		.file 23 "Inc/motion.h"
 1024              		.file 24 "Inc/motion_plan.h"
 1025              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1026              		.file 26 "<built-in>"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 27


DEFINED SYMBOLS
                            *ABS*:00000000 mode.c
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:18     .text.Mode_Select:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:25     .text.Mode_Select:00000000 Mode_Select
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:145    .text.Mode_Select:000000ac $d
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:153    .text.Mode_Sensor_Check:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:160    .text.Mode_Sensor_Check:00000000 Mode_Sensor_Check
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:292    .text.Mode_Sensor_Check:000000cc $d
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:303    .text.Mode_Run:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:310    .text.Mode_Run:00000000 Mode_Run
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:381    .text.Mode_Run:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:386    .text.Mode_Circuit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:393    .text.Mode_Circuit:00000000 Mode_Circuit
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:500    .text.Mode_Circuit:0000008c $d
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:507    .text.Mode_enkai:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:514    .text.Mode_enkai:00000000 Mode_enkai
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:565    .text.Mode_enkai:0000003c $d
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:571    .text.Mode_Adjust:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:578    .text.Mode_Adjust:00000000 Mode_Adjust
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:628    .text.Mode_Adjust:0000003e $d
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:790    .text.Mode_Adjust:0000010c $d
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:799    .text.Mode_Mouse:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:806    .text.Mode_Mouse:00000000 Mode_Mouse
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:826    .text.Mode_Mouse:0000000c $d
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:986    .text.Mode_Mouse:000000d4 $d
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:993    .rodata.Mode_Select.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:997    .rodata.Mode_Sensor_Check.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:633    .text.Mode_Adjust:00000043 $d
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:633    .text.Mode_Adjust:00000044 $t
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:833    .text.Mode_Mouse:00000013 $d
C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s:833    .text.Mode_Mouse:00000014 $t

UNDEFINED SYMBOLS
Output_Buzzer
Push
LED_Control
printf
HAL_Delay
flag_motion_end
flag_motor
enc
adcStart
HAL_GPIO_WritePin
sen_l
sen_fl
sen_front
sen_fr
sen_r
Plan_Adachi
writeMaze
Plan_AllSearch
loadMaze
Plan_Root
Plan_Compress
Plan_Fast
flag_wall
gyro_offset_calc_reset
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccAbKyVd.s 			page 28


Motion_StartFast
Motion_SlalomRight
Motion_StraightFast
Motion_Goal
Motion_Enkai
Straight_half_accel
Motion_SlalomLeft
Straight_half_stop
Motion_Uturn
Motion_Start
Motion_Straight
Motion_Right
memcpy
Maze_Printf
maze
