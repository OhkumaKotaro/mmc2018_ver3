ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"filter.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.setSensorConstant,"ax",%progbits
  18              		.align	1
  19              		.global	setSensorConstant
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	setSensorConstant:
  26              	.LFB126:
  27              		.file 1 "Src/filter.c"
   1:Src/filter.c  **** #include "filter.h"
   2:Src/filter.c  **** #include "adc.h"
   3:Src/filter.c  **** #include "stm32f4xx_hal.h"
   4:Src/filter.c  **** #include "tim.h"
   5:Src/filter.c  **** #include "main.h"
   6:Src/filter.c  **** #include "gpio.h"
   7:Src/filter.c  **** #include "stdint.h"
   8:Src/filter.c  **** #include "filter.h"
   9:Src/filter.c  **** #include "interface.h"
  10:Src/filter.c  **** 
  11:Src/filter.c  **** 
  12:Src/filter.c  **** #define OFF_VALUE 0
  13:Src/filter.c  **** #define LEFT_VALUE 1
  14:Src/filter.c  **** #define RIGHT_VALUE 2
  15:Src/filter.c  **** #define FINISH_CONVERT 3
  16:Src/filter.c  **** 
  17:Src/filter.c  **** #define ADC_CONVERT_DATA_SIZE 4
  18:Src/filter.c  **** 
  19:Src/filter.c  **** #define TRUE 1
  20:Src/filter.c  **** #define FALSE 0
  21:Src/filter.c  **** 
  22:Src/filter.c  **** 
  23:Src/filter.c  **** sensor_t sen_l;
  24:Src/filter.c  **** sensor_t sen_fl;
  25:Src/filter.c  **** sensor_t sen_front;
  26:Src/filter.c  **** sensor_t sen_fr;
  27:Src/filter.c  **** sensor_t sen_r;
  28:Src/filter.c  **** 
  29:Src/filter.c  **** uint16_t ADCBuff[ADC_CONVERT_DATA_SIZE];
  30:Src/filter.c  **** uint16_t ADCOffData[ADC_CONVERT_DATA_SIZE];
  31:Src/filter.c  **** uint16_t ADCOntData[ADC_CONVERT_DATA_SIZE];
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s 			page 2


  32:Src/filter.c  **** int16_t adc_counter;
  33:Src/filter.c  **** 
  34:Src/filter.c  **** void setSensorConstant(void)
  35:Src/filter.c  **** {
  28              		.loc 1 35 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  36:Src/filter.c  ****   sen_l.reference = 504;
  33              		.loc 1 36 0
  34 0000 0A4B     		ldr	r3, .L2
  35 0002 4FF4FC72 		mov	r2, #504
  36 0006 9A80     		strh	r2, [r3, #4]	@ movhi
  37:Src/filter.c  ****   sen_l.threshold = 430;
  37              		.loc 1 37 0
  38 0008 4FF4D772 		mov	r2, #430
  39 000c DA80     		strh	r2, [r3, #6]	@ movhi
  38:Src/filter.c  **** 
  39:Src/filter.c  ****   sen_front.reference = 340;
  40              		.loc 1 39 0
  41 000e 084B     		ldr	r3, .L2+4
  42 0010 4FF4AA72 		mov	r2, #340
  43 0014 9A80     		strh	r2, [r3, #4]	@ movhi
  40:Src/filter.c  ****   sen_front.threshold = 310;
  44              		.loc 1 40 0
  45 0016 4FF49B72 		mov	r2, #310
  46 001a DA80     		strh	r2, [r3, #6]	@ movhi
  41:Src/filter.c  **** 
  42:Src/filter.c  ****   sen_r.reference = 618;
  47              		.loc 1 42 0
  48 001c 054B     		ldr	r3, .L2+8
  49 001e 40F26A22 		movw	r2, #618
  50 0022 9A80     		strh	r2, [r3, #4]	@ movhi
  43:Src/filter.c  ****   sen_r.threshold = 555;
  51              		.loc 1 43 0
  52 0024 40F22B22 		movw	r2, #555
  53 0028 DA80     		strh	r2, [r3, #6]	@ movhi
  44:Src/filter.c  **** }
  54              		.loc 1 44 0
  55 002a 7047     		bx	lr
  56              	.L3:
  57              		.align	2
  58              	.L2:
  59 002c 00000000 		.word	sen_l
  60 0030 00000000 		.word	sen_front
  61 0034 00000000 		.word	sen_r
  62              		.cfi_endproc
  63              	.LFE126:
  65              		.section	.text.update_sensor_data,"ax",%progbits
  66              		.align	1
  67              		.global	update_sensor_data
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu fpv4-sp-d16
  73              	update_sensor_data:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s 			page 3


  74              	.LFB127:
  45:Src/filter.c  **** 
  46:Src/filter.c  **** void update_sensor_data(void)
  47:Src/filter.c  **** {
  75              		.loc 1 47 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  48:Src/filter.c  **** 
  49:Src/filter.c  ****   sen_front.now = (sen_fl.now + sen_fr.now) / 2;
  80              		.loc 1 49 0
  81 0000 1A4B     		ldr	r3, .L12
  82 0002 B3F90030 		ldrsh	r3, [r3]
  83 0006 1A4A     		ldr	r2, .L12+4
  84 0008 B2F90020 		ldrsh	r2, [r2]
  85 000c 1344     		add	r3, r3, r2
  86 000e 03EBD373 		add	r3, r3, r3, lsr #31
  87 0012 43F34F03 		sbfx	r3, r3, #1, #16
  88 0016 174A     		ldr	r2, .L12+8
  89 0018 1380     		strh	r3, [r2]	@ movhi
  50:Src/filter.c  **** 
  51:Src/filter.c  ****   if (sen_front.now < sen_front.threshold)
  90              		.loc 1 51 0
  91 001a B2F90620 		ldrsh	r2, [r2, #6]
  92 001e 9342     		cmp	r3, r2
  93 0020 17DA     		bge	.L5
  52:Src/filter.c  ****   {
  53:Src/filter.c  ****     sen_front.is_wall = FALSE;
  94              		.loc 1 53 0
  95 0022 144B     		ldr	r3, .L12+8
  96 0024 0022     		movs	r2, #0
  97 0026 1A73     		strb	r2, [r3, #12]
  98              	.L6:
  54:Src/filter.c  ****   }
  55:Src/filter.c  ****   else
  56:Src/filter.c  ****   {
  57:Src/filter.c  ****     sen_front.is_wall = TRUE;
  58:Src/filter.c  ****   }
  59:Src/filter.c  **** 
  60:Src/filter.c  ****   if (sen_l.now < sen_l.threshold)
  99              		.loc 1 60 0
 100 0028 134B     		ldr	r3, .L12+12
 101 002a B3F90020 		ldrsh	r2, [r3]
 102 002e B3F90630 		ldrsh	r3, [r3, #6]
 103 0032 9A42     		cmp	r2, r3
 104 0034 11DA     		bge	.L7
  61:Src/filter.c  ****   {
  62:Src/filter.c  ****     sen_l.is_wall = FALSE;
 105              		.loc 1 62 0
 106 0036 104B     		ldr	r3, .L12+12
 107 0038 0022     		movs	r2, #0
 108 003a 1A73     		strb	r2, [r3, #12]
 109              	.L8:
  63:Src/filter.c  ****   }
  64:Src/filter.c  ****   else
  65:Src/filter.c  ****   {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s 			page 4


  66:Src/filter.c  ****     sen_l.is_wall = TRUE;
  67:Src/filter.c  ****   }
  68:Src/filter.c  **** 
  69:Src/filter.c  ****   if (sen_r.now < sen_r.threshold)
 110              		.loc 1 69 0
 111 003c 0F4B     		ldr	r3, .L12+16
 112 003e B3F90020 		ldrsh	r2, [r3]
 113 0042 B3F90630 		ldrsh	r3, [r3, #6]
 114 0046 9A42     		cmp	r2, r3
 115 0048 0BDB     		blt	.L11
  70:Src/filter.c  ****   {
  71:Src/filter.c  ****     sen_r.is_wall = FALSE;
  72:Src/filter.c  ****   }
  73:Src/filter.c  ****   else
  74:Src/filter.c  ****   {
  75:Src/filter.c  ****     sen_r.is_wall = TRUE;
 116              		.loc 1 75 0
 117 004a 0C4B     		ldr	r3, .L12+16
 118 004c 0122     		movs	r2, #1
 119 004e 1A73     		strb	r2, [r3, #12]
  76:Src/filter.c  ****   }
  77:Src/filter.c  **** }
 120              		.loc 1 77 0
 121 0050 7047     		bx	lr
 122              	.L5:
  57:Src/filter.c  ****   }
 123              		.loc 1 57 0
 124 0052 084B     		ldr	r3, .L12+8
 125 0054 0122     		movs	r2, #1
 126 0056 1A73     		strb	r2, [r3, #12]
 127 0058 E6E7     		b	.L6
 128              	.L7:
  66:Src/filter.c  ****   }
 129              		.loc 1 66 0
 130 005a 074B     		ldr	r3, .L12+12
 131 005c 0122     		movs	r2, #1
 132 005e 1A73     		strb	r2, [r3, #12]
 133 0060 ECE7     		b	.L8
 134              	.L11:
  71:Src/filter.c  ****   }
 135              		.loc 1 71 0
 136 0062 064B     		ldr	r3, .L12+16
 137 0064 0022     		movs	r2, #0
 138 0066 1A73     		strb	r2, [r3, #12]
 139 0068 7047     		bx	lr
 140              	.L13:
 141 006a 00BF     		.align	2
 142              	.L12:
 143 006c 00000000 		.word	sen_fl
 144 0070 00000000 		.word	sen_fr
 145 0074 00000000 		.word	sen_front
 146 0078 00000000 		.word	sen_l
 147 007c 00000000 		.word	sen_r
 148              		.cfi_endproc
 149              	.LFE127:
 151              		.section	.text.adcStart,"ax",%progbits
 152              		.align	1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s 			page 5


 153              		.global	adcStart
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv4-sp-d16
 159              	adcStart:
 160              	.LFB128:
  78:Src/filter.c  **** 
  79:Src/filter.c  **** void adcStart(void)
  80:Src/filter.c  **** {
 161              		.loc 1 80 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 08B5     		push	{r3, lr}
 166              	.LCFI0:
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 3, -8
 169              		.cfi_offset 14, -4
  81:Src/filter.c  ****   adc_counter = 0;
 170              		.loc 1 81 0
 171 0002 044B     		ldr	r3, .L16
 172 0004 0022     		movs	r2, #0
 173 0006 1A80     		strh	r2, [r3]	@ movhi
  82:Src/filter.c  ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t *)ADCBuff, ADC_CONVERT_DATA_SIZE);
 174              		.loc 1 82 0
 175 0008 0422     		movs	r2, #4
 176 000a 0349     		ldr	r1, .L16+4
 177 000c 0348     		ldr	r0, .L16+8
 178 000e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 179              	.LVL0:
  83:Src/filter.c  **** }
 180              		.loc 1 83 0
 181 0012 08BD     		pop	{r3, pc}
 182              	.L17:
 183              		.align	2
 184              	.L16:
 185 0014 00000000 		.word	adc_counter
 186 0018 00000000 		.word	ADCBuff
 187 001c 00000000 		.word	hadc1
 188              		.cfi_endproc
 189              	.LFE128:
 191              		.section	.text.adcCheckConvert,"ax",%progbits
 192              		.align	1
 193              		.global	adcCheckConvert
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	adcCheckConvert:
 200              	.LFB129:
  84:Src/filter.c  **** 
  85:Src/filter.c  **** void adcCheckConvert(void)
  86:Src/filter.c  **** {
 201              		.loc 1 86 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s 			page 6


 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI1:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
  87:Src/filter.c  ****   if (adc_counter == FINISH_CONVERT)
 210              		.loc 1 87 0
 211 0002 104B     		ldr	r3, .L22
 212 0004 B3F90030 		ldrsh	r3, [r3]
 213 0008 032B     		cmp	r3, #3
 214 000a 00D0     		beq	.L21
 215              	.L18:
  88:Src/filter.c  ****   {
  89:Src/filter.c  ****     update_sensor_data();
  90:Src/filter.c  ****     adc_counter = 0;
  91:Src/filter.c  ****     HAL_ADC_Start_DMA(&hadc1, (uint32_t *)ADCBuff, ADC_CONVERT_DATA_SIZE);
  92:Src/filter.c  **** 
  93:Src/filter.c  ****     sen_l.diff_1ms = sen_l.now - sen_l.befor_1ms;
  94:Src/filter.c  ****     sen_l.befor_1ms = sen_l.now;
  95:Src/filter.c  **** 
  96:Src/filter.c  ****     sen_r.diff_1ms = sen_r.now - sen_r.befor_1ms;
  97:Src/filter.c  ****     sen_r.befor_1ms = sen_r.now;
  98:Src/filter.c  ****   }
  99:Src/filter.c  **** }
 216              		.loc 1 99 0
 217 000c 08BD     		pop	{r3, pc}
 218              	.L21:
  89:Src/filter.c  ****     adc_counter = 0;
 219              		.loc 1 89 0
 220 000e FFF7FEFF 		bl	update_sensor_data
 221              	.LVL1:
  90:Src/filter.c  ****     HAL_ADC_Start_DMA(&hadc1, (uint32_t *)ADCBuff, ADC_CONVERT_DATA_SIZE);
 222              		.loc 1 90 0
 223 0012 0C4B     		ldr	r3, .L22
 224 0014 0022     		movs	r2, #0
 225 0016 1A80     		strh	r2, [r3]	@ movhi
  91:Src/filter.c  **** 
 226              		.loc 1 91 0
 227 0018 0422     		movs	r2, #4
 228 001a 0B49     		ldr	r1, .L22+4
 229 001c 0B48     		ldr	r0, .L22+8
 230 001e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 231              	.LVL2:
  93:Src/filter.c  ****     sen_l.befor_1ms = sen_l.now;
 232              		.loc 1 93 0
 233 0022 0B4B     		ldr	r3, .L22+12
 234 0024 B3F90010 		ldrsh	r1, [r3]
 235 0028 8AB2     		uxth	r2, r1
 236 002a 5888     		ldrh	r0, [r3, #2]
 237 002c 121A     		subs	r2, r2, r0
 238 002e 5A81     		strh	r2, [r3, #10]	@ movhi
  94:Src/filter.c  **** 
 239              		.loc 1 94 0
 240 0030 5980     		strh	r1, [r3, #2]	@ movhi
  96:Src/filter.c  ****     sen_r.befor_1ms = sen_r.now;
 241              		.loc 1 96 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s 			page 7


 242 0032 084B     		ldr	r3, .L22+16
 243 0034 B3F90010 		ldrsh	r1, [r3]
 244 0038 8AB2     		uxth	r2, r1
 245 003a 5888     		ldrh	r0, [r3, #2]
 246 003c 121A     		subs	r2, r2, r0
 247 003e 5A81     		strh	r2, [r3, #10]	@ movhi
  97:Src/filter.c  ****   }
 248              		.loc 1 97 0
 249 0040 5980     		strh	r1, [r3, #2]	@ movhi
 250              		.loc 1 99 0
 251 0042 E3E7     		b	.L18
 252              	.L23:
 253              		.align	2
 254              	.L22:
 255 0044 00000000 		.word	adc_counter
 256 0048 00000000 		.word	ADCBuff
 257 004c 00000000 		.word	hadc1
 258 0050 00000000 		.word	sen_l
 259 0054 00000000 		.word	sen_r
 260              		.cfi_endproc
 261              	.LFE129:
 263              		.section	.text.getADSensor,"ax",%progbits
 264              		.align	1
 265              		.global	getADSensor
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 269              		.fpu fpv4-sp-d16
 271              	getADSensor:
 272              	.LFB130:
 100:Src/filter.c  **** 
 101:Src/filter.c  **** // DMA の変換式を記載
 102:Src/filter.c  **** void getADSensor(void)
 103:Src/filter.c  **** {
 273              		.loc 1 103 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 8
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 278              	.LCFI2:
 279              		.cfi_def_cfa_offset 20
 280              		.cfi_offset 4, -20
 281              		.cfi_offset 5, -16
 282              		.cfi_offset 6, -12
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 285 0002 83B0     		sub	sp, sp, #12
 286              	.LCFI3:
 287              		.cfi_def_cfa_offset 32
 104:Src/filter.c  ****   volatile unsigned char i;
 105:Src/filter.c  ****   switch (adc_counter)
 288              		.loc 1 105 0
 289 0004 514B     		ldr	r3, .L33
 290 0006 B3F90030 		ldrsh	r3, [r3]
 291 000a 012B     		cmp	r3, #1
 292 000c 26D0     		beq	.L26
 293 000e 022B     		cmp	r3, #2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s 			page 8


 294 0010 6FD0     		beq	.L27
 295 0012 0BB1     		cbz	r3, .L32
 296              	.L24:
 106:Src/filter.c  ****   {
 107:Src/filter.c  ****   case OFF_VALUE:
 108:Src/filter.c  ****     HAL_ADC_Stop_DMA(&hadc1);
 109:Src/filter.c  ****     ADCOffData[0] = ADCBuff[0];
 110:Src/filter.c  ****     ADCOffData[1] = ADCBuff[1];
 111:Src/filter.c  ****     ADCOffData[2] = ADCBuff[2];
 112:Src/filter.c  ****     ADCOffData[3] = ADCBuff[3];
 113:Src/filter.c  **** 
 114:Src/filter.c  ****     HAL_GPIO_WritePin(paluse2_GPIO_Port, paluse2_Pin, GPIO_PIN_SET);
 115:Src/filter.c  ****     HAL_GPIO_WritePin(paluse3_GPIO_Port, paluse3_Pin, GPIO_PIN_SET);
 116:Src/filter.c  ****     /*
 117:Src/filter.c  ****     for (i = 0; i < 100; i++)
 118:Src/filter.c  ****     {
 119:Src/filter.c  ****     }
 120:Src/filter.c  ****     */
 121:Src/filter.c  ****     adc_counter = LEFT_VALUE;
 122:Src/filter.c  **** 
 123:Src/filter.c  ****     HAL_ADC_Start_DMA(&hadc1, (uint32_t *)ADCBuff,ADC_CONVERT_DATA_SIZE);
 124:Src/filter.c  ****     break;
 125:Src/filter.c  **** 
 126:Src/filter.c  ****   case LEFT_VALUE:
 127:Src/filter.c  ****     HAL_ADC_Stop_DMA(&hadc1);
 128:Src/filter.c  ****     HAL_GPIO_WritePin(paluse2_GPIO_Port, paluse2_Pin, GPIO_PIN_RESET);
 129:Src/filter.c  ****     HAL_GPIO_WritePin(paluse3_GPIO_Port, paluse3_Pin, GPIO_PIN_RESET);
 130:Src/filter.c  **** 
 131:Src/filter.c  ****     ADCOntData[2] = ADCBuff[2];
 132:Src/filter.c  ****     ADCOntData[3] = ADCBuff[3];
 133:Src/filter.c  **** 
 134:Src/filter.c  ****     sen_l.diff = sen_l.now - (ADCOntData[2] - ADCOffData[2]);
 135:Src/filter.c  ****     sen_l.now = ADCOntData[2] - ADCOffData[2];
 136:Src/filter.c  **** 
 137:Src/filter.c  ****     sen_fl.diff = sen_fl.now - (ADCOntData[3] - ADCOffData[3]);
 138:Src/filter.c  ****     sen_fl.now = ADCOntData[3] - ADCOffData[3];
 139:Src/filter.c  **** 
 140:Src/filter.c  ****     HAL_GPIO_WritePin(paluse0_GPIO_Port, paluse0_Pin, GPIO_PIN_SET);
 141:Src/filter.c  ****     HAL_GPIO_WritePin(paluse1_GPIO_Port, paluse1_Pin, GPIO_PIN_SET);
 142:Src/filter.c  **** 
 143:Src/filter.c  ****     
 144:Src/filter.c  ****     for (i = 0; i < 100; i++)
 145:Src/filter.c  ****     {
 146:Src/filter.c  ****     }
 147:Src/filter.c  ****     
 148:Src/filter.c  ****     adc_counter = RIGHT_VALUE;
 149:Src/filter.c  **** 
 150:Src/filter.c  ****     HAL_ADC_Start_DMA(&hadc1, (uint32_t *)ADCBuff,ADC_CONVERT_DATA_SIZE);
 151:Src/filter.c  ****     break;
 152:Src/filter.c  **** 
 153:Src/filter.c  ****   case RIGHT_VALUE:
 154:Src/filter.c  ****     HAL_ADC_Stop_DMA(&hadc1);
 155:Src/filter.c  ****     HAL_GPIO_WritePin(paluse0_GPIO_Port, paluse0_Pin, GPIO_PIN_RESET);
 156:Src/filter.c  ****     HAL_GPIO_WritePin(paluse1_GPIO_Port, paluse1_Pin, GPIO_PIN_RESET);
 157:Src/filter.c  **** 
 158:Src/filter.c  ****     ADCOntData[0] = ADCBuff[0];
 159:Src/filter.c  ****     ADCOntData[1] = ADCBuff[1];
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s 			page 9


 160:Src/filter.c  **** 
 161:Src/filter.c  ****     sen_fr.diff = sen_fr.now - (ADCOntData[0] - ADCOffData[0]);
 162:Src/filter.c  ****     sen_fr.now = ADCOntData[0] - ADCOffData[0];
 163:Src/filter.c  **** 
 164:Src/filter.c  ****     sen_r.diff = sen_r.now - (ADCOntData[1] - ADCOffData[1]);
 165:Src/filter.c  ****     sen_r.now = ADCOntData[1] - ADCOffData[1];
 166:Src/filter.c  ****     /*
 167:Src/filter.c  ****     for (i = 0; i < 100; i++)
 168:Src/filter.c  ****     {
 169:Src/filter.c  ****     }
 170:Src/filter.c  ****     */
 171:Src/filter.c  ****     adc_counter = FINISH_CONVERT;
 172:Src/filter.c  ****     break;
 173:Src/filter.c  **** 
 174:Src/filter.c  ****   default:
 175:Src/filter.c  ****     break;
 176:Src/filter.c  ****   }
 177:Src/filter.c  **** }
 297              		.loc 1 177 0
 298 0014 03B0     		add	sp, sp, #12
 299              	.LCFI4:
 300              		.cfi_remember_state
 301              		.cfi_def_cfa_offset 20
 302              		@ sp needed
 303 0016 F0BD     		pop	{r4, r5, r6, r7, pc}
 304              	.L32:
 305              	.LCFI5:
 306              		.cfi_restore_state
 108:Src/filter.c  ****     ADCOffData[0] = ADCBuff[0];
 307              		.loc 1 108 0
 308 0018 4D4D     		ldr	r5, .L33+4
 309 001a 2846     		mov	r0, r5
 310 001c FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 311              	.LVL3:
 109:Src/filter.c  ****     ADCOffData[1] = ADCBuff[1];
 312              		.loc 1 109 0
 313 0020 4C4C     		ldr	r4, .L33+8
 314 0022 2288     		ldrh	r2, [r4]
 315 0024 4C4B     		ldr	r3, .L33+12
 316 0026 1A80     		strh	r2, [r3]	@ movhi
 110:Src/filter.c  ****     ADCOffData[2] = ADCBuff[2];
 317              		.loc 1 110 0
 318 0028 6288     		ldrh	r2, [r4, #2]
 319 002a 5A80     		strh	r2, [r3, #2]	@ movhi
 111:Src/filter.c  ****     ADCOffData[3] = ADCBuff[3];
 320              		.loc 1 111 0
 321 002c A288     		ldrh	r2, [r4, #4]
 322 002e 9A80     		strh	r2, [r3, #4]	@ movhi
 112:Src/filter.c  **** 
 323              		.loc 1 112 0
 324 0030 E288     		ldrh	r2, [r4, #6]
 325 0032 DA80     		strh	r2, [r3, #6]	@ movhi
 114:Src/filter.c  ****     HAL_GPIO_WritePin(paluse3_GPIO_Port, paluse3_Pin, GPIO_PIN_SET);
 326              		.loc 1 114 0
 327 0034 494E     		ldr	r6, .L33+16
 328 0036 0122     		movs	r2, #1
 329 0038 0421     		movs	r1, #4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s 			page 10


 330 003a 3046     		mov	r0, r6
 331 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 332              	.LVL4:
 115:Src/filter.c  ****     /*
 333              		.loc 1 115 0
 334 0040 0122     		movs	r2, #1
 335 0042 0821     		movs	r1, #8
 336 0044 3046     		mov	r0, r6
 337 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 338              	.LVL5:
 121:Src/filter.c  **** 
 339              		.loc 1 121 0
 340 004a 404B     		ldr	r3, .L33
 341 004c 0122     		movs	r2, #1
 342 004e 1A80     		strh	r2, [r3]	@ movhi
 123:Src/filter.c  ****     break;
 343              		.loc 1 123 0
 344 0050 0422     		movs	r2, #4
 345 0052 2146     		mov	r1, r4
 346 0054 2846     		mov	r0, r5
 347 0056 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 348              	.LVL6:
 124:Src/filter.c  **** 
 349              		.loc 1 124 0
 350 005a DBE7     		b	.L24
 351              	.L26:
 127:Src/filter.c  ****     HAL_GPIO_WritePin(paluse2_GPIO_Port, paluse2_Pin, GPIO_PIN_RESET);
 352              		.loc 1 127 0
 353 005c 3C48     		ldr	r0, .L33+4
 354 005e FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 355              	.LVL7:
 128:Src/filter.c  ****     HAL_GPIO_WritePin(paluse3_GPIO_Port, paluse3_Pin, GPIO_PIN_RESET);
 356              		.loc 1 128 0
 357 0062 3E4C     		ldr	r4, .L33+16
 358 0064 0022     		movs	r2, #0
 359 0066 0421     		movs	r1, #4
 360 0068 2046     		mov	r0, r4
 361 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 362              	.LVL8:
 129:Src/filter.c  **** 
 363              		.loc 1 129 0
 364 006e 0022     		movs	r2, #0
 365 0070 0821     		movs	r1, #8
 366 0072 2046     		mov	r0, r4
 367 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 368              	.LVL9:
 131:Src/filter.c  ****     ADCOntData[3] = ADCBuff[3];
 369              		.loc 1 131 0
 370 0078 364B     		ldr	r3, .L33+8
 371 007a 9A88     		ldrh	r2, [r3, #4]
 372 007c 3849     		ldr	r1, .L33+20
 373 007e 8A80     		strh	r2, [r1, #4]	@ movhi
 132:Src/filter.c  **** 
 374              		.loc 1 132 0
 375 0080 DB88     		ldrh	r3, [r3, #6]
 376 0082 CB80     		strh	r3, [r1, #6]	@ movhi
 134:Src/filter.c  ****     sen_l.now = ADCOntData[2] - ADCOffData[2];
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s 			page 11


 377              		.loc 1 134 0
 378 0084 3749     		ldr	r1, .L33+24
 379 0086 B1F90070 		ldrsh	r7, [r1]
 380 008a 334D     		ldr	r5, .L33+12
 381 008c AE88     		ldrh	r6, [r5, #4]
 382 008e B01A     		subs	r0, r6, r2
 383 0090 17FA80F0 		uxtah	r0, r7, r0
 384 0094 0881     		strh	r0, [r1, #8]	@ movhi
 135:Src/filter.c  **** 
 385              		.loc 1 135 0
 386 0096 921B     		subs	r2, r2, r6
 387 0098 0A80     		strh	r2, [r1]	@ movhi
 137:Src/filter.c  ****     sen_fl.now = ADCOntData[3] - ADCOffData[3];
 388              		.loc 1 137 0
 389 009a 334A     		ldr	r2, .L33+28
 390 009c B2F90060 		ldrsh	r6, [r2]
 391 00a0 E888     		ldrh	r0, [r5, #6]
 392 00a2 C11A     		subs	r1, r0, r3
 393 00a4 16FA81F1 		uxtah	r1, r6, r1
 394 00a8 1181     		strh	r1, [r2, #8]	@ movhi
 138:Src/filter.c  **** 
 395              		.loc 1 138 0
 396 00aa 1B1A     		subs	r3, r3, r0
 397 00ac 1380     		strh	r3, [r2]	@ movhi
 140:Src/filter.c  ****     HAL_GPIO_WritePin(paluse1_GPIO_Port, paluse1_Pin, GPIO_PIN_SET);
 398              		.loc 1 140 0
 399 00ae 0122     		movs	r2, #1
 400 00b0 1146     		mov	r1, r2
 401 00b2 2046     		mov	r0, r4
 402 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 403              	.LVL10:
 141:Src/filter.c  **** 
 404              		.loc 1 141 0
 405 00b8 0122     		movs	r2, #1
 406 00ba 0221     		movs	r1, #2
 407 00bc 2046     		mov	r0, r4
 408 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
 409              	.LVL11:
 144:Src/filter.c  ****     {
 410              		.loc 1 144 0
 411 00c2 0023     		movs	r3, #0
 412 00c4 8DF80730 		strb	r3, [sp, #7]
 413 00c8 05E0     		b	.L29
 414              	.L30:
 144:Src/filter.c  ****     {
 415              		.loc 1 144 0 is_stmt 0 discriminator 3
 416 00ca 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 417 00ce 0133     		adds	r3, r3, #1
 418 00d0 DBB2     		uxtb	r3, r3
 419 00d2 8DF80730 		strb	r3, [sp, #7]
 420              	.L29:
 144:Src/filter.c  ****     {
 421              		.loc 1 144 0 discriminator 1
 422 00d6 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 423 00da DBB2     		uxtb	r3, r3
 424 00dc 632B     		cmp	r3, #99
 425 00de F4D9     		bls	.L30
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s 			page 12


 148:Src/filter.c  **** 
 426              		.loc 1 148 0 is_stmt 1
 427 00e0 1A4B     		ldr	r3, .L33
 428 00e2 0222     		movs	r2, #2
 429 00e4 1A80     		strh	r2, [r3]	@ movhi
 150:Src/filter.c  ****     break;
 430              		.loc 1 150 0
 431 00e6 0422     		movs	r2, #4
 432 00e8 1A49     		ldr	r1, .L33+8
 433 00ea 1948     		ldr	r0, .L33+4
 434 00ec FFF7FEFF 		bl	HAL_ADC_Start_DMA
 435              	.LVL12:
 151:Src/filter.c  **** 
 436              		.loc 1 151 0
 437 00f0 90E7     		b	.L24
 438              	.L27:
 154:Src/filter.c  ****     HAL_GPIO_WritePin(paluse0_GPIO_Port, paluse0_Pin, GPIO_PIN_RESET);
 439              		.loc 1 154 0
 440 00f2 1748     		ldr	r0, .L33+4
 441 00f4 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 442              	.LVL13:
 155:Src/filter.c  ****     HAL_GPIO_WritePin(paluse1_GPIO_Port, paluse1_Pin, GPIO_PIN_RESET);
 443              		.loc 1 155 0
 444 00f8 184C     		ldr	r4, .L33+16
 445 00fa 0022     		movs	r2, #0
 446 00fc 0121     		movs	r1, #1
 447 00fe 2046     		mov	r0, r4
 448 0100 FFF7FEFF 		bl	HAL_GPIO_WritePin
 449              	.LVL14:
 156:Src/filter.c  **** 
 450              		.loc 1 156 0
 451 0104 0022     		movs	r2, #0
 452 0106 0221     		movs	r1, #2
 453 0108 2046     		mov	r0, r4
 454 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 455              	.LVL15:
 158:Src/filter.c  ****     ADCOntData[1] = ADCBuff[1];
 456              		.loc 1 158 0
 457 010e 114B     		ldr	r3, .L33+8
 458 0110 1A88     		ldrh	r2, [r3]
 459 0112 1349     		ldr	r1, .L33+20
 460 0114 0A80     		strh	r2, [r1]	@ movhi
 159:Src/filter.c  **** 
 461              		.loc 1 159 0
 462 0116 5B88     		ldrh	r3, [r3, #2]
 463 0118 4B80     		strh	r3, [r1, #2]	@ movhi
 161:Src/filter.c  ****     sen_fr.now = ADCOntData[0] - ADCOffData[0];
 464              		.loc 1 161 0
 465 011a 1449     		ldr	r1, .L33+32
 466 011c B1F90060 		ldrsh	r6, [r1]
 467 0120 0D4C     		ldr	r4, .L33+12
 468 0122 2588     		ldrh	r5, [r4]
 469 0124 A81A     		subs	r0, r5, r2
 470 0126 16FA80F0 		uxtah	r0, r6, r0
 471 012a 0881     		strh	r0, [r1, #8]	@ movhi
 162:Src/filter.c  **** 
 472              		.loc 1 162 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s 			page 13


 473 012c 521B     		subs	r2, r2, r5
 474 012e 0A80     		strh	r2, [r1]	@ movhi
 164:Src/filter.c  ****     sen_r.now = ADCOntData[1] - ADCOffData[1];
 475              		.loc 1 164 0
 476 0130 0F4A     		ldr	r2, .L33+36
 477 0132 B2F90050 		ldrsh	r5, [r2]
 478 0136 6088     		ldrh	r0, [r4, #2]
 479 0138 C11A     		subs	r1, r0, r3
 480 013a 15FA81F1 		uxtah	r1, r5, r1
 481 013e 1181     		strh	r1, [r2, #8]	@ movhi
 165:Src/filter.c  ****     /*
 482              		.loc 1 165 0
 483 0140 1B1A     		subs	r3, r3, r0
 484 0142 1380     		strh	r3, [r2]	@ movhi
 171:Src/filter.c  ****     break;
 485              		.loc 1 171 0
 486 0144 014B     		ldr	r3, .L33
 487 0146 0322     		movs	r2, #3
 488 0148 1A80     		strh	r2, [r3]	@ movhi
 489              		.loc 1 177 0
 490 014a 63E7     		b	.L24
 491              	.L34:
 492              		.align	2
 493              	.L33:
 494 014c 00000000 		.word	adc_counter
 495 0150 00000000 		.word	hadc1
 496 0154 00000000 		.word	ADCBuff
 497 0158 00000000 		.word	ADCOffData
 498 015c 00080240 		.word	1073874944
 499 0160 00000000 		.word	ADCOntData
 500 0164 00000000 		.word	sen_l
 501 0168 00000000 		.word	sen_fl
 502 016c 00000000 		.word	sen_fr
 503 0170 00000000 		.word	sen_r
 504              		.cfi_endproc
 505              	.LFE130:
 507              		.section	.text.Filter_GetBatt,"ax",%progbits
 508              		.align	1
 509              		.global	Filter_GetBatt
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 513              		.fpu fpv4-sp-d16
 515              	Filter_GetBatt:
 516              	.LFB131:
 178:Src/filter.c  **** 
 179:Src/filter.c  **** float Filter_GetBatt(void)
 180:Src/filter.c  **** {
 517              		.loc 1 180 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 8
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521 0000 30B5     		push	{r4, r5, lr}
 522              	.LCFI6:
 523              		.cfi_def_cfa_offset 12
 524              		.cfi_offset 4, -12
 525              		.cfi_offset 5, -8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s 			page 14


 526              		.cfi_offset 14, -4
 527 0002 2DED028B 		vpush.64	{d8}
 528              	.LCFI7:
 529              		.cfi_def_cfa_offset 20
 530              		.cfi_offset 80, -20
 531              		.cfi_offset 81, -16
 532 0006 83B0     		sub	sp, sp, #12
 533              	.LCFI8:
 534              		.cfi_def_cfa_offset 32
 535              	.LVL16:
 536              	.LBB2:
 181:Src/filter.c  ****   float batt = 0;
 182:Src/filter.c  ****   for (int i = 0; i < 10; i++)
 537              		.loc 1 182 0
 538 0008 0024     		movs	r4, #0
 539              	.LBE2:
 181:Src/filter.c  ****   float batt = 0;
 540              		.loc 1 181 0
 541 000a 9FED1F8A 		vldr.32	s16, .L40
 542              	.LBB3:
 543              		.loc 1 182 0
 544 000e 16E0     		b	.L36
 545              	.LVL17:
 546              	.L38:
 183:Src/filter.c  ****   {
 184:Src/filter.c  ****     HAL_ADC_Start(&hadc2); // ad convert start
 547              		.loc 1 184 0
 548 0010 1E48     		ldr	r0, .L40+4
 549 0012 FFF7FEFF 		bl	HAL_ADC_Start
 550              	.LVL18:
 551              	.L37:
 185:Src/filter.c  ****     while (HAL_ADC_PollForConversion(&hadc2, 50) != HAL_OK)
 552              		.loc 1 185 0 discriminator 1
 553 0016 3221     		movs	r1, #50
 554 0018 1C48     		ldr	r0, .L40+4
 555 001a FFF7FEFF 		bl	HAL_ADC_PollForConversion
 556              	.LVL19:
 557 001e 0028     		cmp	r0, #0
 558 0020 F9D1     		bne	.L37
 186:Src/filter.c  ****     {
 187:Src/filter.c  ****     } // trans
 188:Src/filter.c  ****     batt += HAL_ADC_GetValue(&hadc2);
 559              		.loc 1 188 0 discriminator 2
 560 0022 1A4D     		ldr	r5, .L40+4
 561 0024 2846     		mov	r0, r5
 562 0026 FFF7FEFF 		bl	HAL_ADC_GetValue
 563              	.LVL20:
 564 002a 07EE900A 		vmov	s15, r0	@ int
 565 002e F8EE677A 		vcvt.f32.u32	s15, s15
 566 0032 38EE278A 		vadd.f32	s16, s16, s15
 567              	.LVL21:
 189:Src/filter.c  ****     HAL_ADC_Stop(&hadc2);
 568              		.loc 1 189 0 discriminator 2
 569 0036 2846     		mov	r0, r5
 570 0038 FFF7FEFF 		bl	HAL_ADC_Stop
 571              	.LVL22:
 182:Src/filter.c  ****   {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s 			page 15


 572              		.loc 1 182 0 discriminator 2
 573 003c 0134     		adds	r4, r4, #1
 574              	.LVL23:
 575              	.L36:
 182:Src/filter.c  ****   {
 576              		.loc 1 182 0 is_stmt 0 discriminator 1
 577 003e 092C     		cmp	r4, #9
 578 0040 E6DD     		ble	.L38
 579              	.LBE3:
 190:Src/filter.c  ****   }
 191:Src/filter.c  ****   batt = batt / 10.0f / 4095.0f * 133.0f / 33.0f * 3.3f;
 580              		.loc 1 191 0 is_stmt 1
 581 0042 F2EE047A 		vmov.f32	s15, #1.0e+1
 582 0046 C8EE276A 		vdiv.f32	s13, s16, s15
 583 004a 9FED117A 		vldr.32	s14, .L40+8
 584 004e C6EE877A 		vdiv.f32	s15, s13, s14
 585 0052 9FED107A 		vldr.32	s14, .L40+12
 586 0056 67EE877A 		vmul.f32	s15, s15, s14
 587 005a 9FED0F7A 		vldr.32	s14, .L40+16
 588 005e 87EE878A 		vdiv.f32	s16, s15, s14
 589              	.LVL24:
 590 0062 DFED0E7A 		vldr.32	s15, .L40+20
 591 0066 28EE278A 		vmul.f32	s16, s16, s15
 592              	.LVL25:
 192:Src/filter.c  ****   LED_Control((unsigned char)batt);
 593              		.loc 1 192 0
 594 006a FCEEC87A 		vcvt.u32.f32	s15, s16
 595 006e CDED017A 		vstr.32	s15, [sp, #4]	@ int
 596 0072 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 597 0076 FFF7FEFF 		bl	LED_Control
 598              	.LVL26:
 193:Src/filter.c  ****   return batt;
 194:Src/filter.c  **** }
 599              		.loc 1 194 0
 600 007a B0EE480A 		vmov.f32	s0, s16
 601 007e 03B0     		add	sp, sp, #12
 602              	.LCFI9:
 603              		.cfi_def_cfa_offset 20
 604              		@ sp needed
 605 0080 BDEC028B 		vldm	sp!, {d8}
 606              	.LCFI10:
 607              		.cfi_restore 80
 608              		.cfi_restore 81
 609              		.cfi_def_cfa_offset 12
 610              	.LVL27:
 611 0084 30BD     		pop	{r4, r5, pc}
 612              	.LVL28:
 613              	.L41:
 614 0086 00BF     		.align	2
 615              	.L40:
 616 0088 00000000 		.word	0
 617 008c 00000000 		.word	hadc2
 618 0090 00F07F45 		.word	1166012416
 619 0094 00000543 		.word	1124401152
 620 0098 00000442 		.word	1107558400
 621 009c 33335340 		.word	1079194419
 622              		.cfi_endproc
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s 			page 16


 623              	.LFE131:
 625              		.comm	adc_counter,2,2
 626              		.comm	ADCOntData,8,4
 627              		.comm	ADCOffData,8,4
 628              		.comm	ADCBuff,8,4
 629              		.comm	sen_r,14,4
 630              		.comm	sen_fr,14,4
 631              		.comm	sen_front,14,4
 632              		.comm	sen_fl,14,4
 633              		.comm	sen_l,14,4
 634              		.text
 635              	.Letext0:
 636              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 637              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 638              		.file 4 "Inc/filter.h"
 639              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 640              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 641              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 642              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 643              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 644              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 645              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 646              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 647              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 648              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 649              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 650              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 651              		.file 17 "Inc/adc.h"
 652              		.file 18 "Inc/tim.h"
 653              		.file 19 "Inc/interface.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 filter.c
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:18     .text.setSensorConstant:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:25     .text.setSensorConstant:00000000 setSensorConstant
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:59     .text.setSensorConstant:0000002c $d
                            *COM*:0000000e sen_l
                            *COM*:0000000e sen_front
                            *COM*:0000000e sen_r
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:66     .text.update_sensor_data:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:73     .text.update_sensor_data:00000000 update_sensor_data
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:143    .text.update_sensor_data:0000006c $d
                            *COM*:0000000e sen_fl
                            *COM*:0000000e sen_fr
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:152    .text.adcStart:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:159    .text.adcStart:00000000 adcStart
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:185    .text.adcStart:00000014 $d
                            *COM*:00000002 adc_counter
                            *COM*:00000008 ADCBuff
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:192    .text.adcCheckConvert:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:199    .text.adcCheckConvert:00000000 adcCheckConvert
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:255    .text.adcCheckConvert:00000044 $d
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:264    .text.getADSensor:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:271    .text.getADSensor:00000000 getADSensor
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:494    .text.getADSensor:0000014c $d
                            *COM*:00000008 ADCOffData
                            *COM*:00000008 ADCOntData
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:508    .text.Filter_GetBatt:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:515    .text.Filter_GetBatt:00000000 Filter_GetBatt
C:\Users\kotaro\AppData\Local\Temp\ccVK2mA4.s:616    .text.Filter_GetBatt:00000088 $d

UNDEFINED SYMBOLS
HAL_ADC_Start_DMA
hadc1
HAL_ADC_Stop_DMA
HAL_GPIO_WritePin
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_ADC_Stop
LED_Control
hadc2
