ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mode.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Mode_Select,"ax",%progbits
  18              		.align	1
  19              		.global	Mode_Select
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Mode_Select:
  26              	.LFB127:
  27              		.file 1 "Src/mode.c"
   1:Src/mode.c    **** #include "mode.h"
   2:Src/mode.c    **** #include "filter.h"
   3:Src/mode.c    **** #include "gpio.h"
   4:Src/mode.c    **** #include "interface.h"
   5:Src/mode.c    **** #include "stdint.h"
   6:Src/mode.c    **** #include "tim.h"
   7:Src/mode.c    **** #include "filter.h"
   8:Src/mode.c    **** #include "motion.h"
   9:Src/mode.c    **** #include "control.h"
  10:Src/mode.c    **** #include "spi.h"
  11:Src/mode.c    **** #include "flash.h"
  12:Src/mode.c    **** #include "maze_info.h"
  13:Src/mode.c    **** #include "motion_plan.h"
  14:Src/mode.c    **** 
  15:Src/mode.c    **** #define TRUE 1
  16:Src/mode.c    **** #define FALSE 0
  17:Src/mode.c    **** #define ON 1
  18:Src/mode.c    **** #define OFF 0
  19:Src/mode.c    **** 
  20:Src/mode.c    **** extern enc_t enc;
  21:Src/mode.c    **** 
  22:Src/mode.c    **** extern sensor_t sen_l;
  23:Src/mode.c    **** extern sensor_t sen_front;
  24:Src/mode.c    **** extern sensor_t sen_r;
  25:Src/mode.c    **** 
  26:Src/mode.c    **** extern uint16_t flag_motion_end;
  27:Src/mode.c    **** extern uint8_t flag_motor;
  28:Src/mode.c    **** 
  29:Src/mode.c    **** extern maze_t maze;
  30:Src/mode.c    **** 
  31:Src/mode.c    **** void Mode_Run(unsigned char flag_search);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 2


  32:Src/mode.c    **** 
  33:Src/mode.c    **** /****************************************************************************************
  34:Src/mode.c    ****  * outline  : wright mode 
  35:Src/mode.c    ****  * argument : mode nomber
  36:Src/mode.c    ****  * return   : void
  37:Src/mode.c    **** ********************************************************************************************/
  38:Src/mode.c    **** void Mode_Mouse(int8_t mode)
  39:Src/mode.c    **** {
  40:Src/mode.c    ****     switch (mode)
  41:Src/mode.c    ****     {
  42:Src/mode.c    ****     case 0:
  43:Src/mode.c    ****         Mode_Run(FALSE);
  44:Src/mode.c    ****         break;
  45:Src/mode.c    ****     case 1:
  46:Src/mode.c    ****         Mode_Run(TRUE);
  47:Src/mode.c    ****         break;
  48:Src/mode.c    ****     case 2:
  49:Src/mode.c    ****         HAL_Delay(5000);
  50:Src/mode.c    ****         gyro_offset_calc_reset();
  51:Src/mode.c    ****         HAL_Delay(2000);
  52:Src/mode.c    **** 
  53:Src/mode.c    ****         flag_motor = TRUE;
  54:Src/mode.c    **** 
  55:Src/mode.c    ****         Straight_half_accel();
  56:Src/mode.c    ****         while (flag_motion_end == FALSE)
  57:Src/mode.c    ****         {
  58:Src/mode.c    ****         }
  59:Src/mode.c    ****         Motion_Left();
  60:Src/mode.c    ****         Straight_half_stop();
  61:Src/mode.c    ****         while (flag_motion_end == FALSE)
  62:Src/mode.c    ****         {
  63:Src/mode.c    ****         }
  64:Src/mode.c    ****         flag_motor = FALSE;
  65:Src/mode.c    ****         break;
  66:Src/mode.c    ****     case 3:
  67:Src/mode.c    ****         HAL_Delay(5000);
  68:Src/mode.c    ****         gyro_offset_calc_reset();
  69:Src/mode.c    ****         HAL_Delay(2000);
  70:Src/mode.c    **** 
  71:Src/mode.c    ****         flag_motor = TRUE;
  72:Src/mode.c    **** 
  73:Src/mode.c    ****         Straight_half_accel();
  74:Src/mode.c    ****         while (flag_motion_end == FALSE)
  75:Src/mode.c    ****         {
  76:Src/mode.c    ****         }
  77:Src/mode.c    ****         Motion_Right();
  78:Src/mode.c    ****         Straight_half_stop();
  79:Src/mode.c    ****         while (flag_motion_end == FALSE)
  80:Src/mode.c    ****         {
  81:Src/mode.c    ****         }
  82:Src/mode.c    ****         flag_motor = FALSE;
  83:Src/mode.c    ****         break;
  84:Src/mode.c    ****     case 4:
  85:Src/mode.c    ****         HAL_Delay(5000);
  86:Src/mode.c    ****         gyro_offset_calc_reset();
  87:Src/mode.c    ****         HAL_Delay(2000);
  88:Src/mode.c    **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 3


  89:Src/mode.c    ****         flag_motor = TRUE;
  90:Src/mode.c    **** 
  91:Src/mode.c    ****         Straight_half_accel();
  92:Src/mode.c    ****         while (flag_motion_end == FALSE)
  93:Src/mode.c    ****         {
  94:Src/mode.c    ****         }
  95:Src/mode.c    ****         Motion_Straight();
  96:Src/mode.c    ****         Straight_half_stop();
  97:Src/mode.c    ****         while (flag_motion_end == FALSE)
  98:Src/mode.c    ****         {
  99:Src/mode.c    ****         }
 100:Src/mode.c    ****         flag_motor = FALSE;
 101:Src/mode.c    ****         break;
 102:Src/mode.c    ****     case 5:
 103:Src/mode.c    ****         loadMaze();
 104:Src/mode.c    ****         Maze_Printf(maze);
 105:Src/mode.c    ****         break;
 106:Src/mode.c    ****     case 6:
 107:Src/mode.c    ****         Mode_Sensor_Check();
 108:Src/mode.c    ****         break;
 109:Src/mode.c    ****     default:
 110:Src/mode.c    ****         break;
 111:Src/mode.c    ****     }
 112:Src/mode.c    **** }
 113:Src/mode.c    **** 
 114:Src/mode.c    **** /****************************************************************************************
 115:Src/mode.c    ****  * outline  : return mode nomber
 116:Src/mode.c    ****  * argument : void
 117:Src/mode.c    ****  * return   : mode nomber 
 118:Src/mode.c    **** ********************************************************************************************/
 119:Src/mode.c    **** int8_t Mode_Select(void)
 120:Src/mode.c    **** {
  28              		.loc 1 120 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              	.LVL0:
 121:Src/mode.c    ****     int8_t mode = 0;
 122:Src/mode.c    ****     flag_motion_end = TRUE;
  38              		.loc 1 122 0
  39 0002 2A4B     		ldr	r3, .L20
  40 0004 0122     		movs	r2, #1
  41 0006 1A80     		strh	r2, [r3]	@ movhi
 123:Src/mode.c    ****     flag_motor = FALSE;
  42              		.loc 1 123 0
  43 0008 0024     		movs	r4, #0
  44 000a 294B     		ldr	r3, .L20+4
  45 000c 1C70     		strb	r4, [r3]
  46 000e 23E0     		b	.L11
  47              	.LVL1:
  48              	.L16:
 124:Src/mode.c    **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 4


 125:Src/mode.c    ****     while (1)
 126:Src/mode.c    ****     {
 127:Src/mode.c    ****         if (enc.distance > 15 || enc.distance < -15)
 128:Src/mode.c    ****         {
 129:Src/mode.c    ****             if (enc.distance > 15)
 130:Src/mode.c    ****             {
 131:Src/mode.c    ****                 mode++;
 132:Src/mode.c    ****             }
 133:Src/mode.c    ****             else if (enc.distance < -15)
  49              		.loc 1 133 0
  50 0010 BAEE0E7A 		vmov.f32	s14, #-1.5e+1
  51 0014 F4EEC77A 		vcmpe.f32	s15, s14
  52 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  53 001c 36D5     		bpl	.L7
 134:Src/mode.c    ****             {
 135:Src/mode.c    ****                 mode--;
  54              		.loc 1 135 0
  55 001e 013C     		subs	r4, r4, #1
  56              	.LVL2:
  57 0020 64B2     		sxtb	r4, r4
  58              	.LVL3:
  59 0022 33E0     		b	.L7
  60              	.L12:
 136:Src/mode.c    ****             }
 137:Src/mode.c    ****             if (mode > 6)
 138:Src/mode.c    ****             {
 139:Src/mode.c    ****                 mode = 0;
  61              		.loc 1 139 0
  62 0024 0024     		movs	r4, #0
  63              	.LVL4:
  64              	.L9:
 140:Src/mode.c    ****             }
 141:Src/mode.c    ****             else if (mode < 0)
 142:Src/mode.c    ****             {
 143:Src/mode.c    ****                 mode = 6;
 144:Src/mode.c    ****             }
 145:Src/mode.c    ****             enc.distance = 0;
  65              		.loc 1 145 0
  66 0026 234B     		ldr	r3, .L20+8
  67 0028 0022     		movs	r2, #0
  68 002a 1A60     		str	r2, [r3]	@ float
 146:Src/mode.c    ****             Output_Buzzer(170 - 10 * mode);
  69              		.loc 1 146 0
  70 002c C4EB4413 		rsb	r3, r4, r4, lsl #5
  71 0030 C4EB8303 		rsb	r3, r4, r3, lsl #2
  72 0034 5800     		lsls	r0, r3, #1
  73 0036 C0B2     		uxtb	r0, r0
  74 0038 5638     		subs	r0, r0, #86
  75 003a 00F0FE00 		and	r0, r0, #254
  76 003e FFF7FEFF 		bl	Output_Buzzer
  77              	.LVL5:
  78              	.L3:
 147:Src/mode.c    ****         }
 148:Src/mode.c    ****         if (Push() == ON)
  79              		.loc 1 148 0
  80 0042 FFF7FEFF 		bl	Push
  81              	.LVL6:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 5


  82 0046 0128     		cmp	r0, #1
  83 0048 26D0     		beq	.L18
 149:Src/mode.c    ****         {
 150:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
 151:Src/mode.c    ****             HAL_Delay(500);
 152:Src/mode.c    ****             break;
 153:Src/mode.c    ****         }
 154:Src/mode.c    ****         LED_Control(mode);
  84              		.loc 1 154 0
  85 004a E0B2     		uxtb	r0, r4
  86 004c FFF7FEFF 		bl	LED_Control
  87              	.LVL7:
 155:Src/mode.c    ****         printf("%d\r", mode);
  88              		.loc 1 155 0
  89 0050 2146     		mov	r1, r4
  90 0052 1948     		ldr	r0, .L20+12
  91 0054 FFF7FEFF 		bl	printf
  92              	.LVL8:
  93              	.L11:
 127:Src/mode.c    ****         {
  94              		.loc 1 127 0
  95 0058 164B     		ldr	r3, .L20+8
  96 005a D3ED007A 		vldr.32	s15, [r3]
  97 005e B2EE0E7A 		vmov.f32	s14, #1.5e+1
  98 0062 F4EEC77A 		vcmpe.f32	s15, s14
  99 0066 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 100 006a 06DC     		bgt	.L2
 127:Src/mode.c    ****         {
 101              		.loc 1 127 0 is_stmt 0 discriminator 1
 102 006c BAEE0E7A 		vmov.f32	s14, #-1.5e+1
 103 0070 F4EEC77A 		vcmpe.f32	s15, s14
 104 0074 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 105 0078 E3D5     		bpl	.L3
 106              	.L2:
 129:Src/mode.c    ****             {
 107              		.loc 1 129 0 is_stmt 1
 108 007a B2EE0E7A 		vmov.f32	s14, #1.5e+1
 109 007e F4EEC77A 		vcmpe.f32	s15, s14
 110 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 111 0086 C3DD     		ble	.L16
 131:Src/mode.c    ****             }
 112              		.loc 1 131 0
 113 0088 0134     		adds	r4, r4, #1
 114              	.LVL9:
 115 008a 64B2     		sxtb	r4, r4
 116              	.LVL10:
 117              	.L7:
 137:Src/mode.c    ****             {
 118              		.loc 1 137 0
 119 008c 062C     		cmp	r4, #6
 120 008e C9DC     		bgt	.L12
 141:Src/mode.c    ****             {
 121              		.loc 1 141 0
 122 0090 002C     		cmp	r4, #0
 123 0092 C8DA     		bge	.L9
 143:Src/mode.c    ****             }
 124              		.loc 1 143 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 6


 125 0094 0624     		movs	r4, #6
 126              	.LVL11:
 127 0096 C6E7     		b	.L9
 128              	.LVL12:
 129              	.L18:
 150:Src/mode.c    ****             HAL_Delay(500);
 130              		.loc 1 150 0
 131 0098 4C20     		movs	r0, #76
 132 009a FFF7FEFF 		bl	Output_Buzzer
 133              	.LVL13:
 151:Src/mode.c    ****             break;
 134              		.loc 1 151 0
 135 009e 4FF4FA70 		mov	r0, #500
 136 00a2 FFF7FEFF 		bl	HAL_Delay
 137              	.LVL14:
 156:Src/mode.c    ****     }
 157:Src/mode.c    ****     return mode;
 158:Src/mode.c    **** }
 138              		.loc 1 158 0
 139 00a6 2046     		mov	r0, r4
 140 00a8 10BD     		pop	{r4, pc}
 141              	.LVL15:
 142              	.L21:
 143 00aa 00BF     		.align	2
 144              	.L20:
 145 00ac 00000000 		.word	flag_motion_end
 146 00b0 00000000 		.word	flag_motor
 147 00b4 00000000 		.word	enc
 148 00b8 00000000 		.word	.LC0
 149              		.cfi_endproc
 150              	.LFE127:
 152              		.section	.text.Mode_Sensor_Check,"ax",%progbits
 153              		.align	1
 154              		.global	Mode_Sensor_Check
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu fpv4-sp-d16
 160              	Mode_Sensor_Check:
 161              	.LFB128:
 159:Src/mode.c    **** 
 160:Src/mode.c    **** void Mode_Sensor_Check(void)
 161:Src/mode.c    **** {
 162              		.loc 1 161 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166 0000 10B5     		push	{r4, lr}
 167              	.LCFI1:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 4, -8
 170              		.cfi_offset 14, -4
 162:Src/mode.c    ****     adcStart();
 171              		.loc 1 162 0
 172 0002 FFF7FEFF 		bl	adcStart
 173              	.LVL16:
 174 0006 29E0     		b	.L29
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 7


 175              	.L32:
 163:Src/mode.c    **** 
 164:Src/mode.c    ****     while (1)
 165:Src/mode.c    ****     {
 166:Src/mode.c    ****         if (sen_r.is_wall == TRUE)
 167:Src/mode.c    ****         {
 168:Src/mode.c    ****             HAL_GPIO_WritePin(led0_GPIO_Port, led0_Pin, GPIO_PIN_RESET);
 176              		.loc 1 168 0
 177 0008 0022     		movs	r2, #0
 178 000a 4FF40051 		mov	r1, #8192
 179 000e 2A48     		ldr	r0, .L35
 180 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 181              	.LVL17:
 182 0014 2CE0     		b	.L24
 183              	.L33:
 169:Src/mode.c    ****         }
 170:Src/mode.c    ****         else
 171:Src/mode.c    ****         {
 172:Src/mode.c    ****             HAL_GPIO_WritePin(led0_GPIO_Port, led0_Pin, GPIO_PIN_SET);
 173:Src/mode.c    ****         }
 174:Src/mode.c    ****         if (sen_l.is_wall == TRUE)
 175:Src/mode.c    ****         {
 176:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_RESET);
 184              		.loc 1 176 0
 185 0016 0022     		movs	r2, #0
 186 0018 4FF48041 		mov	r1, #16384
 187 001c 2648     		ldr	r0, .L35
 188 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 189              	.LVL18:
 190 0022 2FE0     		b	.L26
 191              	.L34:
 177:Src/mode.c    ****         }
 178:Src/mode.c    ****         else
 179:Src/mode.c    ****         {
 180:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_SET);
 181:Src/mode.c    ****         }
 182:Src/mode.c    ****         if (sen_front.is_wall == TRUE)
 183:Src/mode.c    ****         {
 184:Src/mode.c    ****             HAL_GPIO_WritePin(led3_GPIO_Port, led3_Pin, GPIO_PIN_RESET);
 192              		.loc 1 184 0
 193 0024 244C     		ldr	r4, .L35
 194 0026 0022     		movs	r2, #0
 195 0028 4FF48071 		mov	r1, #256
 196 002c 2046     		mov	r0, r4
 197 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 198              	.LVL19:
 185:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_RESET);
 199              		.loc 1 185 0
 200 0032 0022     		movs	r2, #0
 201 0034 8021     		movs	r1, #128
 202 0036 2046     		mov	r0, r4
 203 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 204              	.LVL20:
 205              	.L28:
 186:Src/mode.c    ****         }
 187:Src/mode.c    ****         else
 188:Src/mode.c    ****         {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 8


 189:Src/mode.c    ****             HAL_GPIO_WritePin(led3_GPIO_Port, led3_Pin, GPIO_PIN_SET);
 190:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_SET);
 191:Src/mode.c    ****         }
 192:Src/mode.c    ****         printf("l:%d f:%d r:%d \r", sen_l.now, sen_front.now, sen_r.now);
 206              		.loc 1 192 0
 207 003c 1F4B     		ldr	r3, .L35+4
 208 003e B3F90030 		ldrsh	r3, [r3]
 209 0042 1F4A     		ldr	r2, .L35+8
 210 0044 B2F90020 		ldrsh	r2, [r2]
 211 0048 1E49     		ldr	r1, .L35+12
 212 004a B1F90010 		ldrsh	r1, [r1]
 213 004e 1E48     		ldr	r0, .L35+16
 214 0050 FFF7FEFF 		bl	printf
 215              	.LVL21:
 193:Src/mode.c    **** 
 194:Src/mode.c    ****         if (Push() == ON)
 216              		.loc 1 194 0
 217 0054 FFF7FEFF 		bl	Push
 218              	.LVL22:
 219 0058 0128     		cmp	r0, #1
 220 005a 24D0     		beq	.L31
 221              	.L29:
 166:Src/mode.c    ****         {
 222              		.loc 1 166 0
 223 005c 174B     		ldr	r3, .L35+4
 224 005e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 225 0060 012B     		cmp	r3, #1
 226 0062 D1D0     		beq	.L32
 172:Src/mode.c    ****         }
 227              		.loc 1 172 0
 228 0064 0122     		movs	r2, #1
 229 0066 4FF40051 		mov	r1, #8192
 230 006a 1348     		ldr	r0, .L35
 231 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 232              	.LVL23:
 233              	.L24:
 174:Src/mode.c    ****         {
 234              		.loc 1 174 0
 235 0070 144B     		ldr	r3, .L35+12
 236 0072 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 237 0074 012B     		cmp	r3, #1
 238 0076 CED0     		beq	.L33
 180:Src/mode.c    ****         }
 239              		.loc 1 180 0
 240 0078 0122     		movs	r2, #1
 241 007a 4FF48041 		mov	r1, #16384
 242 007e 0E48     		ldr	r0, .L35
 243 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 244              	.LVL24:
 245              	.L26:
 182:Src/mode.c    ****         {
 246              		.loc 1 182 0
 247 0084 0E4B     		ldr	r3, .L35+8
 248 0086 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 249 0088 012B     		cmp	r3, #1
 250 008a CBD0     		beq	.L34
 189:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_SET);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 9


 251              		.loc 1 189 0
 252 008c 0A4C     		ldr	r4, .L35
 253 008e 0122     		movs	r2, #1
 254 0090 4FF48071 		mov	r1, #256
 255 0094 2046     		mov	r0, r4
 256 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 257              	.LVL25:
 190:Src/mode.c    ****         }
 258              		.loc 1 190 0
 259 009a 0122     		movs	r2, #1
 260 009c 8021     		movs	r1, #128
 261 009e 2046     		mov	r0, r4
 262 00a0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 263              	.LVL26:
 264 00a4 CAE7     		b	.L28
 265              	.L31:
 195:Src/mode.c    ****         {
 196:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
 266              		.loc 1 196 0
 267 00a6 4C20     		movs	r0, #76
 268 00a8 FFF7FEFF 		bl	Output_Buzzer
 269              	.LVL27:
 197:Src/mode.c    ****             HAL_Delay(500);
 270              		.loc 1 197 0
 271 00ac 4FF4FA70 		mov	r0, #500
 272 00b0 FFF7FEFF 		bl	HAL_Delay
 273              	.LVL28:
 198:Src/mode.c    ****             break;
 199:Src/mode.c    ****         }
 200:Src/mode.c    ****     }
 201:Src/mode.c    **** }
 274              		.loc 1 201 0
 275 00b4 10BD     		pop	{r4, pc}
 276              	.L36:
 277 00b6 00BF     		.align	2
 278              	.L35:
 279 00b8 00080240 		.word	1073874944
 280 00bc 00000000 		.word	sen_r
 281 00c0 00000000 		.word	sen_front
 282 00c4 00000000 		.word	sen_l
 283 00c8 00000000 		.word	.LC1
 284              		.cfi_endproc
 285              	.LFE128:
 287              		.section	.text.Mode_Run,"ax",%progbits
 288              		.align	1
 289              		.global	Mode_Run
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv4-sp-d16
 295              	Mode_Run:
 296              	.LFB129:
 202:Src/mode.c    **** 
 203:Src/mode.c    **** void Mode_Run(unsigned char flag_search)
 204:Src/mode.c    **** {
 297              		.loc 1 204 0
 298              		.cfi_startproc
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 10


 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              	.LVL29:
 302 0000 08B5     		push	{r3, lr}
 303              	.LCFI2:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 3, -8
 306              		.cfi_offset 14, -4
 205:Src/mode.c    ****     if (flag_search == FALSE)
 307              		.loc 1 205 0
 308 0002 10B1     		cbz	r0, .L41
 206:Src/mode.c    ****     {
 207:Src/mode.c    ****         Plan_Adachi();
 208:Src/mode.c    ****         HAL_Delay(500);
 209:Src/mode.c    ****         writeMaze();
 210:Src/mode.c    ****         HAL_Delay(1000);
 211:Src/mode.c    ****         Plan_AllSearch();
 212:Src/mode.c    ****         HAL_Delay(500);
 213:Src/mode.c    ****         writeMaze();
 214:Src/mode.c    ****     }
 215:Src/mode.c    ****     else if(flag_search==TRUE)
 309              		.loc 1 215 0
 310 0004 0128     		cmp	r0, #1
 311 0006 15D0     		beq	.L42
 312              	.LVL30:
 313              	.L37:
 216:Src/mode.c    ****     {
 217:Src/mode.c    ****         loadMaze();
 218:Src/mode.c    ****         Plan_Root();
 219:Src/mode.c    ****         Plan_Compress();
 220:Src/mode.c    ****         Plan_Fast();
 221:Src/mode.c    ****     }
 222:Src/mode.c    **** }...
 314              		.loc 1 222 0
 315 0008 08BD     		pop	{r3, pc}
 316              	.LVL31:
 317              	.L41:
 207:Src/mode.c    ****         Plan_Adachi();
 318              		.loc 1 207 0
 319 000a FFF7FEFF 		bl	Plan_Adachi
 320              	.LVL32:
 208:Src/mode.c    ****         HAL_Delay(500);
 321              		.loc 1 208 0
 322 000e 4FF4FA70 		mov	r0, #500
 323 0012 FFF7FEFF 		bl	HAL_Delay
 324              	.LVL33:
 209:Src/mode.c    ****         writeMaze();
 325              		.loc 1 209 0
 326 0016 FFF7FEFF 		bl	writeMaze
 327              	.LVL34:
 210:Src/mode.c    ****         HAL_Delay(1000);
 328              		.loc 1 210 0
 329 001a 4FF47A70 		mov	r0, #1000
 330 001e FFF7FEFF 		bl	HAL_Delay
 331              	.LVL35:
 211:Src/mode.c    ****         Plan_AllSearch();
 332              		.loc 1 211 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 11


 333 0022 FFF7FEFF 		bl	Plan_AllSearch
 334              	.LVL36:
 212:Src/mode.c    ****         HAL_Delay(500);
 335              		.loc 1 212 0
 336 0026 4FF4FA70 		mov	r0, #500
 337 002a FFF7FEFF 		bl	HAL_Delay
 338              	.LVL37:
 213:Src/mode.c    ****         writeMaze();
 339              		.loc 1 213 0
 340 002e FFF7FEFF 		bl	writeMaze
 341              	.LVL38:
 342 0032 E9E7     		b	.L37
 343              	.LVL39:
 344              	.L42:
 217:Src/mode.c    ****         loadMaze();
 345              		.loc 1 217 0
 346 0034 FFF7FEFF 		bl	loadMaze
 347              	.LVL40:
 218:Src/mode.c    ****         Plan_Root();
 348              		.loc 1 218 0
 349 0038 FFF7FEFF 		bl	Plan_Root
 350              	.LVL41:
 219:Src/mode.c    ****         Plan_Compress();
 351              		.loc 1 219 0
 352 003c FFF7FEFF 		bl	Plan_Compress
 353              	.LVL42:
 220:Src/mode.c    ****         Plan_Fast();
 354              		.loc 1 220 0
 355 0040 FFF7FEFF 		bl	Plan_Fast
 356              	.LVL43:
 357              		.loc 1 222 0
 358 0044 E0E7     		b	.L37
 359              		.cfi_endproc
 360              	.LFE129:
 362              		.section	.text.Mode_Mouse,"ax",%progbits
 363              		.align	1
 364              		.global	Mode_Mouse
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu fpv4-sp-d16
 370              	Mode_Mouse:
 371              	.LFB126:
  39:Src/mode.c    **** {
 372              		.loc 1 39 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              	.LVL44:
 377 0000 10B5     		push	{r4, lr}
 378              	.LCFI3:
 379              		.cfi_def_cfa_offset 8
 380              		.cfi_offset 4, -8
 381              		.cfi_offset 14, -4
 382 0002 FEB0     		sub	sp, sp, #504
 383              	.LCFI4:
 384              		.cfi_def_cfa_offset 512
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 12


  40:Src/mode.c    ****     switch (mode)
 385              		.loc 1 40 0
 386 0004 0628     		cmp	r0, #6
 387 0006 08D8     		bhi	.L43
 388 0008 DFE800F0 		tbb	[pc, r0]
 389              	.L46:
 390 000c 04       		.byte	(.L45-.L46)/2
 391 000d 09       		.byte	(.L47-.L46)/2
 392 000e 0D       		.byte	(.L48-.L46)/2
 393 000f 2C       		.byte	(.L49-.L46)/2
 394 0010 4B       		.byte	(.L50-.L46)/2
 395 0011 6A       		.byte	(.L51-.L46)/2
 396 0012 79       		.byte	(.L52-.L46)/2
 397 0013 00       		.p2align 1
 398              	.L45:
  43:Src/mode.c    ****         Mode_Run(FALSE);
 399              		.loc 1 43 0
 400 0014 0020     		movs	r0, #0
 401              	.LVL45:
 402 0016 FFF7FEFF 		bl	Mode_Run
 403              	.LVL46:
 404              	.L43:
 112:Src/mode.c    **** }
 405              		.loc 1 112 0
 406 001a 7EB0     		add	sp, sp, #504
 407              	.LCFI5:
 408              		.cfi_remember_state
 409              		.cfi_def_cfa_offset 8
 410              		@ sp needed
 411 001c 10BD     		pop	{r4, pc}
 412              	.LVL47:
 413              	.L47:
 414              	.LCFI6:
 415              		.cfi_restore_state
  46:Src/mode.c    ****         Mode_Run(TRUE);
 416              		.loc 1 46 0
 417 001e 0120     		movs	r0, #1
 418              	.LVL48:
 419 0020 FFF7FEFF 		bl	Mode_Run
 420              	.LVL49:
  47:Src/mode.c    ****         break;
 421              		.loc 1 47 0
 422 0024 F9E7     		b	.L43
 423              	.LVL50:
 424              	.L48:
  49:Src/mode.c    ****         HAL_Delay(5000);
 425              		.loc 1 49 0
 426 0026 41F28830 		movw	r0, #5000
 427              	.LVL51:
 428 002a FFF7FEFF 		bl	HAL_Delay
 429              	.LVL52:
  50:Src/mode.c    ****         gyro_offset_calc_reset();
 430              		.loc 1 50 0
 431 002e FFF7FEFF 		bl	gyro_offset_calc_reset
 432              	.LVL53:
  51:Src/mode.c    ****         HAL_Delay(2000);
 433              		.loc 1 51 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 13


 434 0032 4FF4FA60 		mov	r0, #2000
 435 0036 FFF7FEFF 		bl	HAL_Delay
 436              	.LVL54:
  53:Src/mode.c    ****         flag_motor = TRUE;
 437              		.loc 1 53 0
 438 003a 324B     		ldr	r3, .L60
 439 003c 0122     		movs	r2, #1
 440 003e 1A70     		strb	r2, [r3]
  55:Src/mode.c    ****         Straight_half_accel();
 441              		.loc 1 55 0
 442 0040 FFF7FEFF 		bl	Straight_half_accel
 443              	.LVL55:
 444              	.L53:
  56:Src/mode.c    ****         while (flag_motion_end == FALSE)
 445              		.loc 1 56 0 discriminator 1
 446 0044 304B     		ldr	r3, .L60+4
 447 0046 1B88     		ldrh	r3, [r3]
 448 0048 002B     		cmp	r3, #0
 449 004a FBD0     		beq	.L53
  59:Src/mode.c    ****         Motion_Left();
 450              		.loc 1 59 0
 451 004c FFF7FEFF 		bl	Motion_Left
 452              	.LVL56:
  60:Src/mode.c    ****         Straight_half_stop();
 453              		.loc 1 60 0
 454 0050 FFF7FEFF 		bl	Straight_half_stop
 455              	.LVL57:
 456              	.L54:
  61:Src/mode.c    ****         while (flag_motion_end == FALSE)
 457              		.loc 1 61 0 discriminator 1
 458 0054 2C4B     		ldr	r3, .L60+4
 459 0056 1B88     		ldrh	r3, [r3]
 460 0058 002B     		cmp	r3, #0
 461 005a FBD0     		beq	.L54
  64:Src/mode.c    ****         flag_motor = FALSE;
 462              		.loc 1 64 0
 463 005c 294B     		ldr	r3, .L60
 464 005e 0022     		movs	r2, #0
 465 0060 1A70     		strb	r2, [r3]
  65:Src/mode.c    ****         break;
 466              		.loc 1 65 0
 467 0062 DAE7     		b	.L43
 468              	.LVL58:
 469              	.L49:
  67:Src/mode.c    ****         HAL_Delay(5000);
 470              		.loc 1 67 0
 471 0064 41F28830 		movw	r0, #5000
 472              	.LVL59:
 473 0068 FFF7FEFF 		bl	HAL_Delay
 474              	.LVL60:
  68:Src/mode.c    ****         gyro_offset_calc_reset();
 475              		.loc 1 68 0
 476 006c FFF7FEFF 		bl	gyro_offset_calc_reset
 477              	.LVL61:
  69:Src/mode.c    ****         HAL_Delay(2000);
 478              		.loc 1 69 0
 479 0070 4FF4FA60 		mov	r0, #2000
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 14


 480 0074 FFF7FEFF 		bl	HAL_Delay
 481              	.LVL62:
  71:Src/mode.c    ****         flag_motor = TRUE;
 482              		.loc 1 71 0
 483 0078 224B     		ldr	r3, .L60
 484 007a 0122     		movs	r2, #1
 485 007c 1A70     		strb	r2, [r3]
  73:Src/mode.c    ****         Straight_half_accel();
 486              		.loc 1 73 0
 487 007e FFF7FEFF 		bl	Straight_half_accel
 488              	.LVL63:
 489              	.L55:
  74:Src/mode.c    ****         while (flag_motion_end == FALSE)
 490              		.loc 1 74 0 discriminator 1
 491 0082 214B     		ldr	r3, .L60+4
 492 0084 1B88     		ldrh	r3, [r3]
 493 0086 002B     		cmp	r3, #0
 494 0088 FBD0     		beq	.L55
  77:Src/mode.c    ****         Motion_Right();
 495              		.loc 1 77 0
 496 008a FFF7FEFF 		bl	Motion_Right
 497              	.LVL64:
  78:Src/mode.c    ****         Straight_half_stop();
 498              		.loc 1 78 0
 499 008e FFF7FEFF 		bl	Straight_half_stop
 500              	.LVL65:
 501              	.L56:
  79:Src/mode.c    ****         while (flag_motion_end == FALSE)
 502              		.loc 1 79 0 discriminator 1
 503 0092 1D4B     		ldr	r3, .L60+4
 504 0094 1B88     		ldrh	r3, [r3]
 505 0096 002B     		cmp	r3, #0
 506 0098 FBD0     		beq	.L56
  82:Src/mode.c    ****         flag_motor = FALSE;
 507              		.loc 1 82 0
 508 009a 1A4B     		ldr	r3, .L60
 509 009c 0022     		movs	r2, #0
 510 009e 1A70     		strb	r2, [r3]
  83:Src/mode.c    ****         break;
 511              		.loc 1 83 0
 512 00a0 BBE7     		b	.L43
 513              	.LVL66:
 514              	.L50:
  85:Src/mode.c    ****         HAL_Delay(5000);
 515              		.loc 1 85 0
 516 00a2 41F28830 		movw	r0, #5000
 517              	.LVL67:
 518 00a6 FFF7FEFF 		bl	HAL_Delay
 519              	.LVL68:
  86:Src/mode.c    ****         gyro_offset_calc_reset();
 520              		.loc 1 86 0
 521 00aa FFF7FEFF 		bl	gyro_offset_calc_reset
 522              	.LVL69:
  87:Src/mode.c    ****         HAL_Delay(2000);
 523              		.loc 1 87 0
 524 00ae 4FF4FA60 		mov	r0, #2000
 525 00b2 FFF7FEFF 		bl	HAL_Delay
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 15


 526              	.LVL70:
  89:Src/mode.c    ****         flag_motor = TRUE;
 527              		.loc 1 89 0
 528 00b6 134B     		ldr	r3, .L60
 529 00b8 0122     		movs	r2, #1
 530 00ba 1A70     		strb	r2, [r3]
  91:Src/mode.c    ****         Straight_half_accel();
 531              		.loc 1 91 0
 532 00bc FFF7FEFF 		bl	Straight_half_accel
 533              	.LVL71:
 534              	.L57:
  92:Src/mode.c    ****         while (flag_motion_end == FALSE)
 535              		.loc 1 92 0 discriminator 1
 536 00c0 114B     		ldr	r3, .L60+4
 537 00c2 1B88     		ldrh	r3, [r3]
 538 00c4 002B     		cmp	r3, #0
 539 00c6 FBD0     		beq	.L57
  95:Src/mode.c    ****         Motion_Straight();
 540              		.loc 1 95 0
 541 00c8 FFF7FEFF 		bl	Motion_Straight
 542              	.LVL72:
  96:Src/mode.c    ****         Straight_half_stop();
 543              		.loc 1 96 0
 544 00cc FFF7FEFF 		bl	Straight_half_stop
 545              	.LVL73:
 546              	.L58:
  97:Src/mode.c    ****         while (flag_motion_end == FALSE)
 547              		.loc 1 97 0 discriminator 1
 548 00d0 0D4B     		ldr	r3, .L60+4
 549 00d2 1B88     		ldrh	r3, [r3]
 550 00d4 002B     		cmp	r3, #0
 551 00d6 FBD0     		beq	.L58
 100:Src/mode.c    ****         flag_motor = FALSE;
 552              		.loc 1 100 0
 553 00d8 0A4B     		ldr	r3, .L60
 554 00da 0022     		movs	r2, #0
 555 00dc 1A70     		strb	r2, [r3]
 101:Src/mode.c    ****         break;
 556              		.loc 1 101 0
 557 00de 9CE7     		b	.L43
 558              	.LVL74:
 559              	.L51:
 103:Src/mode.c    ****         loadMaze();
 560              		.loc 1 103 0
 561 00e0 FFF7FEFF 		bl	loadMaze
 562              	.LVL75:
 104:Src/mode.c    ****         Maze_Printf(maze);
 563              		.loc 1 104 0
 564 00e4 094C     		ldr	r4, .L60+8
 565 00e6 4FF4FA72 		mov	r2, #500
 566 00ea 04F11001 		add	r1, r4, #16
 567 00ee 6846     		mov	r0, sp
 568 00f0 FFF7FEFF 		bl	memcpy
 569              	.LVL76:
 570 00f4 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 571 00f8 FFF7FEFF 		bl	Maze_Printf
 572              	.LVL77:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 16


 105:Src/mode.c    ****         break;
 573              		.loc 1 105 0
 574 00fc 8DE7     		b	.L43
 575              	.LVL78:
 576              	.L52:
 107:Src/mode.c    ****         Mode_Sensor_Check();
 577              		.loc 1 107 0
 578 00fe FFF7FEFF 		bl	Mode_Sensor_Check
 579              	.LVL79:
 112:Src/mode.c    **** }
 580              		.loc 1 112 0
 581 0102 8AE7     		b	.L43
 582              	.L61:
 583              		.align	2
 584              	.L60:
 585 0104 00000000 		.word	flag_motor
 586 0108 00000000 		.word	flag_motion_end
 587 010c 00000000 		.word	maze
 588              		.cfi_endproc
 589              	.LFE126:
 591              		.section	.rodata.Mode_Select.str1.4,"aMS",%progbits,1
 592              		.align	2
 593              	.LC0:
 594 0000 25640D00 		.ascii	"%d\015\000"
 595              		.section	.rodata.Mode_Sensor_Check.str1.4,"aMS",%progbits,1
 596              		.align	2
 597              	.LC1:
 598 0000 6C3A2564 		.ascii	"l:%d f:%d r:%d \015\000"
 598      20663A25 
 598      6420723A 
 598      2564200D 
 598      00
 599              		.text
 600              	.Letext0:
 601              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 602              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 603              		.file 4 "Inc/filter.h"
 604              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 605              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 606              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 607              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 608              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 609              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 610              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 611              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 612              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 613              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 614              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 615              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 616              		.file 17 "Inc/tim.h"
 617              		.file 18 "Inc/spi.h"
 618              		.file 19 "Inc/flash.h"
 619              		.file 20 "Inc/maze_info.h"
 620              		.file 21 "Inc/motion_plan.h"
 621              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 622              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 623              		.file 24 "Inc/interface.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 17


 624              		.file 25 "Inc/motion.h"
 625              		.file 26 "<built-in>"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 mode.c
C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s:18     .text.Mode_Select:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s:25     .text.Mode_Select:00000000 Mode_Select
C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s:145    .text.Mode_Select:000000ac $d
C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s:153    .text.Mode_Sensor_Check:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s:160    .text.Mode_Sensor_Check:00000000 Mode_Sensor_Check
C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s:279    .text.Mode_Sensor_Check:000000b8 $d
C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s:288    .text.Mode_Run:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s:295    .text.Mode_Run:00000000 Mode_Run
C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s:363    .text.Mode_Mouse:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s:370    .text.Mode_Mouse:00000000 Mode_Mouse
C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s:390    .text.Mode_Mouse:0000000c $d
C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s:585    .text.Mode_Mouse:00000104 $d
C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s:592    .rodata.Mode_Select.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s:596    .rodata.Mode_Sensor_Check.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s:397    .text.Mode_Mouse:00000013 $d
C:\Users\kotaro\AppData\Local\Temp\ccOUJtcP.s:397    .text.Mode_Mouse:00000014 $t

UNDEFINED SYMBOLS
Output_Buzzer
Push
LED_Control
printf
HAL_Delay
flag_motion_end
flag_motor
enc
adcStart
HAL_GPIO_WritePin
sen_r
sen_front
sen_l
Plan_Adachi
writeMaze
Plan_AllSearch
loadMaze
Plan_Root
Plan_Compress
Plan_Fast
gyro_offset_calc_reset
Straight_half_accel
Motion_Left
Straight_half_stop
Motion_Right
Motion_Straight
memcpy
Maze_Printf
maze
