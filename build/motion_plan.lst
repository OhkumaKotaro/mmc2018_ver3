ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"motion_plan.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Que_init_motion,"ax",%progbits
  18              		.align	1
  19              		.global	Que_init_motion
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Que_init_motion:
  26              	.LFB126:
  27              		.file 1 "Src/motion_plan.c"
   1:Src/motion_plan.c **** #include "motion_plan.h"
   2:Src/motion_plan.c **** #include "maze_info.h"
   3:Src/motion_plan.c **** #include "maze_analysis.h"
   4:Src/motion_plan.c **** #include "motion.h"
   5:Src/motion_plan.c **** #include "filter.h"
   6:Src/motion_plan.c **** #include "stm32f4xx_hal.h"
   7:Src/motion_plan.c **** #include "spi.h"
   8:Src/motion_plan.c **** #include "interface.h"
   9:Src/motion_plan.c **** #include "tim.h"
  10:Src/motion_plan.c **** 
  11:Src/motion_plan.c **** #define TRUE 1
  12:Src/motion_plan.c **** #define FALSE 0
  13:Src/motion_plan.c **** 
  14:Src/motion_plan.c **** #define MAX_STEP 255
  15:Src/motion_plan.c **** #define MAZE_SIZE 16
  16:Src/motion_plan.c **** 
  17:Src/motion_plan.c **** //direction
  18:Src/motion_plan.c **** #define NORTH 0
  19:Src/motion_plan.c **** #define EAST 1
  20:Src/motion_plan.c **** #define SOUTH 2
  21:Src/motion_plan.c **** #define WEST 3
  22:Src/motion_plan.c **** 
  23:Src/motion_plan.c **** extern unsigned char position; //1~4bit x , 5~8bit y
  24:Src/motion_plan.c **** extern unsigned char direction;
  25:Src/motion_plan.c **** 
  26:Src/motion_plan.c **** extern maze_t maze;
  27:Src/motion_plan.c **** 
  28:Src/motion_plan.c **** extern sensor_t sen_front;
  29:Src/motion_plan.c **** 
  30:Src/motion_plan.c **** extern uint8_t position;
  31:Src/motion_plan.c **** extern uint8_t direction;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 2


  32:Src/motion_plan.c **** 
  33:Src/motion_plan.c **** unsigned char flag_search = FALSE;
  34:Src/motion_plan.c **** 
  35:Src/motion_plan.c **** extern uint8_t flag_motor;
  36:Src/motion_plan.c **** 
  37:Src/motion_plan.c **** extern enc_t enc;
  38:Src/motion_plan.c **** 
  39:Src/motion_plan.c **** typedef struct
  40:Src/motion_plan.c **** {
  41:Src/motion_plan.c **** 	unsigned char data[MAX_STEP];
  42:Src/motion_plan.c **** 	unsigned int head;
  43:Src/motion_plan.c **** 	unsigned int tail;
  44:Src/motion_plan.c **** } queue_motion_t;
  45:Src/motion_plan.c **** queue_motion_t q_motion;
  46:Src/motion_plan.c **** 
  47:Src/motion_plan.c **** void Que_init_motion(queue_motion_t *q)
  48:Src/motion_plan.c **** {
  28              		.loc 1 48 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  49:Src/motion_plan.c **** 	int i;
  50:Src/motion_plan.c **** 
  51:Src/motion_plan.c **** 	q->head = 0;
  34              		.loc 1 51 0
  35 0000 0023     		movs	r3, #0
  36 0002 C0F80031 		str	r3, [r0, #256]
  52:Src/motion_plan.c **** 	q->tail = 0;
  37              		.loc 1 52 0
  38 0006 C0F80431 		str	r3, [r0, #260]
  39              	.LVL1:
  53:Src/motion_plan.c **** 	for (i = 0; i < MAX_STEP; ++i)
  40              		.loc 1 53 0
  41 000a 02E0     		b	.L2
  42              	.LVL2:
  43              	.L3:
  54:Src/motion_plan.c **** 	{
  55:Src/motion_plan.c **** 		q->data[i] = 0;
  44              		.loc 1 55 0 discriminator 3
  45 000c 0022     		movs	r2, #0
  46 000e C254     		strb	r2, [r0, r3]
  53:Src/motion_plan.c **** 	for (i = 0; i < MAX_STEP; ++i)
  47              		.loc 1 53 0 discriminator 3
  48 0010 0133     		adds	r3, r3, #1
  49              	.LVL3:
  50              	.L2:
  53:Src/motion_plan.c **** 	for (i = 0; i < MAX_STEP; ++i)
  51              		.loc 1 53 0 is_stmt 0 discriminator 1
  52 0012 FE2B     		cmp	r3, #254
  53 0014 FADD     		ble	.L3
  56:Src/motion_plan.c **** 	}
  57:Src/motion_plan.c **** }
  54              		.loc 1 57 0 is_stmt 1
  55 0016 7047     		bx	lr
  56              		.cfi_endproc
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 3


  57              	.LFE126:
  59              		.section	.text.enq_motion,"ax",%progbits
  60              		.align	1
  61              		.global	enq_motion
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	enq_motion:
  68              	.LFB127:
  58:Src/motion_plan.c **** 
  59:Src/motion_plan.c **** unsigned char enq_motion(queue_motion_t *q, unsigned char item)
  60:Src/motion_plan.c **** {
  69              		.loc 1 60 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.LVL4:
  61:Src/motion_plan.c **** 	if (q->tail >= MAX_STEP)
  75              		.loc 1 61 0
  76 0000 D0F80431 		ldr	r3, [r0, #260]
  77 0004 FE2B     		cmp	r3, #254
  78 0006 05D8     		bhi	.L6
  62:Src/motion_plan.c **** 	{
  63:Src/motion_plan.c **** 		return MAX_STEP;
  64:Src/motion_plan.c **** 	}
  65:Src/motion_plan.c **** 	else
  66:Src/motion_plan.c **** 	{
  67:Src/motion_plan.c **** 		q->data[q->tail] = item;
  79              		.loc 1 67 0
  80 0008 C154     		strb	r1, [r0, r3]
  68:Src/motion_plan.c **** 		q->tail++;
  81              		.loc 1 68 0
  82 000a 0133     		adds	r3, r3, #1
  83 000c C0F80431 		str	r3, [r0, #260]
  69:Src/motion_plan.c **** 	}
  70:Src/motion_plan.c **** 	return 1;
  84              		.loc 1 70 0
  85 0010 0120     		movs	r0, #1
  86              	.LVL5:
  87 0012 7047     		bx	lr
  88              	.LVL6:
  89              	.L6:
  63:Src/motion_plan.c **** 	}
  90              		.loc 1 63 0
  91 0014 FF20     		movs	r0, #255
  92              	.LVL7:
  71:Src/motion_plan.c **** }
  93              		.loc 1 71 0
  94 0016 7047     		bx	lr
  95              		.cfi_endproc
  96              	.LFE127:
  98              		.section	.text.deq_motion,"ax",%progbits
  99              		.align	1
 100              		.global	deq_motion
 101              		.syntax unified
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 4


 102              		.thumb
 103              		.thumb_func
 104              		.fpu fpv4-sp-d16
 106              	deq_motion:
 107              	.LFB128:
  72:Src/motion_plan.c **** 
  73:Src/motion_plan.c **** unsigned char deq_motion(queue_motion_t *q)
  74:Src/motion_plan.c **** {
 108              		.loc 1 74 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112              		@ link register save eliminated.
 113              	.LVL8:
 114 0000 0246     		mov	r2, r0
  75:Src/motion_plan.c **** 	unsigned char tmp;
  76:Src/motion_plan.c **** 	tmp = q->data[q->head];
 115              		.loc 1 76 0
 116 0002 D0F80031 		ldr	r3, [r0, #256]
 117 0006 C05C     		ldrb	r0, [r0, r3]	@ zero_extendqisi2
 118              	.LVL9:
  77:Src/motion_plan.c **** 	q->head++;
 119              		.loc 1 77 0
 120 0008 0133     		adds	r3, r3, #1
 121 000a C2F80031 		str	r3, [r2, #256]
  78:Src/motion_plan.c **** 	return tmp;
  79:Src/motion_plan.c **** }
 122              		.loc 1 79 0
 123 000e 7047     		bx	lr
 124              		.cfi_endproc
 125              	.LFE128:
 127              		.section	.text.Update_Position,"ax",%progbits
 128              		.align	1
 129              		.global	Update_Position
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 133              		.fpu fpv4-sp-d16
 135              	Update_Position:
 136              	.LFB129:
  80:Src/motion_plan.c **** 
  81:Src/motion_plan.c **** void Update_Position(unsigned char next_motion)
  82:Src/motion_plan.c **** {
 137              		.loc 1 82 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              		@ link register save eliminated.
 142              	.LVL10:
  83:Src/motion_plan.c **** 	switch (next_motion)
 143              		.loc 1 83 0
 144 0000 0428     		cmp	r0, #4
 145 0002 00F2C280 		bhi	.L8
 146 0006 DFE800F0 		tbb	[pc, r0]
 147              	.L11:
 148 000a 03       		.byte	(.L10-.L11)/2
 149 000b 2C       		.byte	(.L12-.L11)/2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 5


 150 000c 49       		.byte	(.L13-.L11)/2
 151 000d 71       		.byte	(.L14-.L11)/2
 152 000e 99       		.byte	(.L15-.L11)/2
 153 000f 00       		.p2align 1
 154              	.L10:
  84:Src/motion_plan.c **** 	{
  85:Src/motion_plan.c **** 	case LEFT:
  86:Src/motion_plan.c **** 		switch (direction)
 155              		.loc 1 86 0
 156 0010 5E4B     		ldr	r3, .L41
 157 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 158 0014 032B     		cmp	r3, #3
 159 0016 00F2B880 		bhi	.L8
 160 001a DFE803F0 		tbb	[pc, r3]
 161              	.L17:
 162 001e 02       		.byte	(.L16-.L17)/2
 163 001f 0A       		.byte	(.L18-.L17)/2
 164 0020 12       		.byte	(.L19-.L17)/2
 165 0021 1A       		.byte	(.L20-.L17)/2
 166              		.p2align 1
 167              	.L16:
  87:Src/motion_plan.c **** 		{
  88:Src/motion_plan.c **** 		case NORTH:
  89:Src/motion_plan.c **** 			position -= 1 << 4;
 168              		.loc 1 89 0
 169 0022 5B4A     		ldr	r2, .L41+4
 170 0024 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 171 0026 103B     		subs	r3, r3, #16
 172 0028 1370     		strb	r3, [r2]
  90:Src/motion_plan.c **** 			direction = WEST;
 173              		.loc 1 90 0
 174 002a 584B     		ldr	r3, .L41
 175 002c 0322     		movs	r2, #3
 176 002e 1A70     		strb	r2, [r3]
  91:Src/motion_plan.c **** 			break;
 177              		.loc 1 91 0
 178 0030 7047     		bx	lr
 179              	.L18:
  92:Src/motion_plan.c **** 		case EAST:
  93:Src/motion_plan.c **** 			position += 1;
 180              		.loc 1 93 0
 181 0032 574A     		ldr	r2, .L41+4
 182 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 183 0036 0133     		adds	r3, r3, #1
 184 0038 1370     		strb	r3, [r2]
  94:Src/motion_plan.c **** 			direction = NORTH;
 185              		.loc 1 94 0
 186 003a 544B     		ldr	r3, .L41
 187 003c 0022     		movs	r2, #0
 188 003e 1A70     		strb	r2, [r3]
  95:Src/motion_plan.c **** 			break;
 189              		.loc 1 95 0
 190 0040 7047     		bx	lr
 191              	.L19:
  96:Src/motion_plan.c **** 		case SOUTH:
  97:Src/motion_plan.c **** 			position += 1 << 4;
 192              		.loc 1 97 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 6


 193 0042 534A     		ldr	r2, .L41+4
 194 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 195 0046 1033     		adds	r3, r3, #16
 196 0048 1370     		strb	r3, [r2]
  98:Src/motion_plan.c **** 			direction = EAST;
 197              		.loc 1 98 0
 198 004a 504B     		ldr	r3, .L41
 199 004c 0122     		movs	r2, #1
 200 004e 1A70     		strb	r2, [r3]
  99:Src/motion_plan.c **** 			break;
 201              		.loc 1 99 0
 202 0050 7047     		bx	lr
 203              	.L20:
 100:Src/motion_plan.c **** 		case WEST:
 101:Src/motion_plan.c **** 			position -= 1;
 204              		.loc 1 101 0
 205 0052 4F4A     		ldr	r2, .L41+4
 206 0054 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 207 0056 013B     		subs	r3, r3, #1
 208 0058 1370     		strb	r3, [r2]
 102:Src/motion_plan.c **** 			direction = SOUTH;
 209              		.loc 1 102 0
 210 005a 4C4B     		ldr	r3, .L41
 211 005c 0222     		movs	r2, #2
 212 005e 1A70     		strb	r2, [r3]
 103:Src/motion_plan.c **** 			break;
 213              		.loc 1 103 0
 214 0060 7047     		bx	lr
 215              	.L12:
 104:Src/motion_plan.c **** 		}
 105:Src/motion_plan.c **** 		break;
 106:Src/motion_plan.c **** 	case FRONT:
 107:Src/motion_plan.c **** 		switch (direction)
 216              		.loc 1 107 0
 217 0062 4A4B     		ldr	r3, .L41
 218 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 219 0066 032B     		cmp	r3, #3
 220 0068 00F28F80 		bhi	.L8
 221 006c DFE803F0 		tbb	[pc, r3]
 222              	.L22:
 223 0070 02       		.byte	(.L21-.L22)/2
 224 0071 07       		.byte	(.L23-.L22)/2
 225 0072 0C       		.byte	(.L24-.L22)/2
 226 0073 11       		.byte	(.L25-.L22)/2
 227              		.p2align 1
 228              	.L21:
 108:Src/motion_plan.c **** 		{
 109:Src/motion_plan.c **** 		case NORTH:
 110:Src/motion_plan.c **** 			position += 1;
 229              		.loc 1 110 0
 230 0074 464A     		ldr	r2, .L41+4
 231 0076 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 232 0078 0133     		adds	r3, r3, #1
 233 007a 1370     		strb	r3, [r2]
 111:Src/motion_plan.c **** 			break;
 234              		.loc 1 111 0
 235 007c 7047     		bx	lr
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 7


 236              	.L23:
 112:Src/motion_plan.c **** 		case EAST:
 113:Src/motion_plan.c **** 			position += 1 << 4;
 237              		.loc 1 113 0
 238 007e 444A     		ldr	r2, .L41+4
 239 0080 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 240 0082 1033     		adds	r3, r3, #16
 241 0084 1370     		strb	r3, [r2]
 114:Src/motion_plan.c **** 			break;
 242              		.loc 1 114 0
 243 0086 7047     		bx	lr
 244              	.L24:
 115:Src/motion_plan.c **** 		case SOUTH:
 116:Src/motion_plan.c **** 			position -= 1;
 245              		.loc 1 116 0
 246 0088 414A     		ldr	r2, .L41+4
 247 008a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 248 008c 013B     		subs	r3, r3, #1
 249 008e 1370     		strb	r3, [r2]
 117:Src/motion_plan.c **** 			break;
 250              		.loc 1 117 0
 251 0090 7047     		bx	lr
 252              	.L25:
 118:Src/motion_plan.c **** 		case WEST:
 119:Src/motion_plan.c **** 			position -= 1 << 4;
 253              		.loc 1 119 0
 254 0092 3F4A     		ldr	r2, .L41+4
 255 0094 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 256 0096 103B     		subs	r3, r3, #16
 257 0098 1370     		strb	r3, [r2]
 120:Src/motion_plan.c **** 			break;
 258              		.loc 1 120 0
 259 009a 7047     		bx	lr
 260              	.L13:
 121:Src/motion_plan.c **** 		}
 122:Src/motion_plan.c **** 		break;
 123:Src/motion_plan.c **** 	case RIGHT:
 124:Src/motion_plan.c **** 		switch (direction)
 261              		.loc 1 124 0
 262 009c 3B4B     		ldr	r3, .L41
 263 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 264 00a0 032B     		cmp	r3, #3
 265 00a2 72D8     		bhi	.L8
 266 00a4 DFE803F0 		tbb	[pc, r3]
 267              	.L27:
 268 00a8 02       		.byte	(.L26-.L27)/2
 269 00a9 0A       		.byte	(.L28-.L27)/2
 270 00aa 12       		.byte	(.L29-.L27)/2
 271 00ab 1A       		.byte	(.L30-.L27)/2
 272              		.p2align 1
 273              	.L26:
 125:Src/motion_plan.c **** 		{
 126:Src/motion_plan.c **** 		case NORTH:
 127:Src/motion_plan.c **** 			position += 1 << 4;
 274              		.loc 1 127 0
 275 00ac 384A     		ldr	r2, .L41+4
 276 00ae 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 8


 277 00b0 1033     		adds	r3, r3, #16
 278 00b2 1370     		strb	r3, [r2]
 128:Src/motion_plan.c **** 			direction = EAST;
 279              		.loc 1 128 0
 280 00b4 354B     		ldr	r3, .L41
 281 00b6 0122     		movs	r2, #1
 282 00b8 1A70     		strb	r2, [r3]
 129:Src/motion_plan.c **** 			break;
 283              		.loc 1 129 0
 284 00ba 7047     		bx	lr
 285              	.L28:
 130:Src/motion_plan.c **** 		case EAST:
 131:Src/motion_plan.c **** 			position -= 1;
 286              		.loc 1 131 0
 287 00bc 344A     		ldr	r2, .L41+4
 288 00be 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 289 00c0 013B     		subs	r3, r3, #1
 290 00c2 1370     		strb	r3, [r2]
 132:Src/motion_plan.c **** 			direction = SOUTH;
 291              		.loc 1 132 0
 292 00c4 314B     		ldr	r3, .L41
 293 00c6 0222     		movs	r2, #2
 294 00c8 1A70     		strb	r2, [r3]
 133:Src/motion_plan.c **** 			break;
 295              		.loc 1 133 0
 296 00ca 7047     		bx	lr
 297              	.L29:
 134:Src/motion_plan.c **** 		case SOUTH:
 135:Src/motion_plan.c **** 			position -= 1 << 4;
 298              		.loc 1 135 0
 299 00cc 304A     		ldr	r2, .L41+4
 300 00ce 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 301 00d0 103B     		subs	r3, r3, #16
 302 00d2 1370     		strb	r3, [r2]
 136:Src/motion_plan.c **** 			direction = WEST;
 303              		.loc 1 136 0
 304 00d4 2D4B     		ldr	r3, .L41
 305 00d6 0322     		movs	r2, #3
 306 00d8 1A70     		strb	r2, [r3]
 137:Src/motion_plan.c **** 			break;
 307              		.loc 1 137 0
 308 00da 7047     		bx	lr
 309              	.L30:
 138:Src/motion_plan.c **** 		case WEST:
 139:Src/motion_plan.c **** 			position += 1;
 310              		.loc 1 139 0
 311 00dc 2C4A     		ldr	r2, .L41+4
 312 00de 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 313 00e0 0133     		adds	r3, r3, #1
 314 00e2 1370     		strb	r3, [r2]
 140:Src/motion_plan.c **** 			direction = NORTH;
 315              		.loc 1 140 0
 316 00e4 294B     		ldr	r3, .L41
 317 00e6 0022     		movs	r2, #0
 318 00e8 1A70     		strb	r2, [r3]
 141:Src/motion_plan.c **** 			break;
 319              		.loc 1 141 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 9


 320 00ea 7047     		bx	lr
 321              	.L14:
 142:Src/motion_plan.c **** 		}
 143:Src/motion_plan.c **** 		break;
 144:Src/motion_plan.c **** 	case UTURN:
 145:Src/motion_plan.c **** 		switch (direction)
 322              		.loc 1 145 0
 323 00ec 274B     		ldr	r3, .L41
 324 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 325 00f0 032B     		cmp	r3, #3
 326 00f2 4AD8     		bhi	.L8
 327 00f4 DFE803F0 		tbb	[pc, r3]
 328              	.L32:
 329 00f8 02       		.byte	(.L31-.L32)/2
 330 00f9 0A       		.byte	(.L33-.L32)/2
 331 00fa 12       		.byte	(.L34-.L32)/2
 332 00fb 1A       		.byte	(.L35-.L32)/2
 333              		.p2align 1
 334              	.L31:
 146:Src/motion_plan.c **** 		{
 147:Src/motion_plan.c **** 		case NORTH:
 148:Src/motion_plan.c **** 			position -= 1;
 335              		.loc 1 148 0
 336 00fc 244A     		ldr	r2, .L41+4
 337 00fe 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 338 0100 013B     		subs	r3, r3, #1
 339 0102 1370     		strb	r3, [r2]
 149:Src/motion_plan.c **** 			direction = SOUTH;
 340              		.loc 1 149 0
 341 0104 214B     		ldr	r3, .L41
 342 0106 0222     		movs	r2, #2
 343 0108 1A70     		strb	r2, [r3]
 150:Src/motion_plan.c **** 			break;
 344              		.loc 1 150 0
 345 010a 7047     		bx	lr
 346              	.L33:
 151:Src/motion_plan.c **** 		case EAST:
 152:Src/motion_plan.c **** 			position -= 1 << 4;
 347              		.loc 1 152 0
 348 010c 204A     		ldr	r2, .L41+4
 349 010e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 350 0110 103B     		subs	r3, r3, #16
 351 0112 1370     		strb	r3, [r2]
 153:Src/motion_plan.c **** 			direction = WEST;
 352              		.loc 1 153 0
 353 0114 1D4B     		ldr	r3, .L41
 354 0116 0322     		movs	r2, #3
 355 0118 1A70     		strb	r2, [r3]
 154:Src/motion_plan.c **** 			break;
 356              		.loc 1 154 0
 357 011a 7047     		bx	lr
 358              	.L34:
 155:Src/motion_plan.c **** 		case SOUTH:
 156:Src/motion_plan.c **** 			position += 1;
 359              		.loc 1 156 0
 360 011c 1C4A     		ldr	r2, .L41+4
 361 011e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 10


 362 0120 0133     		adds	r3, r3, #1
 363 0122 1370     		strb	r3, [r2]
 157:Src/motion_plan.c **** 			direction = NORTH;
 364              		.loc 1 157 0
 365 0124 194B     		ldr	r3, .L41
 366 0126 0022     		movs	r2, #0
 367 0128 1A70     		strb	r2, [r3]
 158:Src/motion_plan.c **** 			break;
 368              		.loc 1 158 0
 369 012a 7047     		bx	lr
 370              	.L35:
 159:Src/motion_plan.c **** 		case WEST:
 160:Src/motion_plan.c **** 			position += 1 << 4;
 371              		.loc 1 160 0
 372 012c 184A     		ldr	r2, .L41+4
 373 012e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 374 0130 1033     		adds	r3, r3, #16
 375 0132 1370     		strb	r3, [r2]
 161:Src/motion_plan.c **** 			direction = EAST;
 376              		.loc 1 161 0
 377 0134 154B     		ldr	r3, .L41
 378 0136 0122     		movs	r2, #1
 379 0138 1A70     		strb	r2, [r3]
 162:Src/motion_plan.c **** 			break;
 380              		.loc 1 162 0
 381 013a 7047     		bx	lr
 382              	.L15:
 163:Src/motion_plan.c **** 		}
 164:Src/motion_plan.c **** 		break;
 165:Src/motion_plan.c **** 	case KABEATE:
 166:Src/motion_plan.c **** 		switch (direction)
 383              		.loc 1 166 0
 384 013c 134B     		ldr	r3, .L41
 385 013e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 386 0140 032B     		cmp	r3, #3
 387 0142 22D8     		bhi	.L8
 388 0144 DFE803F0 		tbb	[pc, r3]
 389              	.L37:
 390 0148 02       		.byte	(.L36-.L37)/2
 391 0149 0A       		.byte	(.L38-.L37)/2
 392 014a 12       		.byte	(.L39-.L37)/2
 393 014b 1A       		.byte	(.L40-.L37)/2
 394              		.p2align 1
 395              	.L36:
 167:Src/motion_plan.c **** 		{
 168:Src/motion_plan.c **** 		case NORTH:
 169:Src/motion_plan.c **** 			position -= 1;
 396              		.loc 1 169 0
 397 014c 104A     		ldr	r2, .L41+4
 398 014e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 399 0150 013B     		subs	r3, r3, #1
 400 0152 1370     		strb	r3, [r2]
 170:Src/motion_plan.c **** 			direction = SOUTH;
 401              		.loc 1 170 0
 402 0154 0D4B     		ldr	r3, .L41
 403 0156 0222     		movs	r2, #2
 404 0158 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 11


 171:Src/motion_plan.c **** 			break;
 405              		.loc 1 171 0
 406 015a 7047     		bx	lr
 407              	.L38:
 172:Src/motion_plan.c **** 		case EAST:
 173:Src/motion_plan.c **** 			position -= 1 << 4;
 408              		.loc 1 173 0
 409 015c 0C4A     		ldr	r2, .L41+4
 410 015e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 411 0160 103B     		subs	r3, r3, #16
 412 0162 1370     		strb	r3, [r2]
 174:Src/motion_plan.c **** 			direction = WEST;
 413              		.loc 1 174 0
 414 0164 094B     		ldr	r3, .L41
 415 0166 0322     		movs	r2, #3
 416 0168 1A70     		strb	r2, [r3]
 175:Src/motion_plan.c **** 			break;
 417              		.loc 1 175 0
 418 016a 7047     		bx	lr
 419              	.L39:
 176:Src/motion_plan.c **** 		case SOUTH:
 177:Src/motion_plan.c **** 			position += 1;
 420              		.loc 1 177 0
 421 016c 084A     		ldr	r2, .L41+4
 422 016e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 423 0170 0133     		adds	r3, r3, #1
 424 0172 1370     		strb	r3, [r2]
 178:Src/motion_plan.c **** 			direction = NORTH;
 425              		.loc 1 178 0
 426 0174 054B     		ldr	r3, .L41
 427 0176 0022     		movs	r2, #0
 428 0178 1A70     		strb	r2, [r3]
 179:Src/motion_plan.c **** 			break;
 429              		.loc 1 179 0
 430 017a 7047     		bx	lr
 431              	.L40:
 180:Src/motion_plan.c **** 		case WEST:
 181:Src/motion_plan.c **** 			position += 1 << 4;
 432              		.loc 1 181 0
 433 017c 044A     		ldr	r2, .L41+4
 434 017e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 435 0180 1033     		adds	r3, r3, #16
 436 0182 1370     		strb	r3, [r2]
 182:Src/motion_plan.c **** 			direction = EAST;
 437              		.loc 1 182 0
 438 0184 014B     		ldr	r3, .L41
 439 0186 0122     		movs	r2, #1
 440 0188 1A70     		strb	r2, [r3]
 441              	.L8:
 183:Src/motion_plan.c **** 			break;
 184:Src/motion_plan.c **** 		}
 185:Src/motion_plan.c **** 		break;
 186:Src/motion_plan.c **** 	}
 187:Src/motion_plan.c **** }
 442              		.loc 1 187 0
 443 018a 7047     		bx	lr
 444              	.L42:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 12


 445              		.align	2
 446              	.L41:
 447 018c 00000000 		.word	direction
 448 0190 00000000 		.word	position
 449              		.cfi_endproc
 450              	.LFE129:
 452              		.section	.text.Maze_Next_Motion,"ax",%progbits
 453              		.align	1
 454              		.global	Maze_Next_Motion
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 458              		.fpu fpv4-sp-d16
 460              	Maze_Next_Motion:
 461              	.LFB130:
 188:Src/motion_plan.c **** 
 189:Src/motion_plan.c **** unsigned char Maze_Next_Motion(void)
 190:Src/motion_plan.c **** {
 462              		.loc 1 190 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 466              		@ link register save eliminated.
 467 0000 F0B4     		push	{r4, r5, r6, r7}
 468              	.LCFI0:
 469              		.cfi_def_cfa_offset 16
 470              		.cfi_offset 4, -16
 471              		.cfi_offset 5, -12
 472              		.cfi_offset 6, -8
 473              		.cfi_offset 7, -4
 474              	.LVL11:
 191:Src/motion_plan.c **** 	/* <概要>   : 次の動作を決定
 192:Src/motion_plan.c **** 	* <引数>   : なし
 193:Src/motion_plan.c **** 	* <戻り値> : 次の動作
 194:Src/motion_plan.c **** 	*/
 195:Src/motion_plan.c **** 	unsigned char tmp_step = MAX_STEP; // 歩数
 196:Src/motion_plan.c **** 	unsigned char tmp_dir = UTURN;	 // 方向
 197:Src/motion_plan.c **** 									 // 現在の向きに応じて場合分けし、 歩数が少ない方向を判断
 198:Src/motion_plan.c **** 									 // 迷路外に進むのとゴールがスタートマス以外の場合(0,0)に進むの
 199:Src/motion_plan.c **** 
 200:Src/motion_plan.c **** 	unsigned char x = position >> 4 & 0b1111;
 475              		.loc 1 200 0
 476 0002 A34B     		ldr	r3, .L94
 477 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 478 0006 1909     		lsrs	r1, r3, #4
 479              	.LVL12:
 201:Src/motion_plan.c **** 	unsigned char y = position & 0b1111;
 480              		.loc 1 201 0
 481 0008 03F00F03 		and	r3, r3, #15
 482              	.LVL13:
 202:Src/motion_plan.c **** 
 203:Src/motion_plan.c **** 	switch (direction)
 483              		.loc 1 203 0
 484 000c A14A     		ldr	r2, .L94+4
 485 000e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 486 0010 032A     		cmp	r2, #3
 487 0012 00F28F81 		bhi	.L66
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 13


 488 0016 DFE812F0 		tbh	[pc, r2, lsl #1]
 489              	.L46:
 490 001a 0400     		.2byte	(.L45-.L46)/2
 491 001c 6400     		.2byte	(.L47-.L46)/2
 492 001e C400     		.2byte	(.L48-.L46)/2
 493 0020 2501     		.2byte	(.L49-.L46)/2
 494              		.p2align 1
 495              	.L45:
 204:Src/motion_plan.c **** 	{
 205:Src/motion_plan.c **** 	case NORTH:
 206:Src/motion_plan.c **** 		if (maze.step[x][y + 1] < tmp_step)
 496              		.loc 1 206 0
 497 0022 581C     		adds	r0, r3, #1
 498 0024 9C4C     		ldr	r4, .L94+8
 499 0026 04EB0114 		add	r4, r4, r1, lsl #4
 500 002a 2044     		add	r0, r0, r4
 501 002c 90F80441 		ldrb	r4, [r0, #260]	@ zero_extendqisi2
 502 0030 FF2C     		cmp	r4, #255
 503 0032 0ED0     		beq	.L67
 207:Src/motion_plan.c **** 		{
 208:Src/motion_plan.c **** 			if (y < MAZE_SIZE - 1)
 504              		.loc 1 208 0
 505 0034 0E2B     		cmp	r3, #14
 506 0036 4FD8     		bhi	.L68
 209:Src/motion_plan.c **** 			{
 210:Src/motion_plan.c **** 				if ((maze.wall_horizontal[y] >> x & 0b1) == FALSE)
 507              		.loc 1 210 0
 508 0038 03F11000 		add	r0, r3, #16
 509 003c 964D     		ldr	r5, .L94+8
 510 003e 05EB8000 		add	r0, r5, r0, lsl #2
 511 0042 4068     		ldr	r0, [r0, #4]
 512 0044 C840     		lsrs	r0, r0, r1
 513 0046 10F0010F 		tst	r0, #1
 514 004a 48D0     		beq	.L69
 196:Src/motion_plan.c **** 									 // 現在の向きに応じて場合分けし、 歩数が少ない方向を判断
 515              		.loc 1 196 0
 516 004c 0320     		movs	r0, #3
 195:Src/motion_plan.c **** 	unsigned char tmp_dir = UTURN;	 // 方向
 517              		.loc 1 195 0
 518 004e FF24     		movs	r4, #255
 519 0050 00E0     		b	.L50
 520              	.L67:
 196:Src/motion_plan.c **** 									 // 現在の向きに応じて場合分けし、 歩数が少ない方向を判断
 521              		.loc 1 196 0
 522 0052 0320     		movs	r0, #3
 523              	.L50:
 524              	.LVL14:
 211:Src/motion_plan.c **** 				{
 212:Src/motion_plan.c **** 					tmp_step = maze.step[x][y + 1];
 213:Src/motion_plan.c **** 					tmp_dir = FRONT;
 214:Src/motion_plan.c **** 				}
 215:Src/motion_plan.c **** 			}
 216:Src/motion_plan.c **** 		}
 217:Src/motion_plan.c **** 		if (maze.step[x - 1][y] < tmp_step)
 525              		.loc 1 217 0
 526 0054 4E1E     		subs	r6, r1, #1
 527 0056 904D     		ldr	r5, .L94+8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 14


 528 0058 05EB0615 		add	r5, r5, r6, lsl #4
 529 005c 1D44     		add	r5, r5, r3
 530 005e 95F80451 		ldrb	r5, [r5, #260]	@ zero_extendqisi2
 531 0062 A542     		cmp	r5, r4
 532 0064 0AD2     		bcs	.L51
 218:Src/motion_plan.c **** 		{
 219:Src/motion_plan.c **** 			if (x > 0)
 533              		.loc 1 219 0
 534 0066 49B1     		cbz	r1, .L51
 220:Src/motion_plan.c **** 			{
 221:Src/motion_plan.c **** 				if ((maze.wall_vertical[x - 1] >> y & 0b1) == FALSE)
 535              		.loc 1 221 0
 536 0068 8B4F     		ldr	r7, .L94+8
 537 006a 07EB8606 		add	r6, r7, r6, lsl #2
 538 006e 7668     		ldr	r6, [r6, #4]
 539 0070 DE40     		lsrs	r6, r6, r3
 540 0072 16F0010F 		tst	r6, #1
 541 0076 01D1     		bne	.L51
 222:Src/motion_plan.c **** 				{
 223:Src/motion_plan.c **** 					tmp_step = maze.step[x - 1][y];
 224:Src/motion_plan.c **** 					tmp_dir = LEFT;
 542              		.loc 1 224 0
 543 0078 1046     		mov	r0, r2
 544              	.LVL15:
 223:Src/motion_plan.c **** 					tmp_dir = LEFT;
 545              		.loc 1 223 0
 546 007a 2C46     		mov	r4, r5
 547              	.LVL16:
 548              	.L51:
 225:Src/motion_plan.c **** 				}
 226:Src/motion_plan.c **** 			}
 227:Src/motion_plan.c **** 		}
 228:Src/motion_plan.c **** 		if (maze.step[x + 1][y] < tmp_step)
 549              		.loc 1 228 0
 550 007c 4A1C     		adds	r2, r1, #1
 551 007e 864D     		ldr	r5, .L94+8
 552 0080 05EB0212 		add	r2, r5, r2, lsl #4
 553 0084 1A44     		add	r2, r2, r3
 554 0086 92F80421 		ldrb	r2, [r2, #260]	@ zero_extendqisi2
 555 008a A242     		cmp	r2, r4
 556 008c 0AD2     		bcs	.L52
 229:Src/motion_plan.c **** 		{
 230:Src/motion_plan.c **** 			if (x < MAZE_SIZE - 1)
 557              		.loc 1 230 0
 558 008e 0E29     		cmp	r1, #14
 559 0090 08D8     		bhi	.L52
 231:Src/motion_plan.c **** 			{
 232:Src/motion_plan.c **** 				if ((maze.wall_vertical[x] >> y & 0b1) == FALSE)
 560              		.loc 1 232 0
 561 0092 05EB8105 		add	r5, r5, r1, lsl #2
 562 0096 6D68     		ldr	r5, [r5, #4]
 563 0098 DD40     		lsrs	r5, r5, r3
 564 009a 15F0010F 		tst	r5, #1
 565 009e 01D1     		bne	.L52
 233:Src/motion_plan.c **** 				{
 234:Src/motion_plan.c **** 					tmp_step = maze.step[x + 1][y];
 566              		.loc 1 234 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 15


 567 00a0 1446     		mov	r4, r2
 568              	.LVL17:
 235:Src/motion_plan.c **** 					tmp_dir = RIGHT;
 569              		.loc 1 235 0
 570 00a2 0220     		movs	r0, #2
 571              	.LVL18:
 572              	.L52:
 236:Src/motion_plan.c **** 				}
 237:Src/motion_plan.c **** 			}
 238:Src/motion_plan.c **** 		}
 239:Src/motion_plan.c **** 		if (tmp_step == MAX_STEP  || maze.step[x][y-1] < tmp_step)
 573              		.loc 1 239 0
 574 00a4 FF2C     		cmp	r4, #255
 575 00a6 08D0     		beq	.L53
 576              		.loc 1 239 0 is_stmt 0 discriminator 1
 577 00a8 5A1E     		subs	r2, r3, #1
 578 00aa 7B4D     		ldr	r5, .L94+8
 579 00ac 05EB0115 		add	r5, r5, r1, lsl #4
 580 00b0 2A44     		add	r2, r2, r5
 581 00b2 92F80421 		ldrb	r2, [r2, #260]	@ zero_extendqisi2
 582 00b6 A242     		cmp	r2, r4
 583 00b8 0CD2     		bcs	.L44
 584              	.L53:
 240:Src/motion_plan.c **** 		{
 241:Src/motion_plan.c **** 			if ((maze.wall_horizontal[y] >> x & 0b1) == FALSE)
 585              		.loc 1 241 0 is_stmt 1
 586 00ba 03F11002 		add	r2, r3, #16
 587 00be 764B     		ldr	r3, .L94+8
 588              	.LVL19:
 589 00c0 03EB8203 		add	r3, r3, r2, lsl #2
 590 00c4 5B68     		ldr	r3, [r3, #4]
 591 00c6 23FA01F1 		lsr	r1, r3, r1
 592              	.LVL20:
 593 00ca 11F0010F 		tst	r1, #1
 594 00ce 40F03381 		bne	.L72
 242:Src/motion_plan.c **** 			{
 243:Src/motion_plan.c **** 				tmp_dir = UTURN;
 595              		.loc 1 243 0
 596 00d2 0320     		movs	r0, #3
 597              	.LVL21:
 598              	.L44:
 244:Src/motion_plan.c **** 			}
 245:Src/motion_plan.c **** 			else
 246:Src/motion_plan.c **** 			{
 247:Src/motion_plan.c **** 				tmp_dir = KABEATE;
 248:Src/motion_plan.c **** 			}
 249:Src/motion_plan.c **** 		}
 250:Src/motion_plan.c **** 		break;
 251:Src/motion_plan.c **** 	case EAST:
 252:Src/motion_plan.c **** 		if (maze.step[x + 1][y] < tmp_step)
 253:Src/motion_plan.c **** 		{
 254:Src/motion_plan.c **** 			if (x < MAZE_SIZE - 1)
 255:Src/motion_plan.c **** 			{
 256:Src/motion_plan.c **** 				if ((maze.wall_vertical[x] >> y & 0b1) == FALSE)
 257:Src/motion_plan.c **** 				{
 258:Src/motion_plan.c **** 					tmp_step = maze.step[x + 1][y];
 259:Src/motion_plan.c **** 					tmp_dir = FRONT;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 16


 260:Src/motion_plan.c **** 				}
 261:Src/motion_plan.c **** 			}
 262:Src/motion_plan.c **** 		}
 263:Src/motion_plan.c **** 		if (maze.step[x][y + 1] < tmp_step)
 264:Src/motion_plan.c **** 		{
 265:Src/motion_plan.c **** 			if (y < MAZE_SIZE - 1)
 266:Src/motion_plan.c **** 			{
 267:Src/motion_plan.c **** 				if ((maze.wall_horizontal[y] >> x & 0b1) == FALSE)
 268:Src/motion_plan.c **** 				{
 269:Src/motion_plan.c **** 					tmp_step = maze.step[x][y + 1];
 270:Src/motion_plan.c **** 					tmp_dir = LEFT;
 271:Src/motion_plan.c **** 				}
 272:Src/motion_plan.c **** 			}
 273:Src/motion_plan.c **** 		}
 274:Src/motion_plan.c **** 		if (maze.step[x][y - 1] < tmp_step)
 275:Src/motion_plan.c **** 		{
 276:Src/motion_plan.c **** 			if (y > 0)
 277:Src/motion_plan.c **** 			{
 278:Src/motion_plan.c **** 				if ((maze.wall_horizontal[y - 1] >> x & 0b1) == FALSE)
 279:Src/motion_plan.c **** 				{
 280:Src/motion_plan.c **** 					tmp_step = maze.step[x][y - 1];
 281:Src/motion_plan.c **** 					tmp_dir = RIGHT;
 282:Src/motion_plan.c **** 				}
 283:Src/motion_plan.c **** 			}
 284:Src/motion_plan.c **** 		}
 285:Src/motion_plan.c **** 		if (tmp_step == MAX_STEP || maze.step[x - 1][y] < tmp_step)
 286:Src/motion_plan.c **** 		{
 287:Src/motion_plan.c **** 			if ((maze.wall_vertical[x] >> y & 0b1) == FALSE)
 288:Src/motion_plan.c **** 			{
 289:Src/motion_plan.c **** 				tmp_dir = UTURN;
 290:Src/motion_plan.c **** 			}
 291:Src/motion_plan.c **** 			else
 292:Src/motion_plan.c **** 			{
 293:Src/motion_plan.c **** 				tmp_dir = KABEATE;
 294:Src/motion_plan.c **** 			}
 295:Src/motion_plan.c **** 		}
 296:Src/motion_plan.c **** 		break;
 297:Src/motion_plan.c **** 	case SOUTH:
 298:Src/motion_plan.c **** 		if (maze.step[x][y - 1] < tmp_step)
 299:Src/motion_plan.c **** 		{
 300:Src/motion_plan.c **** 			if (y > 0)
 301:Src/motion_plan.c **** 			{
 302:Src/motion_plan.c **** 				if ((maze.wall_horizontal[y - 1] >> x & 0b1) == FALSE)
 303:Src/motion_plan.c **** 				{
 304:Src/motion_plan.c **** 					tmp_step = maze.step[x][y - 1];
 305:Src/motion_plan.c **** 					tmp_dir = FRONT;
 306:Src/motion_plan.c **** 				}
 307:Src/motion_plan.c **** 			}
 308:Src/motion_plan.c **** 		}
 309:Src/motion_plan.c **** 		if (maze.step[x + 1][y] < tmp_step)
 310:Src/motion_plan.c **** 		{
 311:Src/motion_plan.c **** 			if (x < MAZE_SIZE - 1)
 312:Src/motion_plan.c **** 			{
 313:Src/motion_plan.c **** 				if ((maze.wall_vertical[x] >> y & 0b1) == FALSE)
 314:Src/motion_plan.c **** 				{
 315:Src/motion_plan.c **** 					tmp_step = maze.step[x + 1][y];
 316:Src/motion_plan.c **** 					tmp_dir = LEFT;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 17


 317:Src/motion_plan.c **** 				}
 318:Src/motion_plan.c **** 			}
 319:Src/motion_plan.c **** 		}
 320:Src/motion_plan.c **** 		if (maze.step[x - 1][y] < tmp_step)
 321:Src/motion_plan.c **** 		{
 322:Src/motion_plan.c **** 			if (x > 0)
 323:Src/motion_plan.c **** 			{
 324:Src/motion_plan.c **** 				if ((maze.wall_vertical[x - 1] >> y & 0b1) == FALSE)
 325:Src/motion_plan.c **** 				{
 326:Src/motion_plan.c **** 					tmp_step = maze.step[x - 1][y];
 327:Src/motion_plan.c **** 					tmp_dir = RIGHT;
 328:Src/motion_plan.c **** 				}
 329:Src/motion_plan.c **** 			}
 330:Src/motion_plan.c **** 		}
 331:Src/motion_plan.c **** 		if (tmp_step == MAX_STEP || maze.step[x][y+1] < tmp_step)
 332:Src/motion_plan.c **** 		{
 333:Src/motion_plan.c **** 			if ((maze.wall_horizontal[y - 1] >> x & 0b1) == FALSE && y>0)
 334:Src/motion_plan.c **** 			{
 335:Src/motion_plan.c **** 				tmp_dir = UTURN;
 336:Src/motion_plan.c **** 			}
 337:Src/motion_plan.c **** 			else
 338:Src/motion_plan.c **** 			{
 339:Src/motion_plan.c **** 				tmp_dir = KABEATE;
 340:Src/motion_plan.c **** 			}
 341:Src/motion_plan.c **** 		}
 342:Src/motion_plan.c **** 		break;
 343:Src/motion_plan.c **** 	case WEST:
 344:Src/motion_plan.c **** 		if (maze.step[x - 1][y] < tmp_step)
 345:Src/motion_plan.c **** 		{
 346:Src/motion_plan.c **** 			if (x > 0)
 347:Src/motion_plan.c **** 			{
 348:Src/motion_plan.c **** 				if ((maze.wall_vertical[x - 1] >> y & 0b1) == FALSE)
 349:Src/motion_plan.c **** 				{
 350:Src/motion_plan.c **** 					tmp_step = maze.step[x - 1][y];
 351:Src/motion_plan.c **** 					tmp_dir = FRONT;
 352:Src/motion_plan.c **** 				}
 353:Src/motion_plan.c **** 			}
 354:Src/motion_plan.c **** 		}
 355:Src/motion_plan.c **** 		if (maze.step[x][y - 1] < tmp_step)
 356:Src/motion_plan.c **** 		{
 357:Src/motion_plan.c **** 			if (y > 0)
 358:Src/motion_plan.c **** 			{
 359:Src/motion_plan.c **** 				if ((maze.wall_horizontal[y - 1] >> x & 0b1) == FALSE)
 360:Src/motion_plan.c **** 				{
 361:Src/motion_plan.c **** 					tmp_step = maze.step[x][y - 1];
 362:Src/motion_plan.c **** 					tmp_dir = LEFT;
 363:Src/motion_plan.c **** 				}
 364:Src/motion_plan.c **** 			}
 365:Src/motion_plan.c **** 		}
 366:Src/motion_plan.c **** 		if (maze.step[x][y + 1] < tmp_step)
 367:Src/motion_plan.c **** 		{
 368:Src/motion_plan.c **** 			if (y < MAZE_SIZE - 1)
 369:Src/motion_plan.c **** 			{
 370:Src/motion_plan.c **** 				if ((maze.wall_horizontal[y] >> x & 0b1) == FALSE)
 371:Src/motion_plan.c **** 				{
 372:Src/motion_plan.c **** 					tmp_step = maze.step[x][y + 1];
 373:Src/motion_plan.c **** 					tmp_dir = RIGHT;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 18


 374:Src/motion_plan.c **** 				}
 375:Src/motion_plan.c **** 			}
 376:Src/motion_plan.c **** 		}
 377:Src/motion_plan.c **** 		if (tmp_step == MAX_STEP || maze.step[x + 1][y] < tmp_step)
 378:Src/motion_plan.c **** 		{
 379:Src/motion_plan.c **** 			if ((maze.wall_vertical[x - 1] >> y & 0b1) == FALSE && x>0)
 380:Src/motion_plan.c **** 			{
 381:Src/motion_plan.c **** 				tmp_dir = UTURN;
 382:Src/motion_plan.c **** 			}
 383:Src/motion_plan.c **** 			else
 384:Src/motion_plan.c **** 			{
 385:Src/motion_plan.c **** 				tmp_dir = KABEATE;
 386:Src/motion_plan.c **** 			}
 387:Src/motion_plan.c **** 		}
 388:Src/motion_plan.c **** 		break;
 389:Src/motion_plan.c **** 	default:
 390:Src/motion_plan.c **** 		break;
 391:Src/motion_plan.c **** 	}
 392:Src/motion_plan.c **** 	return tmp_dir;
 393:Src/motion_plan.c **** }
 599              		.loc 1 393 0
 600 00d4 F0BC     		pop	{r4, r5, r6, r7}
 601              	.LCFI1:
 602              		.cfi_remember_state
 603              		.cfi_restore 7
 604              		.cfi_restore 6
 605              		.cfi_restore 5
 606              		.cfi_restore 4
 607              		.cfi_def_cfa_offset 0
 608 00d6 7047     		bx	lr
 609              	.LVL22:
 610              	.L68:
 611              	.LCFI2:
 612              		.cfi_restore_state
 196:Src/motion_plan.c **** 									 // 現在の向きに応じて場合分けし、 歩数が少ない方向を判断
 613              		.loc 1 196 0
 614 00d8 0320     		movs	r0, #3
 195:Src/motion_plan.c **** 	unsigned char tmp_dir = UTURN;	 // 方向
 615              		.loc 1 195 0
 616 00da FF24     		movs	r4, #255
 617 00dc BAE7     		b	.L50
 618              	.L69:
 213:Src/motion_plan.c **** 				}
 619              		.loc 1 213 0
 620 00de 0120     		movs	r0, #1
 621 00e0 B8E7     		b	.L50
 622              	.L47:
 252:Src/motion_plan.c **** 		{
 623              		.loc 1 252 0
 624 00e2 481C     		adds	r0, r1, #1
 625 00e4 6C4C     		ldr	r4, .L94+8
 626 00e6 04EB0010 		add	r0, r4, r0, lsl #4
 627 00ea 1844     		add	r0, r0, r3
 628 00ec 90F80441 		ldrb	r4, [r0, #260]	@ zero_extendqisi2
 629 00f0 FF2C     		cmp	r4, #255
 630 00f2 0CD0     		beq	.L73
 254:Src/motion_plan.c **** 			{
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 19


 631              		.loc 1 254 0
 632 00f4 0E29     		cmp	r1, #14
 633 00f6 4FD8     		bhi	.L74
 256:Src/motion_plan.c **** 				{
 634              		.loc 1 256 0
 635 00f8 6748     		ldr	r0, .L94+8
 636 00fa 00EB8100 		add	r0, r0, r1, lsl #2
 637 00fe 4068     		ldr	r0, [r0, #4]
 638 0100 D840     		lsrs	r0, r0, r3
 639 0102 10F0010F 		tst	r0, #1
 640 0106 4AD0     		beq	.L75
 196:Src/motion_plan.c **** 									 // 現在の向きに応じて場合分けし、 歩数が少ない方向を判断
 641              		.loc 1 196 0
 642 0108 0320     		movs	r0, #3
 195:Src/motion_plan.c **** 	unsigned char tmp_dir = UTURN;	 // 方向
 643              		.loc 1 195 0
 644 010a FF24     		movs	r4, #255
 645 010c 00E0     		b	.L54
 646              	.L73:
 196:Src/motion_plan.c **** 									 // 現在の向きに応じて場合分けし、 歩数が少ない方向を判断
 647              		.loc 1 196 0
 648 010e 0320     		movs	r0, #3
 649              	.L54:
 650              	.LVL23:
 263:Src/motion_plan.c **** 		{
 651              		.loc 1 263 0
 652 0110 5A1C     		adds	r2, r3, #1
 653 0112 614D     		ldr	r5, .L94+8
 654 0114 05EB0115 		add	r5, r5, r1, lsl #4
 655 0118 2A44     		add	r2, r2, r5
 656 011a 92F80421 		ldrb	r2, [r2, #260]	@ zero_extendqisi2
 657 011e A242     		cmp	r2, r4
 658 0120 0DD2     		bcs	.L55
 265:Src/motion_plan.c **** 			{
 659              		.loc 1 265 0
 660 0122 0E2B     		cmp	r3, #14
 661 0124 0BD8     		bhi	.L55
 267:Src/motion_plan.c **** 				{
 662              		.loc 1 267 0
 663 0126 03F11005 		add	r5, r3, #16
 664 012a 5B4E     		ldr	r6, .L94+8
 665 012c 06EB8505 		add	r5, r6, r5, lsl #2
 666 0130 6D68     		ldr	r5, [r5, #4]
 667 0132 CD40     		lsrs	r5, r5, r1
 668 0134 15F0010F 		tst	r5, #1
 669 0138 01D1     		bne	.L55
 269:Src/motion_plan.c **** 					tmp_dir = LEFT;
 670              		.loc 1 269 0
 671 013a 1446     		mov	r4, r2
 672              	.LVL24:
 270:Src/motion_plan.c **** 				}
 673              		.loc 1 270 0
 674 013c 0020     		movs	r0, #0
 675              	.LVL25:
 676              	.L55:
 274:Src/motion_plan.c **** 		{
 677              		.loc 1 274 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 20


 678 013e 5D1E     		subs	r5, r3, #1
 679 0140 554A     		ldr	r2, .L94+8
 680 0142 02EB0112 		add	r2, r2, r1, lsl #4
 681 0146 2A44     		add	r2, r2, r5
 682 0148 92F80421 		ldrb	r2, [r2, #260]	@ zero_extendqisi2
 683 014c A242     		cmp	r2, r4
 684 014e 0CD2     		bcs	.L56
 276:Src/motion_plan.c **** 			{
 685              		.loc 1 276 0
 686 0150 5BB1     		cbz	r3, .L56
 278:Src/motion_plan.c **** 				{
 687              		.loc 1 278 0
 688 0152 03F10F05 		add	r5, r3, #15
 689 0156 504E     		ldr	r6, .L94+8
 690 0158 06EB8505 		add	r5, r6, r5, lsl #2
 691 015c 6D68     		ldr	r5, [r5, #4]
 692 015e CD40     		lsrs	r5, r5, r1
 693 0160 15F0010F 		tst	r5, #1
 694 0164 01D1     		bne	.L56
 280:Src/motion_plan.c **** 					tmp_dir = RIGHT;
 695              		.loc 1 280 0
 696 0166 1446     		mov	r4, r2
 697              	.LVL26:
 281:Src/motion_plan.c **** 				}
 698              		.loc 1 281 0
 699 0168 0220     		movs	r0, #2
 700              	.LVL27:
 701              	.L56:
 285:Src/motion_plan.c **** 		{
 702              		.loc 1 285 0
 703 016a FF2C     		cmp	r4, #255
 704 016c 08D0     		beq	.L57
 285:Src/motion_plan.c **** 		{
 705              		.loc 1 285 0 is_stmt 0 discriminator 1
 706 016e 4A1E     		subs	r2, r1, #1
 707 0170 494D     		ldr	r5, .L94+8
 708 0172 05EB0212 		add	r2, r5, r2, lsl #4
 709 0176 1A44     		add	r2, r2, r3
 710 0178 92F80421 		ldrb	r2, [r2, #260]	@ zero_extendqisi2
 711 017c A242     		cmp	r2, r4
 712 017e A9D2     		bcs	.L44
 713              	.L57:
 287:Src/motion_plan.c **** 			{
 714              		.loc 1 287 0 is_stmt 1
 715 0180 454A     		ldr	r2, .L94+8
 716 0182 02EB8101 		add	r1, r2, r1, lsl #2
 717              	.LVL28:
 718 0186 4A68     		ldr	r2, [r1, #4]
 719 0188 22FA03F3 		lsr	r3, r2, r3
 720              	.LVL29:
 721 018c 13F0010F 		tst	r3, #1
 722 0190 40F0D480 		bne	.L78
 289:Src/motion_plan.c **** 			}
 723              		.loc 1 289 0
 724 0194 0320     		movs	r0, #3
 725              	.LVL30:
 726 0196 9DE7     		b	.L44
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 21


 727              	.LVL31:
 728              	.L74:
 196:Src/motion_plan.c **** 									 // 現在の向きに応じて場合分けし、 歩数が少ない方向を判断
 729              		.loc 1 196 0
 730 0198 0320     		movs	r0, #3
 195:Src/motion_plan.c **** 	unsigned char tmp_dir = UTURN;	 // 方向
 731              		.loc 1 195 0
 732 019a FF24     		movs	r4, #255
 733 019c B8E7     		b	.L54
 734              	.L75:
 259:Src/motion_plan.c **** 				}
 735              		.loc 1 259 0
 736 019e 1046     		mov	r0, r2
 737 01a0 B6E7     		b	.L54
 738              	.L48:
 298:Src/motion_plan.c **** 		{
 739              		.loc 1 298 0
 740 01a2 5F1E     		subs	r7, r3, #1
 741 01a4 3C48     		ldr	r0, .L94+8
 742 01a6 00EB0110 		add	r0, r0, r1, lsl #4
 743 01aa 3844     		add	r0, r0, r7
 744 01ac 90F80441 		ldrb	r4, [r0, #260]	@ zero_extendqisi2
 745 01b0 FF2C     		cmp	r4, #255
 746 01b2 0ED0     		beq	.L79
 300:Src/motion_plan.c **** 			{
 747              		.loc 1 300 0
 748 01b4 002B     		cmp	r3, #0
 749 01b6 50D0     		beq	.L80
 302:Src/motion_plan.c **** 				{
 750              		.loc 1 302 0
 751 01b8 07F11000 		add	r0, r7, #16
 752 01bc 364D     		ldr	r5, .L94+8
 753 01be 05EB8000 		add	r0, r5, r0, lsl #2
 754 01c2 4068     		ldr	r0, [r0, #4]
 755 01c4 C840     		lsrs	r0, r0, r1
 756 01c6 10F0010F 		tst	r0, #1
 757 01ca 49D0     		beq	.L81
 196:Src/motion_plan.c **** 									 // 現在の向きに応じて場合分けし、 歩数が少ない方向を判断
 758              		.loc 1 196 0
 759 01cc 0320     		movs	r0, #3
 195:Src/motion_plan.c **** 	unsigned char tmp_dir = UTURN;	 // 方向
 760              		.loc 1 195 0
 761 01ce FF24     		movs	r4, #255
 762 01d0 00E0     		b	.L58
 763              	.L79:
 196:Src/motion_plan.c **** 									 // 現在の向きに応じて場合分けし、 歩数が少ない方向を判断
 764              		.loc 1 196 0
 765 01d2 0320     		movs	r0, #3
 766              	.L58:
 767              	.LVL32:
 309:Src/motion_plan.c **** 		{
 768              		.loc 1 309 0
 769 01d4 4D1C     		adds	r5, r1, #1
 770 01d6 304E     		ldr	r6, .L94+8
 771 01d8 06EB0515 		add	r5, r6, r5, lsl #4
 772 01dc 1D44     		add	r5, r5, r3
 773 01de 95F80451 		ldrb	r5, [r5, #260]	@ zero_extendqisi2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 22


 774 01e2 A542     		cmp	r5, r4
 775 01e4 0AD2     		bcs	.L59
 311:Src/motion_plan.c **** 			{
 776              		.loc 1 311 0
 777 01e6 0E29     		cmp	r1, #14
 778 01e8 08D8     		bhi	.L59
 313:Src/motion_plan.c **** 				{
 779              		.loc 1 313 0
 780 01ea 06EB8106 		add	r6, r6, r1, lsl #2
 781 01ee 7668     		ldr	r6, [r6, #4]
 782 01f0 DE40     		lsrs	r6, r6, r3
 783 01f2 16F0010F 		tst	r6, #1
 784 01f6 01D1     		bne	.L59
 315:Src/motion_plan.c **** 					tmp_dir = LEFT;
 785              		.loc 1 315 0
 786 01f8 2C46     		mov	r4, r5
 787              	.LVL33:
 316:Src/motion_plan.c **** 				}
 788              		.loc 1 316 0
 789 01fa 0020     		movs	r0, #0
 790              	.LVL34:
 791              	.L59:
 320:Src/motion_plan.c **** 		{
 792              		.loc 1 320 0
 793 01fc 4E1E     		subs	r6, r1, #1
 794 01fe 264D     		ldr	r5, .L94+8
 795 0200 05EB0615 		add	r5, r5, r6, lsl #4
 796 0204 1D44     		add	r5, r5, r3
 797 0206 95F80451 		ldrb	r5, [r5, #260]	@ zero_extendqisi2
 798 020a A542     		cmp	r5, r4
 799 020c 0BD2     		bcs	.L60
 322:Src/motion_plan.c **** 			{
 800              		.loc 1 322 0
 801 020e 51B1     		cbz	r1, .L60
 324:Src/motion_plan.c **** 				{
 802              		.loc 1 324 0
 803 0210 DFF884C0 		ldr	ip, .L94+8
 804 0214 0CEB8606 		add	r6, ip, r6, lsl #2
 805 0218 7668     		ldr	r6, [r6, #4]
 806 021a DE40     		lsrs	r6, r6, r3
 807 021c 16F0010F 		tst	r6, #1
 808 0220 01D1     		bne	.L60
 327:Src/motion_plan.c **** 				}
 809              		.loc 1 327 0
 810 0222 1046     		mov	r0, r2
 811              	.LVL35:
 326:Src/motion_plan.c **** 					tmp_dir = RIGHT;
 812              		.loc 1 326 0
 813 0224 2C46     		mov	r4, r5
 814              	.LVL36:
 815              	.L60:
 331:Src/motion_plan.c **** 		{
 816              		.loc 1 331 0
 817 0226 FF2C     		cmp	r4, #255
 818 0228 09D0     		beq	.L61
 331:Src/motion_plan.c **** 		{
 819              		.loc 1 331 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 23


 820 022a 5A1C     		adds	r2, r3, #1
 821 022c 1A4D     		ldr	r5, .L94+8
 822 022e 05EB0115 		add	r5, r5, r1, lsl #4
 823 0232 2A44     		add	r2, r2, r5
 824 0234 92F80421 		ldrb	r2, [r2, #260]	@ zero_extendqisi2
 825 0238 A242     		cmp	r2, r4
 826 023a BFF44BAF 		bcs	.L44
 827              	.L61:
 333:Src/motion_plan.c **** 			{
 828              		.loc 1 333 0 is_stmt 1
 829 023e 1037     		adds	r7, r7, #16
 830 0240 154A     		ldr	r2, .L94+8
 831 0242 02EB8707 		add	r7, r2, r7, lsl #2
 832 0246 7A68     		ldr	r2, [r7, #4]
 833 0248 22FA01F1 		lsr	r1, r2, r1
 834              	.LVL37:
 835 024c 11F0010F 		tst	r1, #1
 836 0250 76D1     		bne	.L84
 333:Src/motion_plan.c **** 			{
 837              		.loc 1 333 0 is_stmt 0 discriminator 1
 838 0252 002B     		cmp	r3, #0
 839 0254 76D1     		bne	.L85
 339:Src/motion_plan.c **** 			}
 840              		.loc 1 339 0 is_stmt 1
 841 0256 0420     		movs	r0, #4
 842              	.LVL38:
 843 0258 3CE7     		b	.L44
 844              	.LVL39:
 845              	.L80:
 196:Src/motion_plan.c **** 									 // 現在の向きに応じて場合分けし、 歩数が少ない方向を判断
 846              		.loc 1 196 0
 847 025a 0320     		movs	r0, #3
 195:Src/motion_plan.c **** 	unsigned char tmp_dir = UTURN;	 // 方向
 848              		.loc 1 195 0
 849 025c FF24     		movs	r4, #255
 850 025e B9E7     		b	.L58
 851              	.L81:
 305:Src/motion_plan.c **** 				}
 852              		.loc 1 305 0
 853 0260 0120     		movs	r0, #1
 854 0262 B7E7     		b	.L58
 855              	.L49:
 344:Src/motion_plan.c **** 		{
 856              		.loc 1 344 0
 857 0264 4F1E     		subs	r7, r1, #1
 858 0266 0C48     		ldr	r0, .L94+8
 859 0268 00EB0710 		add	r0, r0, r7, lsl #4
 860 026c 1844     		add	r0, r0, r3
 861 026e 90F80441 		ldrb	r4, [r0, #260]	@ zero_extendqisi2
 862 0272 FF2C     		cmp	r4, #255
 863 0274 12D0     		beq	.L86
 346:Src/motion_plan.c **** 			{
 864              		.loc 1 346 0
 865 0276 0029     		cmp	r1, #0
 866 0278 57D0     		beq	.L87
 348:Src/motion_plan.c **** 				{
 867              		.loc 1 348 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 24


 868 027a 0748     		ldr	r0, .L94+8
 869 027c 00EB8700 		add	r0, r0, r7, lsl #2
 870 0280 4068     		ldr	r0, [r0, #4]
 871 0282 D840     		lsrs	r0, r0, r3
 872 0284 10F0010F 		tst	r0, #1
 873 0288 52D0     		beq	.L88
 196:Src/motion_plan.c **** 									 // 現在の向きに応じて場合分けし、 歩数が少ない方向を判断
 874              		.loc 1 196 0
 875 028a 1046     		mov	r0, r2
 195:Src/motion_plan.c **** 	unsigned char tmp_dir = UTURN;	 // 方向
 876              		.loc 1 195 0
 877 028c FF24     		movs	r4, #255
 878 028e 06E0     		b	.L62
 879              	.L95:
 880              		.align	2
 881              	.L94:
 882 0290 00000000 		.word	position
 883 0294 00000000 		.word	direction
 884 0298 00000000 		.word	maze
 885              	.L86:
 196:Src/motion_plan.c **** 									 // 現在の向きに応じて場合分けし、 歩数が少ない方向を判断
 886              		.loc 1 196 0
 887 029c 1046     		mov	r0, r2
 888              	.L62:
 889              	.LVL40:
 355:Src/motion_plan.c **** 		{
 890              		.loc 1 355 0
 891 029e 5E1E     		subs	r6, r3, #1
 892 02a0 2B4D     		ldr	r5, .L96
 893 02a2 05EB0115 		add	r5, r5, r1, lsl #4
 894 02a6 3544     		add	r5, r5, r6
 895 02a8 95F80451 		ldrb	r5, [r5, #260]	@ zero_extendqisi2
 896 02ac A542     		cmp	r5, r4
 897 02ae 0DD2     		bcs	.L63
 357:Src/motion_plan.c **** 			{
 898              		.loc 1 357 0
 899 02b0 63B1     		cbz	r3, .L63
 359:Src/motion_plan.c **** 				{
 900              		.loc 1 359 0
 901 02b2 03F10F06 		add	r6, r3, #15
 902 02b6 DFF898C0 		ldr	ip, .L96
 903 02ba 0CEB8606 		add	r6, ip, r6, lsl #2
 904 02be 7668     		ldr	r6, [r6, #4]
 905 02c0 CE40     		lsrs	r6, r6, r1
 906 02c2 16F0010F 		tst	r6, #1
 907 02c6 01D1     		bne	.L63
 361:Src/motion_plan.c **** 					tmp_dir = LEFT;
 908              		.loc 1 361 0
 909 02c8 2C46     		mov	r4, r5
 910              	.LVL41:
 362:Src/motion_plan.c **** 				}
 911              		.loc 1 362 0
 912 02ca 0020     		movs	r0, #0
 913              	.LVL42:
 914              	.L63:
 366:Src/motion_plan.c **** 		{
 915              		.loc 1 366 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 25


 916 02cc 5D1C     		adds	r5, r3, #1
 917 02ce 204E     		ldr	r6, .L96
 918 02d0 06EB0116 		add	r6, r6, r1, lsl #4
 919 02d4 3544     		add	r5, r5, r6
 920 02d6 95F80451 		ldrb	r5, [r5, #260]	@ zero_extendqisi2
 921 02da A542     		cmp	r5, r4
 922 02dc 0DD2     		bcs	.L64
 368:Src/motion_plan.c **** 			{
 923              		.loc 1 368 0
 924 02de 0E2B     		cmp	r3, #14
 925 02e0 0BD8     		bhi	.L64
 370:Src/motion_plan.c **** 				{
 926              		.loc 1 370 0
 927 02e2 03F1100C 		add	ip, r3, #16
 928 02e6 1A4E     		ldr	r6, .L96
 929 02e8 06EB8C06 		add	r6, r6, ip, lsl #2
 930 02ec 7668     		ldr	r6, [r6, #4]
 931 02ee CE40     		lsrs	r6, r6, r1
 932 02f0 16F0010F 		tst	r6, #1
 933 02f4 01D1     		bne	.L64
 372:Src/motion_plan.c **** 					tmp_dir = RIGHT;
 934              		.loc 1 372 0
 935 02f6 2C46     		mov	r4, r5
 936              	.LVL43:
 373:Src/motion_plan.c **** 				}
 937              		.loc 1 373 0
 938 02f8 0220     		movs	r0, #2
 939              	.LVL44:
 940              	.L64:
 377:Src/motion_plan.c **** 		{
 941              		.loc 1 377 0
 942 02fa FF2C     		cmp	r4, #255
 943 02fc 09D0     		beq	.L65
 377:Src/motion_plan.c **** 		{
 944              		.loc 1 377 0 is_stmt 0 discriminator 1
 945 02fe 4D1C     		adds	r5, r1, #1
 946 0300 134E     		ldr	r6, .L96
 947 0302 06EB0515 		add	r5, r6, r5, lsl #4
 948 0306 1D44     		add	r5, r5, r3
 949 0308 95F80451 		ldrb	r5, [r5, #260]	@ zero_extendqisi2
 950 030c A542     		cmp	r5, r4
 951 030e BFF4E1AE 		bcs	.L44
 952              	.L65:
 379:Src/motion_plan.c **** 			{
 953              		.loc 1 379 0 is_stmt 1
 954 0312 0F48     		ldr	r0, .L96
 955              	.LVL45:
 956 0314 00EB8707 		add	r7, r0, r7, lsl #2
 957 0318 7868     		ldr	r0, [r7, #4]
 958 031a 20FA03F3 		lsr	r3, r0, r3
 959              	.LVL46:
 960 031e 13F0010F 		tst	r3, #1
 961 0322 11D1     		bne	.L91
 379:Src/motion_plan.c **** 			{
 962              		.loc 1 379 0 is_stmt 0 discriminator 1
 963 0324 91B9     		cbnz	r1, .L92
 385:Src/motion_plan.c **** 			}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 26


 964              		.loc 1 385 0 is_stmt 1
 965 0326 0420     		movs	r0, #4
 966 0328 D4E6     		b	.L44
 967              	.LVL47:
 968              	.L87:
 196:Src/motion_plan.c **** 									 // 現在の向きに応じて場合分けし、 歩数が少ない方向を判断
 969              		.loc 1 196 0
 970 032a 1046     		mov	r0, r2
 195:Src/motion_plan.c **** 	unsigned char tmp_dir = UTURN;	 // 方向
 971              		.loc 1 195 0
 972 032c FF24     		movs	r4, #255
 973 032e B6E7     		b	.L62
 974              	.L88:
 351:Src/motion_plan.c **** 				}
 975              		.loc 1 351 0
 976 0330 0120     		movs	r0, #1
 977 0332 B4E7     		b	.L62
 978              	.L66:
 196:Src/motion_plan.c **** 									 // 現在の向きに応じて場合分けし、 歩数が少ない方向を判断
 979              		.loc 1 196 0
 980 0334 0320     		movs	r0, #3
 981 0336 CDE6     		b	.L44
 982              	.LVL48:
 983              	.L72:
 247:Src/motion_plan.c **** 			}
 984              		.loc 1 247 0
 985 0338 0420     		movs	r0, #4
 986              	.LVL49:
 987 033a CBE6     		b	.L44
 988              	.LVL50:
 989              	.L78:
 293:Src/motion_plan.c **** 			}
 990              		.loc 1 293 0
 991 033c 0420     		movs	r0, #4
 992              	.LVL51:
 993 033e C9E6     		b	.L44
 994              	.LVL52:
 995              	.L84:
 339:Src/motion_plan.c **** 			}
 996              		.loc 1 339 0
 997 0340 0420     		movs	r0, #4
 998              	.LVL53:
 999 0342 C7E6     		b	.L44
 1000              	.LVL54:
 1001              	.L85:
 335:Src/motion_plan.c **** 			}
 1002              		.loc 1 335 0
 1003 0344 0320     		movs	r0, #3
 1004              	.LVL55:
 1005 0346 C5E6     		b	.L44
 1006              	.LVL56:
 1007              	.L91:
 385:Src/motion_plan.c **** 			}
 1008              		.loc 1 385 0
 1009 0348 0420     		movs	r0, #4
 1010 034a C3E6     		b	.L44
 1011              	.L92:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 27


 381:Src/motion_plan.c **** 			}
 1012              		.loc 1 381 0
 1013 034c 1046     		mov	r0, r2
 1014 034e C1E6     		b	.L44
 1015              	.L97:
 1016              		.align	2
 1017              	.L96:
 1018 0350 00000000 		.word	maze
 1019              		.cfi_endproc
 1020              	.LFE130:
 1022              		.section	.text.Plan_Adachi,"ax",%progbits
 1023              		.align	1
 1024              		.global	Plan_Adachi
 1025              		.syntax unified
 1026              		.thumb
 1027              		.thumb_func
 1028              		.fpu fpv4-sp-d16
 1030              	Plan_Adachi:
 1031              	.LFB131:
 394:Src/motion_plan.c **** 
 395:Src/motion_plan.c **** void Plan_Adachi(void)
 396:Src/motion_plan.c **** {
 1032              		.loc 1 396 0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 0
 1035              		@ frame_needed = 0, uses_anonymous_args = 0
 1036 0000 70B5     		push	{r4, r5, r6, lr}
 1037              	.LCFI3:
 1038              		.cfi_def_cfa_offset 16
 1039              		.cfi_offset 4, -16
 1040              		.cfi_offset 5, -12
 1041              		.cfi_offset 6, -8
 1042              		.cfi_offset 14, -4
 1043              	.LVL57:
 397:Src/motion_plan.c **** 	unsigned char flag_goal_is = FALSE;
 398:Src/motion_plan.c **** 	unsigned char next_dir;
 399:Src/motion_plan.c **** 
 400:Src/motion_plan.c **** 	adcStart();
 1044              		.loc 1 400 0
 1045 0002 FFF7FEFF 		bl	adcStart
 1046              	.LVL58:
 1047              	.L99:
 401:Src/motion_plan.c **** 	while (sen_front.is_wall == FALSE)
 1048              		.loc 1 401 0 discriminator 1
 1049 0006 2B4B     		ldr	r3, .L114
 1050 0008 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1051 000a 002B     		cmp	r3, #0
 1052 000c FBD0     		beq	.L99
 402:Src/motion_plan.c **** 	{
 403:Src/motion_plan.c **** 	}
 404:Src/motion_plan.c **** 	Output_Buzzer(HZ_G);
 1053              		.loc 1 404 0
 1054 000e 6620     		movs	r0, #102
 1055 0010 FFF7FEFF 		bl	Output_Buzzer
 1056              	.LVL59:
 405:Src/motion_plan.c **** 	HAL_Delay(2500);
 1057              		.loc 1 405 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 28


 1058 0014 40F6C410 		movw	r0, #2500
 1059 0018 FFF7FEFF 		bl	HAL_Delay
 1060              	.LVL60:
 406:Src/motion_plan.c **** 	gyro_offset_calc_reset();
 1061              		.loc 1 406 0
 1062 001c FFF7FEFF 		bl	gyro_offset_calc_reset
 1063              	.LVL61:
 407:Src/motion_plan.c **** 	HAL_Delay(2500);
 1064              		.loc 1 407 0
 1065 0020 40F6C410 		movw	r0, #2500
 1066 0024 FFF7FEFF 		bl	HAL_Delay
 1067              	.LVL62:
 408:Src/motion_plan.c **** 
 409:Src/motion_plan.c **** 	Maze_Init(&maze);
 1068              		.loc 1 409 0
 1069 0028 2348     		ldr	r0, .L114+4
 1070 002a FFF7FEFF 		bl	Maze_Init
 1071              	.LVL63:
 410:Src/motion_plan.c **** 
 411:Src/motion_plan.c **** 	flag_motor = TRUE;
 1072              		.loc 1 411 0
 1073 002e 0123     		movs	r3, #1
 1074 0030 224A     		ldr	r2, .L114+8
 1075 0032 1370     		strb	r3, [r2]
 412:Src/motion_plan.c **** 	enc.offset = 0;
 1076              		.loc 1 412 0
 1077 0034 224A     		ldr	r2, .L114+12
 1078 0036 0021     		movs	r1, #0
 1079 0038 9160     		str	r1, [r2, #8]	@ float
 413:Src/motion_plan.c **** 
 414:Src/motion_plan.c **** 	position = 0b1;
 1080              		.loc 1 414 0
 1081 003a 224A     		ldr	r2, .L114+16
 1082 003c 1370     		strb	r3, [r2]
 415:Src/motion_plan.c **** 	direction = NORTH;
 1083              		.loc 1 415 0
 1084 003e 0026     		movs	r6, #0
 1085 0040 214B     		ldr	r3, .L114+20
 1086 0042 1E70     		strb	r6, [r3]
 416:Src/motion_plan.c **** 	Maze_Set();
 1087              		.loc 1 416 0
 1088 0044 FFF7FEFF 		bl	Maze_Set
 1089              	.LVL64:
 417:Src/motion_plan.c **** 
 418:Src/motion_plan.c **** 	Motion_Start();
 1090              		.loc 1 418 0
 1091 0048 FFF7FEFF 		bl	Motion_Start
 1092              	.LVL65:
 1093              	.L100:
 419:Src/motion_plan.c **** 
 420:Src/motion_plan.c **** 	while (flag_goal_is == FALSE)
 1094              		.loc 1 420 0
 1095 004c 56BB     		cbnz	r6, .L112
 421:Src/motion_plan.c **** 	{
 422:Src/motion_plan.c **** 		Maze_Get_Wall();
 1096              		.loc 1 422 0
 1097 004e FFF7FEFF 		bl	Maze_Get_Wall
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 29


 1098              	.LVL66:
 423:Src/motion_plan.c **** 		Maze_CreateMap(&maze);
 1099              		.loc 1 423 0
 1100 0052 194C     		ldr	r4, .L114+4
 1101 0054 2046     		mov	r0, r4
 1102 0056 FFF7FEFF 		bl	Maze_CreateMap
 1103              	.LVL67:
 424:Src/motion_plan.c **** 		next_dir = Maze_Next_Motion();
 1104              		.loc 1 424 0
 1105 005a FFF7FEFF 		bl	Maze_Next_Motion
 1106              	.LVL68:
 1107 005e 0546     		mov	r5, r0
 1108              	.LVL69:
 425:Src/motion_plan.c **** 		Update_Position(next_dir);
 1109              		.loc 1 425 0
 1110 0060 FFF7FEFF 		bl	Update_Position
 1111              	.LVL70:
 426:Src/motion_plan.c **** 		if (position == (maze.goal_x << 4 | maze.goal_y))
 1112              		.loc 1 426 0
 1113 0064 174B     		ldr	r3, .L114+16
 1114 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1115 0068 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1116 006a 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1117 006c 43EA0113 		orr	r3, r3, r1, lsl #4
 1118 0070 9A42     		cmp	r2, r3
 1119 0072 06D0     		beq	.L113
 1120              	.LVL71:
 1121              	.L101:
 427:Src/motion_plan.c **** 		{
 428:Src/motion_plan.c **** 			flag_goal_is = TRUE;
 429:Src/motion_plan.c **** 		}
 430:Src/motion_plan.c **** 
 431:Src/motion_plan.c **** 		switch (next_dir)
 1122              		.loc 1 431 0
 1123 0074 042D     		cmp	r5, #4
 1124 0076 E9D8     		bhi	.L100
 1125 0078 DFE805F0 		tbb	[pc, r5]
 1126              	.L104:
 1127 007c 05       		.byte	(.L103-.L104)/2
 1128 007d 08       		.byte	(.L105-.L104)/2
 1129 007e 0B       		.byte	(.L106-.L104)/2
 1130 007f 0E       		.byte	(.L107-.L104)/2
 1131 0080 11       		.byte	(.L108-.L104)/2
 1132 0081 00       		.p2align 1
 1133              	.L113:
 428:Src/motion_plan.c **** 		}
 1134              		.loc 1 428 0
 1135 0082 0126     		movs	r6, #1
 1136              	.LVL72:
 1137 0084 F6E7     		b	.L101
 1138              	.LVL73:
 1139              	.L103:
 432:Src/motion_plan.c **** 		{
 433:Src/motion_plan.c **** 		case LEFT:
 434:Src/motion_plan.c **** 			//Motion_Left();
 435:Src/motion_plan.c **** 			Motion_SlalomLeft();
 1140              		.loc 1 435 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 30


 1141 0086 FFF7FEFF 		bl	Motion_SlalomLeft
 1142              	.LVL74:
 436:Src/motion_plan.c **** 			break;
 1143              		.loc 1 436 0
 1144 008a DFE7     		b	.L100
 1145              	.L105:
 437:Src/motion_plan.c **** 
 438:Src/motion_plan.c **** 		case FRONT:
 439:Src/motion_plan.c **** 			Motion_Straight();
 1146              		.loc 1 439 0
 1147 008c FFF7FEFF 		bl	Motion_Straight
 1148              	.LVL75:
 440:Src/motion_plan.c **** 			break;
 1149              		.loc 1 440 0
 1150 0090 DCE7     		b	.L100
 1151              	.L106:
 441:Src/motion_plan.c **** 
 442:Src/motion_plan.c **** 		case RIGHT:
 443:Src/motion_plan.c **** 			//Motion_Right();
 444:Src/motion_plan.c **** 			Motion_SlalomRight();
 1152              		.loc 1 444 0
 1153 0092 FFF7FEFF 		bl	Motion_SlalomRight
 1154              	.LVL76:
 445:Src/motion_plan.c **** 			break;
 1155              		.loc 1 445 0
 1156 0096 D9E7     		b	.L100
 1157              	.L107:
 446:Src/motion_plan.c **** 
 447:Src/motion_plan.c **** 		case UTURN:
 448:Src/motion_plan.c **** 			Motion_Uturn();
 1158              		.loc 1 448 0
 1159 0098 FFF7FEFF 		bl	Motion_Uturn
 1160              	.LVL77:
 449:Src/motion_plan.c **** 			break;
 1161              		.loc 1 449 0
 1162 009c D6E7     		b	.L100
 1163              	.L108:
 450:Src/motion_plan.c **** 
 451:Src/motion_plan.c **** 		case KABEATE:
 452:Src/motion_plan.c **** 			Motion_Kabeate();
 1164              		.loc 1 452 0
 1165 009e FFF7FEFF 		bl	Motion_Kabeate
 1166              	.LVL78:
 453:Src/motion_plan.c **** 			break;
 1167              		.loc 1 453 0
 1168 00a2 D3E7     		b	.L100
 1169              	.LVL79:
 1170              	.L112:
 454:Src/motion_plan.c **** 		}
 455:Src/motion_plan.c **** 	}
 456:Src/motion_plan.c **** 	Maze_Get_Wall();
 1171              		.loc 1 456 0
 1172 00a4 FFF7FEFF 		bl	Maze_Get_Wall
 1173              	.LVL80:
 457:Src/motion_plan.c **** 	Motion_Goal();
 1174              		.loc 1 457 0
 1175 00a8 FFF7FEFF 		bl	Motion_Goal
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 31


 1176              	.LVL81:
 458:Src/motion_plan.c **** 	flag_motor = FALSE;
 1177              		.loc 1 458 0
 1178 00ac 034B     		ldr	r3, .L114+8
 1179 00ae 0022     		movs	r2, #0
 1180 00b0 1A70     		strb	r2, [r3]
 459:Src/motion_plan.c **** }
 1181              		.loc 1 459 0
 1182 00b2 70BD     		pop	{r4, r5, r6, pc}
 1183              	.LVL82:
 1184              	.L115:
 1185              		.align	2
 1186              	.L114:
 1187 00b4 00000000 		.word	sen_front
 1188 00b8 00000000 		.word	maze
 1189 00bc 00000000 		.word	flag_motor
 1190 00c0 00000000 		.word	enc
 1191 00c4 00000000 		.word	position
 1192 00c8 00000000 		.word	direction
 1193              		.cfi_endproc
 1194              	.LFE131:
 1196              		.section	.text.Plan_AllSearch,"ax",%progbits
 1197              		.align	1
 1198              		.global	Plan_AllSearch
 1199              		.syntax unified
 1200              		.thumb
 1201              		.thumb_func
 1202              		.fpu fpv4-sp-d16
 1204              	Plan_AllSearch:
 1205              	.LFB132:
 460:Src/motion_plan.c **** 
 461:Src/motion_plan.c **** void Plan_AllSearch(void)
 462:Src/motion_plan.c **** {
 1206              		.loc 1 462 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 0
 1209              		@ frame_needed = 0, uses_anonymous_args = 0
 1210 0000 10B5     		push	{r4, lr}
 1211              	.LCFI4:
 1212              		.cfi_def_cfa_offset 8
 1213              		.cfi_offset 4, -8
 1214              		.cfi_offset 14, -4
 1215              	.LVL83:
 463:Src/motion_plan.c **** 	unsigned char end_flag = 0;
 464:Src/motion_plan.c **** 
 465:Src/motion_plan.c **** 	Output_Buzzer(HZ_G);
 1216              		.loc 1 465 0
 1217 0002 6620     		movs	r0, #102
 1218 0004 FFF7FEFF 		bl	Output_Buzzer
 1219              	.LVL84:
 466:Src/motion_plan.c **** 	flag_motor = TRUE;
 1220              		.loc 1 466 0
 1221 0008 204B     		ldr	r3, .L130
 1222 000a 0122     		movs	r2, #1
 1223 000c 1A70     		strb	r2, [r3]
 467:Src/motion_plan.c **** 
 468:Src/motion_plan.c **** 	if (sen_front.is_wall == FALSE)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 32


 1224              		.loc 1 468 0
 1225 000e 204B     		ldr	r3, .L130+4
 1226 0010 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1227 0012 2BB9     		cbnz	r3, .L117
 469:Src/motion_plan.c **** 	{
 470:Src/motion_plan.c **** 		Update_Position(FRONT);
 1228              		.loc 1 470 0
 1229 0014 1046     		mov	r0, r2
 1230 0016 FFF7FEFF 		bl	Update_Position
 1231              	.LVL85:
 471:Src/motion_plan.c **** 		Straight_half_accel();
 1232              		.loc 1 471 0
 1233 001a FFF7FEFF 		bl	Straight_half_accel
 1234              	.LVL86:
 1235 001e 07E0     		b	.L120
 1236              	.L117:
 472:Src/motion_plan.c **** 	}
 473:Src/motion_plan.c **** 	else
 474:Src/motion_plan.c **** 	{
 475:Src/motion_plan.c **** 		Update_Position(UTURN);
 1237              		.loc 1 475 0
 1238 0020 0320     		movs	r0, #3
 1239 0022 FFF7FEFF 		bl	Update_Position
 1240              	.LVL87:
 476:Src/motion_plan.c **** 		Motion_Restart();
 1241              		.loc 1 476 0
 1242 0026 FFF7FEFF 		bl	Motion_Restart
 1243              	.LVL88:
 1244 002a 01E0     		b	.L120
 1245              	.LVL89:
 1246              	.L122:
 1247              	.LBB2:
 477:Src/motion_plan.c **** 	}
 478:Src/motion_plan.c **** 
 479:Src/motion_plan.c **** 	while (1)
 480:Src/motion_plan.c **** 	{
 481:Src/motion_plan.c **** 		unsigned char next_dir;
 482:Src/motion_plan.c **** 		Maze_Get_Wall();
 483:Src/motion_plan.c **** 		end_flag = Maze_CreateAllMap(&maze);
 484:Src/motion_plan.c **** 		if (end_flag == 1)
 485:Src/motion_plan.c **** 		{
 486:Src/motion_plan.c **** 			break;
 487:Src/motion_plan.c **** 		}
 488:Src/motion_plan.c **** 		next_dir = Maze_Next_Motion();
 489:Src/motion_plan.c **** 		Update_Position(next_dir);
 490:Src/motion_plan.c **** 		switch (next_dir)
 491:Src/motion_plan.c **** 		{
 492:Src/motion_plan.c **** 		case LEFT:
 493:Src/motion_plan.c **** 			//Motion_Left();
 494:Src/motion_plan.c **** 			Motion_SlalomLeft();
 1248              		.loc 1 494 0
 1249 002c FFF7FEFF 		bl	Motion_SlalomLeft
 1250              	.LVL90:
 1251              	.L120:
 482:Src/motion_plan.c **** 		end_flag = Maze_CreateAllMap(&maze);
 1252              		.loc 1 482 0
 1253 0030 FFF7FEFF 		bl	Maze_Get_Wall
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 33


 1254              	.LVL91:
 483:Src/motion_plan.c **** 		if (end_flag == 1)
 1255              		.loc 1 483 0
 1256 0034 1748     		ldr	r0, .L130+8
 1257 0036 FFF7FEFF 		bl	Maze_CreateAllMap
 1258              	.LVL92:
 484:Src/motion_plan.c **** 		{
 1259              		.loc 1 484 0
 1260 003a 0128     		cmp	r0, #1
 1261 003c 20D0     		beq	.L121
 488:Src/motion_plan.c **** 		Update_Position(next_dir);
 1262              		.loc 1 488 0
 1263 003e FFF7FEFF 		bl	Maze_Next_Motion
 1264              	.LVL93:
 1265 0042 0446     		mov	r4, r0
 1266              	.LVL94:
 489:Src/motion_plan.c **** 		switch (next_dir)
 1267              		.loc 1 489 0
 1268 0044 FFF7FEFF 		bl	Update_Position
 1269              	.LVL95:
 490:Src/motion_plan.c **** 		{
 1270              		.loc 1 490 0
 1271 0048 042C     		cmp	r4, #4
 1272 004a F1D8     		bhi	.L120
 1273 004c 01A3     		adr	r3, .L123
 1274 004e 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 1275 0052 00BF     		.p2align 2
 1276              	.L123:
 1277 0054 2D000000 		.word	.L122+1
 1278 0058 69000000 		.word	.L124+1
 1279 005c 6F000000 		.word	.L125+1
 1280 0060 75000000 		.word	.L126+1
 1281 0064 7B000000 		.word	.L127+1
 1282              		.p2align 1
 1283              	.L124:
 495:Src/motion_plan.c **** 			break;
 496:Src/motion_plan.c **** 
 497:Src/motion_plan.c **** 		case FRONT:
 498:Src/motion_plan.c **** 			Motion_Straight();
 1284              		.loc 1 498 0
 1285 0068 FFF7FEFF 		bl	Motion_Straight
 1286              	.LVL96:
 499:Src/motion_plan.c **** 			break;
 1287              		.loc 1 499 0
 1288 006c E0E7     		b	.L120
 1289              	.L125:
 500:Src/motion_plan.c **** 
 501:Src/motion_plan.c **** 		case RIGHT:
 502:Src/motion_plan.c **** 			//Motion_Right();
 503:Src/motion_plan.c **** 			Motion_SlalomRight();
 1290              		.loc 1 503 0
 1291 006e FFF7FEFF 		bl	Motion_SlalomRight
 1292              	.LVL97:
 504:Src/motion_plan.c **** 			break;
 1293              		.loc 1 504 0
 1294 0072 DDE7     		b	.L120
 1295              	.L126:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 34


 505:Src/motion_plan.c **** 
 506:Src/motion_plan.c **** 		case UTURN:
 507:Src/motion_plan.c **** 			Motion_Uturn();
 1296              		.loc 1 507 0
 1297 0074 FFF7FEFF 		bl	Motion_Uturn
 1298              	.LVL98:
 508:Src/motion_plan.c **** 			break;
 1299              		.loc 1 508 0
 1300 0078 DAE7     		b	.L120
 1301              	.L127:
 509:Src/motion_plan.c **** 
 510:Src/motion_plan.c **** 		case KABEATE:
 511:Src/motion_plan.c **** 			Motion_Kabeate();
 1302              		.loc 1 511 0
 1303 007a FFF7FEFF 		bl	Motion_Kabeate
 1304              	.LVL99:
 512:Src/motion_plan.c **** 			break;
 1305              		.loc 1 512 0
 1306 007e D7E7     		b	.L120
 1307              	.LVL100:
 1308              	.L121:
 1309              	.LBE2:
 513:Src/motion_plan.c **** 		}
 514:Src/motion_plan.c **** 	}
 515:Src/motion_plan.c **** 	Motion_Goal();
 1310              		.loc 1 515 0
 1311 0080 FFF7FEFF 		bl	Motion_Goal
 1312              	.LVL101:
 516:Src/motion_plan.c **** 	flag_motor = FALSE;
 1313              		.loc 1 516 0
 1314 0084 014B     		ldr	r3, .L130
 1315 0086 0022     		movs	r2, #0
 1316 0088 1A70     		strb	r2, [r3]
 517:Src/motion_plan.c **** }
 1317              		.loc 1 517 0
 1318 008a 10BD     		pop	{r4, pc}
 1319              	.L131:
 1320              		.align	2
 1321              	.L130:
 1322 008c 00000000 		.word	flag_motor
 1323 0090 00000000 		.word	sen_front
 1324 0094 00000000 		.word	maze
 1325              		.cfi_endproc
 1326              	.LFE132:
 1328              		.section	.text.Plan_Root,"ax",%progbits
 1329              		.align	1
 1330              		.global	Plan_Root
 1331              		.syntax unified
 1332              		.thumb
 1333              		.thumb_func
 1334              		.fpu fpv4-sp-d16
 1336              	Plan_Root:
 1337              	.LFB133:
 518:Src/motion_plan.c **** 
 519:Src/motion_plan.c **** void Plan_Root(void)
 520:Src/motion_plan.c **** {
 1338              		.loc 1 520 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 35


 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 0
 1341              		@ frame_needed = 0, uses_anonymous_args = 0
 1342 0000 10B5     		push	{r4, lr}
 1343              	.LCFI5:
 1344              		.cfi_def_cfa_offset 8
 1345              		.cfi_offset 4, -8
 1346              		.cfi_offset 14, -4
 1347              	.LVL102:
 521:Src/motion_plan.c **** 	unsigned char flag_goal_is = FALSE;
 522:Src/motion_plan.c **** 
 523:Src/motion_plan.c **** 	Maze_CreateFastMap(&maze);
 1348              		.loc 1 523 0
 1349 0002 1448     		ldr	r0, .L137
 1350 0004 FFF7FEFF 		bl	Maze_CreateFastMap
 1351              	.LVL103:
 524:Src/motion_plan.c **** 
 525:Src/motion_plan.c **** 	Que_init_motion(&q_motion);
 1352              		.loc 1 525 0
 1353 0008 134C     		ldr	r4, .L137+4
 1354 000a 2046     		mov	r0, r4
 1355 000c FFF7FEFF 		bl	Que_init_motion
 1356              	.LVL104:
 526:Src/motion_plan.c **** 	position = 0b1;
 1357              		.loc 1 526 0
 1358 0010 124B     		ldr	r3, .L137+8
 1359 0012 0122     		movs	r2, #1
 1360 0014 1A70     		strb	r2, [r3]
 527:Src/motion_plan.c **** 	direction = NORTH;
 1361              		.loc 1 527 0
 1362 0016 124B     		ldr	r3, .L137+12
 1363 0018 0022     		movs	r2, #0
 1364 001a 1A70     		strb	r2, [r3]
 528:Src/motion_plan.c **** 	enq_motion(&q_motion, START);
 1365              		.loc 1 528 0
 1366 001c 0521     		movs	r1, #5
 1367 001e 2046     		mov	r0, r4
 1368 0020 FFF7FEFF 		bl	enq_motion
 1369              	.LVL105:
 1370              	.L133:
 1371              	.LBB3:
 529:Src/motion_plan.c **** 	while (flag_goal_is == FALSE)
 530:Src/motion_plan.c **** 	{
 531:Src/motion_plan.c **** 		unsigned char tmp;
 532:Src/motion_plan.c **** 		tmp = Maze_Next_Motion();
 1372              		.loc 1 532 0
 1373 0024 FFF7FEFF 		bl	Maze_Next_Motion
 1374              	.LVL106:
 1375 0028 0446     		mov	r4, r0
 1376              	.LVL107:
 533:Src/motion_plan.c **** 		Update_Position(tmp);
 1377              		.loc 1 533 0
 1378 002a FFF7FEFF 		bl	Update_Position
 1379              	.LVL108:
 534:Src/motion_plan.c **** 		enq_motion(&q_motion, tmp);
 1380              		.loc 1 534 0
 1381 002e 2146     		mov	r1, r4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 36


 1382 0030 0948     		ldr	r0, .L137+4
 1383 0032 FFF7FEFF 		bl	enq_motion
 1384              	.LVL109:
 535:Src/motion_plan.c **** 		if (position == (maze.goal_x << 4 | maze.goal_y))
 1385              		.loc 1 535 0
 1386 0036 094B     		ldr	r3, .L137+8
 1387 0038 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1388 003a 064A     		ldr	r2, .L137
 1389 003c 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1390 003e 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 1391 0040 43EA0013 		orr	r3, r3, r0, lsl #4
 1392 0044 9942     		cmp	r1, r3
 1393 0046 EDD1     		bne	.L133
 1394              	.LVL110:
 536:Src/motion_plan.c **** 		{
 537:Src/motion_plan.c **** 			flag_goal_is = TRUE;
 538:Src/motion_plan.c **** 			enq_motion(&q_motion, GOAL);
 1395              		.loc 1 538 0
 1396 0048 0621     		movs	r1, #6
 1397 004a 0348     		ldr	r0, .L137+4
 1398 004c FFF7FEFF 		bl	enq_motion
 1399              	.LVL111:
 1400              	.LBE3:
 539:Src/motion_plan.c **** 		}
 540:Src/motion_plan.c **** 	}
 541:Src/motion_plan.c **** }
 1401              		.loc 1 541 0
 1402 0050 10BD     		pop	{r4, pc}
 1403              	.LVL112:
 1404              	.L138:
 1405 0052 00BF     		.align	2
 1406              	.L137:
 1407 0054 00000000 		.word	maze
 1408 0058 00000000 		.word	q_motion
 1409 005c 00000000 		.word	position
 1410 0060 00000000 		.word	direction
 1411              		.cfi_endproc
 1412              	.LFE133:
 1414              		.section	.text.Plan_Compress,"ax",%progbits
 1415              		.align	1
 1416              		.global	Plan_Compress
 1417              		.syntax unified
 1418              		.thumb
 1419              		.thumb_func
 1420              		.fpu fpv4-sp-d16
 1422              	Plan_Compress:
 1423              	.LFB134:
 542:Src/motion_plan.c **** 
 543:Src/motion_plan.c **** void Plan_Compress(void)
 544:Src/motion_plan.c **** {
 1424              		.loc 1 544 0
 1425              		.cfi_startproc
 1426              		@ args = 0, pretend = 0, frame = 264
 1427              		@ frame_needed = 0, uses_anonymous_args = 0
 1428 0000 30B5     		push	{r4, r5, lr}
 1429              	.LCFI6:
 1430              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 37


 1431              		.cfi_offset 4, -12
 1432              		.cfi_offset 5, -8
 1433              		.cfi_offset 14, -4
 1434 0002 C3B0     		sub	sp, sp, #268
 1435              	.LCFI7:
 1436              		.cfi_def_cfa_offset 280
 545:Src/motion_plan.c **** 	queue_motion_t q_buff;
 546:Src/motion_plan.c **** 	unsigned motion;
 547:Src/motion_plan.c **** 
 548:Src/motion_plan.c **** 	Que_init_motion(&q_buff);
 1437              		.loc 1 548 0
 1438 0004 6846     		mov	r0, sp
 1439 0006 FFF7FEFF 		bl	Que_init_motion
 1440              	.LVL113:
 549:Src/motion_plan.c **** 	motion = deq_motion(&q_motion);
 1441              		.loc 1 549 0
 1442 000a 3E48     		ldr	r0, .L159
 1443 000c FFF7FEFF 		bl	deq_motion
 1444              	.LVL114:
 1445 0010 0446     		mov	r4, r0
 1446              	.LVL115:
 550:Src/motion_plan.c **** 
 551:Src/motion_plan.c **** 	while (q_motion.head != q_motion.tail)
 1447              		.loc 1 551 0
 1448 0012 19E0     		b	.L141
 1449              	.LVL116:
 1450              	.L146:
 1451              	.LBB4:
 552:Src/motion_plan.c **** 	{
 553:Src/motion_plan.c **** 		unsigned char buff = 0;
 554:Src/motion_plan.c **** 		switch (motion)
 555:Src/motion_plan.c **** 		{
 556:Src/motion_plan.c **** 		case START: //5
 557:Src/motion_plan.c **** 			motion = deq_motion(&q_motion);
 1452              		.loc 1 557 0
 1453 0014 3B48     		ldr	r0, .L159
 1454 0016 FFF7FEFF 		bl	deq_motion
 1455              	.LVL117:
 1456 001a 0446     		mov	r4, r0
 1457              	.LVL118:
 553:Src/motion_plan.c **** 		switch (motion)
 1458              		.loc 1 553 0
 1459 001c 0025     		movs	r5, #0
 558:Src/motion_plan.c **** 			while (motion == FRONT && q_motion.head != q_motion.tail)
 1460              		.loc 1 558 0
 1461 001e 05E0     		b	.L147
 1462              	.LVL119:
 1463              	.L149:
 559:Src/motion_plan.c **** 			{
 560:Src/motion_plan.c **** 				buff++;
 1464              		.loc 1 560 0
 1465 0020 0135     		adds	r5, r5, #1
 1466              	.LVL120:
 1467 0022 EDB2     		uxtb	r5, r5
 1468              	.LVL121:
 561:Src/motion_plan.c **** 				motion = deq_motion(&q_motion);
 1469              		.loc 1 561 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 38


 1470 0024 3748     		ldr	r0, .L159
 1471 0026 FFF7FEFF 		bl	deq_motion
 1472              	.LVL122:
 1473 002a 0446     		mov	r4, r0
 1474              	.LVL123:
 1475              	.L147:
 558:Src/motion_plan.c **** 			while (motion == FRONT && q_motion.head != q_motion.tail)
 1476              		.loc 1 558 0
 1477 002c 012C     		cmp	r4, #1
 1478 002e 06D1     		bne	.L148
 558:Src/motion_plan.c **** 			while (motion == FRONT && q_motion.head != q_motion.tail)
 1479              		.loc 1 558 0 is_stmt 0 discriminator 1
 1480 0030 344B     		ldr	r3, .L159
 1481 0032 D3F80021 		ldr	r2, [r3, #256]
 1482 0036 D3F80431 		ldr	r3, [r3, #260]
 1483 003a 9A42     		cmp	r2, r3
 1484 003c F0D1     		bne	.L149
 1485              	.L148:
 1486              	.LVL124:
 562:Src/motion_plan.c **** 			}
 563:Src/motion_plan.c **** 			buff = START << 4 | buff;
 564:Src/motion_plan.c **** 			enq_motion(&q_buff, buff);
 1487              		.loc 1 564 0 is_stmt 1
 1488 003e 45F05001 		orr	r1, r5, #80
 1489 0042 6846     		mov	r0, sp
 1490 0044 FFF7FEFF 		bl	enq_motion
 1491              	.LVL125:
 1492              	.L141:
 1493              	.LBE4:
 551:Src/motion_plan.c **** 	{
 1494              		.loc 1 551 0
 1495 0048 2E4B     		ldr	r3, .L159
 1496 004a D3F80021 		ldr	r2, [r3, #256]
 1497 004e D3F80431 		ldr	r3, [r3, #260]
 1498 0052 9A42     		cmp	r2, r3
 1499 0054 4DD0     		beq	.L157
 1500              	.LVL126:
 1501              	.LBB5:
 554:Src/motion_plan.c **** 		{
 1502              		.loc 1 554 0
 1503 0056 052C     		cmp	r4, #5
 1504 0058 F6D8     		bhi	.L141
 1505 005a 01A3     		adr	r3, .L143
 1506 005c 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 1507              		.p2align 2
 1508              	.L143:
 1509 0060 B7000000 		.word	.L142+1
 1510 0064 A7000000 		.word	.L155+1
 1511 0068 D5000000 		.word	.L145+1
 1512 006c 49000000 		.word	.L141+1
 1513 0070 49000000 		.word	.L141+1
 1514 0074 15000000 		.word	.L146+1
 1515              	.LVL127:
 1516              		.p2align 1
 1517              	.L152:
 565:Src/motion_plan.c **** 			break;
 566:Src/motion_plan.c **** 		case FRONT:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 39


 567:Src/motion_plan.c **** 			while (motion == FRONT && q_motion.head != q_motion.tail)
 568:Src/motion_plan.c **** 			{
 569:Src/motion_plan.c **** 				buff++;
 1518              		.loc 1 569 0
 1519 0078 0135     		adds	r5, r5, #1
 1520              	.LVL128:
 1521 007a EDB2     		uxtb	r5, r5
 1522              	.LVL129:
 570:Src/motion_plan.c **** 				motion = deq_motion(&q_motion);
 1523              		.loc 1 570 0
 1524 007c 2148     		ldr	r0, .L159
 1525 007e FFF7FEFF 		bl	deq_motion
 1526              	.LVL130:
 1527 0082 0446     		mov	r4, r0
 1528              	.LVL131:
 1529              	.L144:
 567:Src/motion_plan.c **** 			{
 1530              		.loc 1 567 0
 1531 0084 012C     		cmp	r4, #1
 1532 0086 06D1     		bne	.L151
 567:Src/motion_plan.c **** 			{
 1533              		.loc 1 567 0 is_stmt 0 discriminator 1
 1534 0088 1E4B     		ldr	r3, .L159
 1535 008a D3F80021 		ldr	r2, [r3, #256]
 1536 008e D3F80431 		ldr	r3, [r3, #260]
 1537 0092 9A42     		cmp	r2, r3
 1538 0094 F0D1     		bne	.L152
 1539              	.L151:
 571:Src/motion_plan.c **** 			}
 572:Src/motion_plan.c **** 			if (motion == GOAL)
 1540              		.loc 1 572 0 is_stmt 1
 1541 0096 062C     		cmp	r4, #6
 1542 0098 07D0     		beq	.L158
 1543              	.LVL132:
 573:Src/motion_plan.c **** 			{
 574:Src/motion_plan.c **** 				buff = GOAL << 4 | buff;
 575:Src/motion_plan.c **** 				enq_motion(&q_buff, buff);
 576:Src/motion_plan.c **** 			}
 577:Src/motion_plan.c **** 			else
 578:Src/motion_plan.c **** 			{
 579:Src/motion_plan.c **** 				buff = FRONT << 4 | buff;
 580:Src/motion_plan.c **** 				enq_motion(&q_buff, buff);
 1544              		.loc 1 580 0
 1545 009a 45F01001 		orr	r1, r5, #16
 1546 009e 6846     		mov	r0, sp
 1547 00a0 FFF7FEFF 		bl	enq_motion
 1548              	.LVL133:
 1549 00a4 D0E7     		b	.L141
 1550              	.LVL134:
 1551              	.L155:
 553:Src/motion_plan.c **** 		switch (motion)
 1552              		.loc 1 553 0
 1553 00a6 0025     		movs	r5, #0
 1554 00a8 ECE7     		b	.L144
 1555              	.LVL135:
 1556              	.L158:
 575:Src/motion_plan.c **** 			}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 40


 1557              		.loc 1 575 0
 1558 00aa 45F06001 		orr	r1, r5, #96
 1559 00ae 6846     		mov	r0, sp
 1560 00b0 FFF7FEFF 		bl	enq_motion
 1561              	.LVL136:
 1562 00b4 C8E7     		b	.L141
 1563              	.LVL137:
 1564              	.L142:
 581:Src/motion_plan.c **** 			}
 582:Src/motion_plan.c **** 			break;
 583:Src/motion_plan.c **** 		case LEFT:
 584:Src/motion_plan.c **** 			buff = LEFT << 4;
 585:Src/motion_plan.c **** 			enq_motion(&q_buff, buff);
 1565              		.loc 1 585 0
 1566 00b6 0021     		movs	r1, #0
 1567 00b8 6846     		mov	r0, sp
 1568 00ba FFF7FEFF 		bl	enq_motion
 1569              	.LVL138:
 586:Src/motion_plan.c **** 			motion = deq_motion(&q_motion);
 1570              		.loc 1 586 0
 1571 00be 1148     		ldr	r0, .L159
 1572 00c0 FFF7FEFF 		bl	deq_motion
 1573              	.LVL139:
 1574 00c4 0446     		mov	r4, r0
 1575              	.LVL140:
 587:Src/motion_plan.c **** 			if(motion==GOAL){
 1576              		.loc 1 587 0
 1577 00c6 0628     		cmp	r0, #6
 1578 00c8 BED1     		bne	.L141
 1579              	.LVL141:
 588:Src/motion_plan.c **** 				buff = GOAL << 4;
 589:Src/motion_plan.c **** 				enq_motion(&q_buff, buff);
 1580              		.loc 1 589 0
 1581 00ca 6021     		movs	r1, #96
 1582 00cc 6846     		mov	r0, sp
 1583              	.LVL142:
 1584 00ce FFF7FEFF 		bl	enq_motion
 1585              	.LVL143:
 1586 00d2 B9E7     		b	.L141
 1587              	.LVL144:
 1588              	.L145:
 590:Src/motion_plan.c **** 			}
 591:Src/motion_plan.c **** 			break;
 592:Src/motion_plan.c **** 		case RIGHT:
 593:Src/motion_plan.c **** 			buff = RIGHT << 4;
 594:Src/motion_plan.c **** 			enq_motion(&q_buff, buff);
 1589              		.loc 1 594 0
 1590 00d4 2021     		movs	r1, #32
 1591 00d6 6846     		mov	r0, sp
 1592 00d8 FFF7FEFF 		bl	enq_motion
 1593              	.LVL145:
 595:Src/motion_plan.c **** 			motion = deq_motion(&q_motion);
 1594              		.loc 1 595 0
 1595 00dc 0948     		ldr	r0, .L159
 1596 00de FFF7FEFF 		bl	deq_motion
 1597              	.LVL146:
 1598 00e2 0446     		mov	r4, r0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 41


 1599              	.LVL147:
 596:Src/motion_plan.c **** 			if(motion==GOAL){
 1600              		.loc 1 596 0
 1601 00e4 0628     		cmp	r0, #6
 1602 00e6 AFD1     		bne	.L141
 1603              	.LVL148:
 597:Src/motion_plan.c **** 				buff = GOAL << 4;
 598:Src/motion_plan.c **** 				enq_motion(&q_buff, buff);
 1604              		.loc 1 598 0
 1605 00e8 6021     		movs	r1, #96
 1606 00ea 6846     		mov	r0, sp
 1607              	.LVL149:
 1608 00ec FFF7FEFF 		bl	enq_motion
 1609              	.LVL150:
 1610 00f0 AAE7     		b	.L141
 1611              	.LVL151:
 1612              	.L157:
 1613              	.LBE5:
 599:Src/motion_plan.c **** 			}
 600:Src/motion_plan.c **** 			break;
 601:Src/motion_plan.c **** 		default:
 602:Src/motion_plan.c **** 			break;
 603:Src/motion_plan.c **** 		}
 604:Src/motion_plan.c **** 	}
 605:Src/motion_plan.c **** 	q_motion = q_buff;
 1614              		.loc 1 605 0
 1615 00f2 4FF48472 		mov	r2, #264
 1616 00f6 6946     		mov	r1, sp
 1617 00f8 0248     		ldr	r0, .L159
 1618 00fa FFF7FEFF 		bl	memcpy
 1619              	.LVL152:
 606:Src/motion_plan.c **** }
 1620              		.loc 1 606 0
 1621 00fe 43B0     		add	sp, sp, #268
 1622              	.LCFI8:
 1623              		.cfi_def_cfa_offset 12
 1624              		@ sp needed
 1625 0100 30BD     		pop	{r4, r5, pc}
 1626              	.LVL153:
 1627              	.L160:
 1628 0102 00BF     		.align	2
 1629              	.L159:
 1630 0104 00000000 		.word	q_motion
 1631              		.cfi_endproc
 1632              	.LFE134:
 1634              		.section	.text.Plan_Fast,"ax",%progbits
 1635              		.align	1
 1636              		.global	Plan_Fast
 1637              		.syntax unified
 1638              		.thumb
 1639              		.thumb_func
 1640              		.fpu fpv4-sp-d16
 1642              	Plan_Fast:
 1643              	.LFB135:
 607:Src/motion_plan.c **** 
 608:Src/motion_plan.c **** void Plan_Fast(void)
 609:Src/motion_plan.c **** {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 42


 1644              		.loc 1 609 0
 1645              		.cfi_startproc
 1646              		@ args = 0, pretend = 0, frame = 0
 1647              		@ frame_needed = 0, uses_anonymous_args = 0
 1648 0000 08B5     		push	{r3, lr}
 1649              	.LCFI9:
 1650              		.cfi_def_cfa_offset 8
 1651              		.cfi_offset 3, -8
 1652              		.cfi_offset 14, -4
 610:Src/motion_plan.c **** 	unsigned char motion_h, motion_l;
 611:Src/motion_plan.c **** 
 612:Src/motion_plan.c **** 	adcStart();
 1653              		.loc 1 612 0
 1654 0002 FFF7FEFF 		bl	adcStart
 1655              	.LVL154:
 1656              	.L162:
 613:Src/motion_plan.c **** 	while (sen_front.is_wall == FALSE)
 1657              		.loc 1 613 0 discriminator 1
 1658 0006 274B     		ldr	r3, .L175
 1659 0008 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1660 000a 002B     		cmp	r3, #0
 1661 000c FBD0     		beq	.L162
 614:Src/motion_plan.c **** 	{
 615:Src/motion_plan.c **** 	}
 616:Src/motion_plan.c **** 	Output_Buzzer(HZ_G);
 1662              		.loc 1 616 0
 1663 000e 6620     		movs	r0, #102
 1664 0010 FFF7FEFF 		bl	Output_Buzzer
 1665              	.LVL155:
 617:Src/motion_plan.c **** 	HAL_Delay(2500);
 1666              		.loc 1 617 0
 1667 0014 40F6C410 		movw	r0, #2500
 1668 0018 FFF7FEFF 		bl	HAL_Delay
 1669              	.LVL156:
 618:Src/motion_plan.c **** 	gyro_offset_calc_reset();
 1670              		.loc 1 618 0
 1671 001c FFF7FEFF 		bl	gyro_offset_calc_reset
 1672              	.LVL157:
 619:Src/motion_plan.c **** 	HAL_Delay(2500);
 1673              		.loc 1 619 0
 1674 0020 40F6C410 		movw	r0, #2500
 1675 0024 FFF7FEFF 		bl	HAL_Delay
 1676              	.LVL158:
 620:Src/motion_plan.c **** 	flag_motor = TRUE;
 1677              		.loc 1 620 0
 1678 0028 1F4B     		ldr	r3, .L175+4
 1679 002a 0122     		movs	r2, #1
 1680 002c 1A70     		strb	r2, [r3]
 621:Src/motion_plan.c **** 	enc.offset = 0;
 1681              		.loc 1 621 0
 1682 002e 1F4B     		ldr	r3, .L175+8
 1683 0030 0022     		movs	r2, #0
 1684 0032 9A60     		str	r2, [r3, #8]	@ float
 622:Src/motion_plan.c **** 
 623:Src/motion_plan.c **** 	while (q_motion.head != q_motion.tail)
 1685              		.loc 1 623 0
 1686 0034 02E0     		b	.L164
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 43


 1687              	.LVL159:
 1688              	.L169:
 624:Src/motion_plan.c **** 	{
 625:Src/motion_plan.c **** 		motion_h = deq_motion(&q_motion);
 626:Src/motion_plan.c **** 		motion_l = motion_h & 0b1111;
 627:Src/motion_plan.c **** 		motion_h = motion_h >> 4;
 628:Src/motion_plan.c **** 
 629:Src/motion_plan.c **** 		switch (motion_h)
 630:Src/motion_plan.c **** 		{
 631:Src/motion_plan.c **** 		case START:
 632:Src/motion_plan.c **** 			Motion_StartFast(motion_l);
 1689              		.loc 1 632 0
 1690 0036 1046     		mov	r0, r2
 1691 0038 FFF7FEFF 		bl	Motion_StartFast
 1692              	.LVL160:
 1693              	.L164:
 623:Src/motion_plan.c **** 	{
 1694              		.loc 1 623 0
 1695 003c 1C4B     		ldr	r3, .L175+12
 1696 003e D3F80021 		ldr	r2, [r3, #256]
 1697 0042 D3F80431 		ldr	r3, [r3, #260]
 1698 0046 9A42     		cmp	r2, r3
 1699 0048 28D0     		beq	.L174
 625:Src/motion_plan.c **** 		motion_l = motion_h & 0b1111;
 1700              		.loc 1 625 0
 1701 004a 1948     		ldr	r0, .L175+12
 1702 004c FFF7FEFF 		bl	deq_motion
 1703              	.LVL161:
 626:Src/motion_plan.c **** 		motion_h = motion_h >> 4;
 1704              		.loc 1 626 0
 1705 0050 00F00F02 		and	r2, r0, #15
 1706              	.LVL162:
 627:Src/motion_plan.c **** 
 1707              		.loc 1 627 0
 1708 0054 C0F30713 		ubfx	r3, r0, #4, #8
 1709              	.LVL163:
 629:Src/motion_plan.c **** 		{
 1710              		.loc 1 629 0
 1711 0058 062B     		cmp	r3, #6
 1712 005a EFD8     		bhi	.L164
 1713 005c 01A1     		adr	r1, .L166
 1714 005e 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 1715 0062 00BF     		.p2align 2
 1716              	.L166:
 1717 0064 81000000 		.word	.L165+1
 1718 0068 87000000 		.word	.L167+1
 1719 006c 8F000000 		.word	.L168+1
 1720 0070 3D000000 		.word	.L164+1
 1721 0074 3D000000 		.word	.L164+1
 1722 0078 37000000 		.word	.L169+1
 1723 007c 95000000 		.word	.L170+1
 1724              		.p2align 1
 1725              	.L165:
 633:Src/motion_plan.c **** 			break;
 634:Src/motion_plan.c **** 		case LEFT:
 635:Src/motion_plan.c **** 			Motion_SlalomLeft();
 1726              		.loc 1 635 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 44


 1727 0080 FFF7FEFF 		bl	Motion_SlalomLeft
 1728              	.LVL164:
 636:Src/motion_plan.c **** 			break;
 1729              		.loc 1 636 0
 1730 0084 DAE7     		b	.L164
 1731              	.LVL165:
 1732              	.L167:
 637:Src/motion_plan.c **** 		case FRONT:
 638:Src/motion_plan.c **** 			Motion_StraightFast(motion_l);
 1733              		.loc 1 638 0
 1734 0086 1046     		mov	r0, r2
 1735 0088 FFF7FEFF 		bl	Motion_StraightFast
 1736              	.LVL166:
 639:Src/motion_plan.c **** 			break;
 1737              		.loc 1 639 0
 1738 008c D6E7     		b	.L164
 1739              	.LVL167:
 1740              	.L168:
 640:Src/motion_plan.c **** 		case RIGHT:
 641:Src/motion_plan.c **** 			Motion_SlalomRight();
 1741              		.loc 1 641 0
 1742 008e FFF7FEFF 		bl	Motion_SlalomRight
 1743              	.LVL168:
 642:Src/motion_plan.c **** 			break;
 1744              		.loc 1 642 0
 1745 0092 D3E7     		b	.L164
 1746              	.LVL169:
 1747              	.L170:
 643:Src/motion_plan.c **** 		case GOAL:
 644:Src/motion_plan.c **** 			Motion_GoalFast(motion_l);
 1748              		.loc 1 644 0
 1749 0094 1046     		mov	r0, r2
 1750 0096 FFF7FEFF 		bl	Motion_GoalFast
 1751              	.LVL170:
 645:Src/motion_plan.c **** 			break;
 1752              		.loc 1 645 0
 1753 009a CFE7     		b	.L164
 1754              	.L174:
 646:Src/motion_plan.c **** 		}
 647:Src/motion_plan.c **** 	}
 648:Src/motion_plan.c **** 	flag_motor = FALSE;
 1755              		.loc 1 648 0
 1756 009c 024B     		ldr	r3, .L175+4
 1757 009e 0022     		movs	r2, #0
 1758 00a0 1A70     		strb	r2, [r3]
 649:Src/motion_plan.c **** }...
 1759              		.loc 1 649 0
 1760 00a2 08BD     		pop	{r3, pc}
 1761              	.L176:
 1762              		.align	2
 1763              	.L175:
 1764 00a4 00000000 		.word	sen_front
 1765 00a8 00000000 		.word	flag_motor
 1766 00ac 00000000 		.word	enc
 1767 00b0 00000000 		.word	q_motion
 1768              		.cfi_endproc
 1769              	.LFE135:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 45


 1771              		.comm	q_motion,264,4
 1772              		.global	flag_search
 1773              		.section	.bss.flag_search,"aw",%nobits
 1776              	flag_search:
 1777 0000 00       		.space	1
 1778              		.text
 1779              	.Letext0:
 1780              		.file 2 "Inc/maze_info.h"
 1781              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1782              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1783              		.file 5 "Inc/filter.h"
 1784              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 1785              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1786              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1787              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1788              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1789              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 1790              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1791              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1792              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1793              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1794              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1795              		.file 17 "Inc/spi.h"
 1796              		.file 18 "Inc/tim.h"
 1797              		.file 19 "Inc/interface.h"
 1798              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1799              		.file 21 "Inc/motion.h"
 1800              		.file 22 "Inc/maze_analysis.h"
 1801              		.file 23 "<built-in>"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 46


DEFINED SYMBOLS
                            *ABS*:00000000 motion_plan.c
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:18     .text.Que_init_motion:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:25     .text.Que_init_motion:00000000 Que_init_motion
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:60     .text.enq_motion:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:67     .text.enq_motion:00000000 enq_motion
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:99     .text.deq_motion:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:106    .text.deq_motion:00000000 deq_motion
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:128    .text.Update_Position:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:135    .text.Update_Position:00000000 Update_Position
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:148    .text.Update_Position:0000000a $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:162    .text.Update_Position:0000001e $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:166    .text.Update_Position:00000022 $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:223    .text.Update_Position:00000070 $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:227    .text.Update_Position:00000074 $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:268    .text.Update_Position:000000a8 $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:272    .text.Update_Position:000000ac $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:329    .text.Update_Position:000000f8 $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:333    .text.Update_Position:000000fc $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:390    .text.Update_Position:00000148 $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:394    .text.Update_Position:0000014c $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:447    .text.Update_Position:0000018c $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:453    .text.Maze_Next_Motion:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:460    .text.Maze_Next_Motion:00000000 Maze_Next_Motion
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:490    .text.Maze_Next_Motion:0000001a $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:494    .text.Maze_Next_Motion:00000022 $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:882    .text.Maze_Next_Motion:00000290 $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:887    .text.Maze_Next_Motion:0000029c $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1018   .text.Maze_Next_Motion:00000350 $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1023   .text.Plan_Adachi:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1030   .text.Plan_Adachi:00000000 Plan_Adachi
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1127   .text.Plan_Adachi:0000007c $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1187   .text.Plan_Adachi:000000b4 $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1197   .text.Plan_AllSearch:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1204   .text.Plan_AllSearch:00000000 Plan_AllSearch
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1277   .text.Plan_AllSearch:00000054 $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1282   .text.Plan_AllSearch:00000068 $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1322   .text.Plan_AllSearch:0000008c $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1329   .text.Plan_Root:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1336   .text.Plan_Root:00000000 Plan_Root
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1407   .text.Plan_Root:00000054 $d
                            *COM*:00000108 q_motion
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1415   .text.Plan_Compress:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1422   .text.Plan_Compress:00000000 Plan_Compress
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1509   .text.Plan_Compress:00000060 $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1516   .text.Plan_Compress:00000078 $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1630   .text.Plan_Compress:00000104 $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1635   .text.Plan_Fast:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1642   .text.Plan_Fast:00000000 Plan_Fast
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1717   .text.Plan_Fast:00000064 $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1724   .text.Plan_Fast:00000080 $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1764   .text.Plan_Fast:000000a4 $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1776   .bss.flag_search:00000000 flag_search
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1777   .bss.flag_search:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:153    .text.Update_Position:0000000f $d
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:153    .text.Update_Position:00000010 $t
C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1132   .text.Plan_Adachi:00000081 $d
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s 			page 47


C:\Users\kotaro\AppData\Local\Temp\ccQR11xf.s:1132   .text.Plan_Adachi:00000082 $t

UNDEFINED SYMBOLS
direction
position
maze
adcStart
Output_Buzzer
HAL_Delay
gyro_offset_calc_reset
Maze_Init
Maze_Set
Motion_Start
Maze_Get_Wall
Maze_CreateMap
Motion_SlalomLeft
Motion_Straight
Motion_SlalomRight
Motion_Uturn
Motion_Kabeate
Motion_Goal
sen_front
flag_motor
enc
Straight_half_accel
Motion_Restart
Maze_CreateAllMap
Maze_CreateFastMap
memcpy
Motion_StartFast
Motion_StraightFast
Motion_GoalFast
